{"name":"lmqzzz","settings":"{\"settings\":\"{\\n  \\\"C_Cpp.clang_format_fallbackStyle\\\": \\\"{ BasedOnStyle: Google, IndentWidth: 4, ColumnLimit: 0}\\\",\\n  \\\"[cpp]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"ms-vscode.cpptools\\\"\\n  },\\n  \\\"[css]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\n  },\\n  \\\"[dockercompose]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\n  },\\n  \\\"[dockerfile]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"ms-azuretools.vscode-docker\\\"\\n  },\\n  \\\"[html]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\n  },\\n  \\\"[javascript]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\n  },\\n  \\\"[javascriptreact]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\n  },\\n  \\\"[json]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\n  },\\n  \\\"[jsonc]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\n  },\\n  \\\"[less]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\n  },\\n  \\\"[python]\\\": {\\n    \\\"editor.codeActionsOnSave\\\": {\\n      \\\"source.fixAll\\\": \\\"always\\\",\\n      \\\"source.organizeImports\\\": \\\"always\\\"\\n    },\\n    \\\"editor.defaultFormatter\\\": \\\"charliermarsh.ruff\\\",\\n    \\\"editor.formatOnType\\\": false\\n  },\\n  \\\"[shellscript]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"foxundermoon.shell-format\\\"\\n  },\\n  \\\"[svelte]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"svelte.svelte-vscode\\\"\\n  },\\n  \\\"[typescript]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\n  },\\n  \\\"[typescriptreact]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\n  },\\n  \\\"apc.activityBar\\\": {\\n    \\\"hideSettings\\\": true,\\n    \\\"itemMargin\\\": -15,\\n    \\\"itemSize\\\": 40,\\n    \\\"position\\\": \\\"bottom\\\",\\n    \\\"size\\\": 24\\n  },\\n  \\\"apc.electron\\\": {\\n    \\\"frame\\\": false,\\n    \\\"titleBarStyle\\\": \\\"hidden\\\"\\n  },\\n  \\\"apc.font.family\\\": \\\"SF Pro\\\",\\n  \\\"apc.header\\\": {\\n    \\\"compact\\\": 20,\\n    \\\"fontSize\\\": 17\\n  },\\n  // \\\"apc.imports\\\": [\\\"${userHome}/arch/vscode/custom.css\\\"],\\n  // \\\"apc.imports\\\": [\\\"${userHome}/Documents/custom.css\\\"],\\n  \\\"apc.listRow\\\": {\\n    \\\"fontSize\\\": 18,\\n    \\\"height\\\": 20\\n  },\\n  \\\"apc.menubar.compact\\\": true,\\n  \\\"apc.monospace.font.family\\\": \\\"JetBrainsMono Nerd Font\\\",\\n  \\\"apc.sidebar.titlebar\\\": {\\n    \\\"fontSize\\\": 22,\\n    \\\"height\\\": 20\\n  },\\n  \\\"apc.statusBar\\\": {\\n    \\\"fontSize\\\": 18,\\n    \\\"height\\\": 24,\\n    \\\"position\\\": \\\"editor-bottom\\\"\\n  },\\n  \\\"breadcrumbs.enabled\\\": false,\\n  \\\"cSpell.languageSettings\\\": [\\n    {\\n      \\\"ignoreRegExpList\\\": [\\\"/^\\\\\\\\s*from.*import/gm\\\"],\\n      \\\"languageId\\\": \\\"python\\\"\\n    }\\n  ],\\n  \\\"cloudcode.duetAI.project\\\": \\\"pj4522\\\",\\n  \\\"code-runner.customCommand\\\": \\\"cd $dir && g++ -std=c++20 -DLMQZZZ -Wl,--stack,1000000000 $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt\\\",\\n  \\\"code-runner.executorMap\\\": {\\n    \\\"cpp\\\": \\\"cd $dir && g++ -std=c++20 -DLMQZZZ -Wl,--stack,1000000000 $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt < C.inp > C.out 2> debug.txt\\\"\\n  },\\n  \\\"code-runner.runInTerminal\\\": true,\\n  \\\"code-runner.saveFileBeforeRun\\\": true,\\n  \\\"code-runner.saveAllFilesBeforeRun\\\": true,\\n  \\\"code-runner.terminalRoot\\\": \\\"/\\\",\\n  \\\"console-ninja.featureSet\\\": \\\"Community\\\",\\n  \\\"css.validate\\\": false,\\n  \\\"debug.console.fontFamily\\\": \\\"JetBrainsMono Nerd Font\\\",\\n  \\\"diffEditor.codeLens\\\": true,\\n  \\\"diffEditor.ignoreTrimWhitespace\\\": false,\\n  \\\"diffEditor.wordWrap\\\": \\\"off\\\",\\n  \\\"editor.acceptSuggestionOnEnter\\\": \\\"on\\\",\\n  \\\"editor.autoClosingBrackets\\\": \\\"languageDefined\\\",\\n  \\\"editor.codeActionsOnSave\\\": {\\n    \\\"source.fixAll\\\": \\\"always\\\",\\n    \\\"source.fixAll.eslint\\\": \\\"always\\\",\\n    \\\"source.sortMembers\\\": \\\"always\\\"\\n  },\\n  \\\"editor.cursorBlinking\\\": \\\"expand\\\",\\n  \\\"editor.cursorSmoothCaretAnimation\\\": \\\"on\\\",\\n  \\\"editor.cursorSurroundingLines\\\": 0,\\n  \\\"editor.cursorWidth\\\": 5,\\n  \\\"editor.fastScrollSensitivity\\\": 10,\\n  \\\"editor.folding\\\": true,\\n  \\\"editor.fontFamily\\\": \\\"JetBrainsMono Nerd Font\\\",\\n  \\\"editor.fontLigatures\\\": true,\\n  \\\"editor.fontSize\\\": 24,\\n  \\\"editor.formatOnPaste\\\": false,\\n  \\\"editor.formatOnSave\\\": true,\\n  \\\"editor.formatOnSaveMode\\\": \\\"file\\\",\\n  \\\"editor.formatOnType\\\": false,\\n  \\\"editor.glyphMargin\\\": true,\\n  \\\"editor.guides.bracketPairs\\\": false,\\n  \\\"editor.guides.indentation\\\": false,\\n  \\\"editor.inlayHints.enabled\\\": \\\"off\\\",\\n  \\\"editor.inlineSuggest.enabled\\\": true,\\n  \\\"editor.largeFileOptimizations\\\": false,\\n  \\\"editor.letterSpacing\\\": 0,\\n  \\\"editor.lineHeight\\\": 1.4,\\n  \\\"editor.lineNumbers\\\": \\\"on\\\",\\n  \\\"editor.linkedEditing\\\": true,\\n  \\\"editor.minimap.enabled\\\": true,\\n  \\\"editor.minimap.maxColumn\\\": 50,\\n  \\\"editor.minimap.renderCharacters\\\": false,\\n  \\\"editor.minimap.scale\\\": 2,\\n  \\\"editor.minimap.showSlider\\\": \\\"always\\\",\\n  \\\"editor.minimap.side\\\": \\\"left\\\",\\n  \\\"editor.mouseWheelZoom\\\": true,\\n  \\\"editor.quickSuggestions\\\": {\\n    \\\"comments\\\": \\\"on\\\",\\n    \\\"other\\\": \\\"on\\\",\\n    \\\"strings\\\": \\\"on\\\"\\n  },\\n  \\\"editor.renderLineHighlight\\\": \\\"all\\\",\\n  \\\"editor.scrollBeyondLastLine\\\": true,\\n  \\\"editor.scrollbar.horizontalScrollbarSize\\\": 10,\\n  \\\"editor.scrollbar.verticalScrollbarSize\\\": 10,\\n  \\\"editor.smoothScrolling\\\": true,\\n  \\\"editor.snippetSuggestions\\\": \\\"inline\\\",\\n  \\\"editor.stickyScroll.defaultModel\\\": \\\"indentationModel\\\",\\n  \\\"editor.stickyScroll.enabled\\\": true,\\n  \\\"editor.tabCompletion\\\": \\\"on\\\",\\n  \\\"editor.tabSize\\\": 4,\\n  \\\"editor.unicodeHighlight.ambiguousCharacters\\\": false,\\n  \\\"editor.unicodeHighlight.invisibleCharacters\\\": false,\\n  \\\"editor.wordWrap\\\": \\\"off\\\",\\n  \\\"emmet.includeLanguages\\\": {\\n    \\\"django-html\\\": \\\"html\\\"\\n  },\\n  \\\"emmet.triggerExpansionOnTab\\\": true,\\n  \\\"eslint.validate\\\": [\\\"javascript\\\", \\\"javascriptreact\\\", \\\"typescript\\\", \\\"typescriptreact\\\"],\\n  \\\"explorer.incrementalNaming\\\": \\\"smart\\\",\\n  \\\"explorer.sortOrder\\\": \\\"type\\\",\\n  \\\"files.exclude\\\": {\\n    \\\"**/.DS_Store\\\": true,\\n    \\\"**/.git\\\": true,\\n    \\\"**/.hg\\\": true,\\n    \\\"**/.svn\\\": true,\\n    \\\"**/CVS\\\": true,\\n    \\\"**/Thumbs.db\\\": true,\\n    \\\"**/node_modules\\\": true\\n  },\\n  \\\"github.copilot.enable\\\": {\\n    \\\"*\\\": true,\\n    \\\"markdown\\\": true,\\n    \\\"plaintext\\\": false,\\n    \\\"scminput\\\": false\\n  },\\n  \\\"inlineFold.maskChar\\\": \\\"\\\",\\n  \\\"inlineFold.regex\\\": \\\"(\\\\\\\\s[^\\\\\\\\s]+=['\\\\\\\"{].*['\\\\\\\"}])\\\",\\n  \\\"inlineFold.regexFlags\\\": \\\"g\\\",\\n  \\\"inlineFold.regexGroup\\\": 1,\\n  \\\"inlineFold.unfoldOnLineSelect\\\": true,\\n  \\\"inlineFold.useGlobal\\\": true,\\n  \\\"latex-workshop.latex.build.forceRecipeUsage\\\": false,\\n  \\\"latex-workshop.view.pdf.invert\\\": 1,\\n  \\\"material-icon-theme.hidesExplorerArrows\\\": true,\\n  \\\"multiCommand.commands\\\": {\\n    \\\"multiCommand.dark\\\": {\\n      \\\"sequence\\\": [\\\"settings.cycle.dark\\\"]\\n    },\\n    \\\"multiCommand.focus\\\": {\\n      \\\"sequence\\\": [\\\"settings.cycle.focus\\\"]\\n    },\\n    \\\"multiCommand.lqh\\\": {\\n      \\\"sequence\\\": [\\\"settings.cycle.focus\\\", \\\"settings.cycle.dark\\\"]\\n    }\\n  },\\n  \\\"notebook.breadcrumbs.showCodeCells\\\": false,\\n  \\\"notebook.cellToolbarLocation\\\": {\\n    \\\"default\\\": \\\"hidden\\\"\\n  },\\n  \\\"notebook.codeActionsOnSave\\\": {\\n    \\\"source.organizeImports\\\": true\\n  },\\n  \\\"notebook.consolidatedOutputButton\\\": false,\\n  \\\"notebook.consolidatedRunButton\\\": false,\\n  \\\"notebook.editorOptionsCustomizations\\\": {\\n    \\\"editor.glyphMargin\\\": false\\n  },\\n  \\\"notebook.formatOnCellExecution\\\": true,\\n  \\\"notebook.formatOnSave.enabled\\\": true,\\n  \\\"notebook.globalToolbar\\\": false,\\n  \\\"notebook.globalToolbarShowLabel\\\": \\\"never\\\",\\n  \\\"notebook.insertToolbarLocation\\\": \\\"hidden\\\",\\n  \\\"notebook.output.wordWrap\\\": true,\\n  \\\"notebook.showCellStatusBar\\\": \\\"hidden\\\",\\n  \\\"notebook.showFoldingControls\\\": \\\"never\\\",\\n  \\\"prettier.arrowParens\\\": \\\"avoid\\\",\\n  \\\"prettier.bracketSameLine\\\": true,\\n  \\\"prettier.configPath\\\": \\\"C://Users//Admin//arch//conf//.prettierrc\\\",\\n  \\\"prettier.jsxSingleQuote\\\": true,\\n  \\\"prettier.printWidth\\\": 100,\\n  \\\"prettier.semi\\\": false,\\n  \\\"prettier.singleQuote\\\": true,\\n  \\\"prettier.trailingComma\\\": \\\"none\\\",\\n  \\\"python.analysis.completeFunctionParens\\\": true,\\n  \\\"python.terminal.activateEnvironment\\\": false,\\n  \\\"redhat.telemetry.enabled\\\": false,\\n  \\\"ruff.format.args\\\": [\\\"--config=${userHome}/arch/conf/ruff.toml\\\"],\\n  \\\"settings.cycle\\\": [\\n    {\\n      \\\"id\\\": \\\"focus\\\",\\n      \\\"overrideWorkspaceSettings\\\": true,\\n      \\\"values\\\": [\\n        {\\n          \\\"editor.glyphMargin\\\": false,\\n          \\\"editor.lineNumbers\\\": \\\"off\\\",\\n          \\\"editor.minimap.enabled\\\": false,\\n          \\\"workbench.activityBar.location\\\": \\\"hidden\\\",\\n          \\\"workbench.editor.showTabs\\\": \\\"none\\\",\\n          \\\"workbench.statusBar.visible\\\": false\\n        },\\n        {\\n          \\\"editor.glyphMargin\\\": true,\\n          \\\"editor.lineNumbers\\\": \\\"on\\\",\\n          \\\"editor.minimap.enabled\\\": true,\\n          \\\"workbench.activityBar.location\\\": \\\"side\\\",\\n          \\\"workbench.editor.showTabs\\\": \\\"multiple\\\",\\n          \\\"workbench.statusBar.visible\\\": true\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": \\\"dark\\\",\\n      \\\"overrideWorkspaceSettings\\\": true,\\n      \\\"values\\\": [\\n        {\\n          \\\"workbench.colorCustomizations\\\": {\\n            \\\"activityBar.background\\\": \\\"#000\\\",\\n            \\\"button.background\\\": \\\"#000\\\",\\n            \\\"commandCenter.activeBackground\\\": \\\"#000\\\",\\n            \\\"commandCenter.background\\\": \\\"#000\\\",\\n            \\\"editor.background\\\": \\\"#000\\\",\\n            \\\"editor.findMatchBackground\\\": \\\"#ffffff55\\\",\\n            \\\"editor.findMatchHighlightBackground\\\": \\\"#ffffff55\\\",\\n            \\\"editor.lineHighlightBackground\\\": \\\"#000\\\",\\n            \\\"editor.lineHighlightBorder\\\": \\\"#666\\\",\\n            \\\"editor.selectionHighlightBackground\\\": \\\"#ffffff55\\\",\\n            \\\"editor.wordHighlightBackground\\\": \\\"#ffffff55\\\",\\n            \\\"editor.wordHighlightStrongBackground\\\": \\\"#ffffff55\\\",\\n            \\\"editorGroupHeader.tabsBackground\\\": \\\"#000\\\",\\n            \\\"editorGutter.background\\\": \\\"#000\\\",\\n            \\\"editorIndentGuide.activeBackground1\\\": \\\"#333\\\",\\n            \\\"editorIndentGuide.background1\\\": \\\"#000\\\",\\n            \\\"editorStickyScroll.background\\\": \\\"#333\\\",\\n            \\\"input.background\\\": \\\"#000\\\",\\n            \\\"input.border\\\": \\\"#333\\\",\\n            \\\"input.foreground\\\": \\\"#fff\\\",\\n            \\\"list.activeSelectionBackground\\\": \\\"#000\\\",\\n            \\\"list.activeSelectionForeground\\\": \\\"#fff\\\",\\n            \\\"list.focusBackground\\\": \\\"#000\\\",\\n            \\\"list.focusForeground\\\": \\\"#ccc\\\",\\n            \\\"list.focusOutline\\\": \\\"#000\\\",\\n            \\\"list.hoverBackground\\\": \\\"#000\\\",\\n            \\\"list.hoverForeground\\\": \\\"#ddd\\\",\\n            \\\"list.inactiveSelectionBackground\\\": \\\"#000\\\",\\n            \\\"list.inactiveSelectionForeground\\\": \\\"#ccc\\\",\\n            \\\"minimap.selectionHighlight\\\": \\\"#ffffff88\\\",\\n            \\\"minimap.warningHighlight\\\": \\\"#000\\\",\\n            \\\"minimapSlider.activeBackground\\\": \\\"#ffffff66\\\",\\n            \\\"minimapSlider.background\\\": \\\"#ffffff22\\\",\\n            \\\"minimapSlider.hoverBackground\\\": \\\"#ffffff44\\\",\\n            \\\"panel.background\\\": \\\"#000\\\",\\n            \\\"quickInput.background\\\": \\\"#000\\\",\\n            \\\"quickInput.foreground\\\": \\\"#888\\\",\\n            \\\"quickInputList.focusForeground\\\": \\\"#fff\\\",\\n            \\\"scrollbar.shadow\\\": \\\"#fff\\\",\\n            \\\"selection.background\\\": \\\"#666\\\",\\n            \\\"sideBar.background\\\": \\\"#000\\\",\\n            \\\"sideBar.foreground\\\": \\\"#888\\\",\\n            \\\"sideBarSectionHeader.background\\\": \\\"#000\\\",\\n            \\\"statusBar.background\\\": \\\"#000\\\",\\n            \\\"statusBar.debuggingBackground\\\": \\\"#000\\\",\\n            \\\"statusBar.noFolderBackground\\\": \\\"#000\\\",\\n            \\\"statusBarItem.remoteBackground\\\": \\\"#000\\\",\\n            \\\"tab.activeBackground\\\": \\\"#000\\\",\\n            \\\"tab.activeBorder\\\": \\\"#00000000\\\",\\n            \\\"tab.activeBorderTop\\\": \\\"#777\\\",\\n            \\\"tab.activeForeground\\\": \\\"#fff\\\",\\n            \\\"tab.border\\\": \\\"#000\\\",\\n            \\\"tab.inactiveBackground\\\": \\\"#000\\\",\\n            \\\"tab.inactiveForeground\\\": \\\"#888\\\",\\n            \\\"terminal.background\\\": \\\"#000\\\",\\n            \\\"titleBar.activeBackground\\\": \\\"#000\\\",\\n            \\\"tree.indentGuidesStroke\\\": \\\"#333\\\"\\n          }\\n        },\\n        {\\n          \\\"workbench.colorCustomizations\\\": {}\\n        }\\n      ]\\n    }\\n  ],\\n  \\\"sourcery.codeLens\\\": false,\\n  \\\"svelte.enable-ts-plugin\\\": true,\\n  \\\"tailwindCSS.emmetCompletions\\\": true,\\n  \\\"terminal.integrated.defaultProfile.linux\\\": \\\"dash\\\",\\n  \\\"terminal.integrated.defaultProfile.windows\\\": \\\"Git Bash\\\",\\n  \\\"terminal.integrated.enableMultiLinePasteWarning\\\": false,\\n  \\\"terminal.integrated.enablePersistentSessions\\\": false,\\n  \\\"terminal.integrated.env.linux\\\": {},\\n  \\\"terminal.integrated.env.windows\\\": {},\\n  \\\"terminal.integrated.letterSpacing\\\": -2,\\n  \\\"terminal.integrated.profiles.linux\\\": {\\n    \\\"dash\\\": {\\n      \\\"path\\\": \\\"/bin/dash\\\"\\n    }\\n  },\\n  \\\"window.commandCenter\\\": false,\\n  \\\"window.zoomLevel\\\": -1,\\n  \\\"workbench.activityBar.location\\\": \\\"default\\\",\\n  \\\"workbench.colorCustomizations\\\": {\\n    \\\"activityBar.background\\\": \\\"#000\\\",\\n    \\\"button.background\\\": \\\"#000\\\",\\n    \\\"commandCenter.activeBackground\\\": \\\"#000\\\",\\n    \\\"commandCenter.background\\\": \\\"#000\\\",\\n    \\\"editor.background\\\": \\\"#000\\\",\\n    \\\"editor.findMatchBackground\\\": \\\"#ffffff55\\\",\\n    \\\"editor.findMatchHighlightBackground\\\": \\\"#ffffff55\\\",\\n    \\\"editor.lineHighlightBackground\\\": \\\"#000\\\",\\n    \\\"editor.lineHighlightBorder\\\": \\\"#666\\\",\\n    \\\"editor.selectionHighlightBackground\\\": \\\"#ffffff55\\\",\\n    \\\"editor.wordHighlightBackground\\\": \\\"#ffffff55\\\",\\n    \\\"editor.wordHighlightStrongBackground\\\": \\\"#ffffff55\\\",\\n    \\\"editorGroupHeader.tabsBackground\\\": \\\"#000\\\",\\n    \\\"editorGutter.background\\\": \\\"#000\\\",\\n    \\\"editorIndentGuide.activeBackground1\\\": \\\"#333\\\",\\n    \\\"editorIndentGuide.background1\\\": \\\"#000\\\",\\n    \\\"editorStickyScroll.background\\\": \\\"#333\\\",\\n    \\\"input.background\\\": \\\"#000\\\",\\n    \\\"input.border\\\": \\\"#333\\\",\\n    \\\"input.foreground\\\": \\\"#fff\\\",\\n    \\\"list.activeSelectionBackground\\\": \\\"#000\\\",\\n    \\\"list.activeSelectionForeground\\\": \\\"#fff\\\",\\n    \\\"list.focusBackground\\\": \\\"#000\\\",\\n    \\\"list.focusForeground\\\": \\\"#ccc\\\",\\n    \\\"list.focusOutline\\\": \\\"#000\\\",\\n    \\\"list.hoverBackground\\\": \\\"#000\\\",\\n    \\\"list.hoverForeground\\\": \\\"#ddd\\\",\\n    \\\"list.inactiveSelectionBackground\\\": \\\"#000\\\",\\n    \\\"list.inactiveSelectionForeground\\\": \\\"#ccc\\\",\\n    \\\"minimap.selectionHighlight\\\": \\\"#ffffff88\\\",\\n    \\\"minimap.warningHighlight\\\": \\\"#000\\\",\\n    \\\"minimapSlider.activeBackground\\\": \\\"#ffffff66\\\",\\n    \\\"minimapSlider.background\\\": \\\"#ffffff22\\\",\\n    \\\"minimapSlider.hoverBackground\\\": \\\"#ffffff44\\\",\\n    \\\"panel.background\\\": \\\"#000\\\",\\n    \\\"quickInput.background\\\": \\\"#000\\\",\\n    \\\"quickInput.foreground\\\": \\\"#888\\\",\\n    \\\"quickInputList.focusForeground\\\": \\\"#fff\\\",\\n    \\\"scrollbar.shadow\\\": \\\"#fff\\\",\\n    \\\"selection.background\\\": \\\"#666\\\",\\n    \\\"sideBar.background\\\": \\\"#000\\\",\\n    \\\"sideBar.foreground\\\": \\\"#888\\\",\\n    \\\"sideBarSectionHeader.background\\\": \\\"#000\\\",\\n    \\\"statusBar.background\\\": \\\"#000\\\",\\n    \\\"statusBar.debuggingBackground\\\": \\\"#000\\\",\\n    \\\"statusBar.noFolderBackground\\\": \\\"#000\\\",\\n    \\\"statusBarItem.remoteBackground\\\": \\\"#000\\\",\\n    \\\"tab.activeBackground\\\": \\\"#000\\\",\\n    \\\"tab.activeBorder\\\": \\\"#00000000\\\",\\n    \\\"tab.activeBorderTop\\\": \\\"#777\\\",\\n    \\\"tab.activeForeground\\\": \\\"#fff\\\",\\n    \\\"tab.border\\\": \\\"#000\\\",\\n    \\\"tab.inactiveBackground\\\": \\\"#000\\\",\\n    \\\"tab.inactiveForeground\\\": \\\"#888\\\",\\n    \\\"terminal.background\\\": \\\"#000\\\",\\n    \\\"titleBar.activeBackground\\\": \\\"#000\\\",\\n    \\\"tree.indentGuidesStroke\\\": \\\"#333\\\"\\n  },\\n  \\\"workbench.colorTheme\\\": \\\"Monokai Lite without underline\\\",\\n  \\\"workbench.editor.decorations.badges\\\": false,\\n  \\\"workbench.editor.showTabs\\\": \\\"multiple\\\",\\n  \\\"workbench.editor.tabActionCloseVisibility\\\": false,\\n  \\\"workbench.editor.tabSizing\\\": \\\"fit\\\",\\n  \\\"workbench.editorAssociations\\\": {\\n    \\\"*.csv\\\": \\\"gc-excelviewer-csv-editor\\\",\\n    \\\"*.jpg\\\": \\\"luna.editor\\\",\\n    \\\"*.md\\\": \\\"default\\\",\\n    \\\"*.pdf\\\": \\\"latex-workshop-pdf-hook\\\"\\n  },\\n  \\\"workbench.iconTheme\\\": \\\"material-icon-theme\\\",\\n  \\\"workbench.layoutControl.enabled\\\": false,\\n  \\\"workbench.list.horizontalScrolling\\\": true,\\n  \\\"workbench.list.smoothScrolling\\\": true,\\n  \\\"workbench.reduceMotion\\\": \\\"off\\\",\\n  \\\"workbench.startupEditor\\\": \\\"none\\\",\\n  \\\"workbench.statusBar.visible\\\": true,\\n  \\\"workbench.tips.enabled\\\": false,\\n  \\\"workbench.tree.enableStickyScroll\\\": true,\\n  \\\"workbench.tree.expandMode\\\": \\\"doubleClick\\\",\\n  \\\"workbench.tree.indent\\\": 20,\\n  \\\"workbench.tree.renderIndentGuides\\\": \\\"always\\\",\\n  \\\"xml.format.maxLineWidth\\\": 1000,\\n  \\\"discord.lowerDetailsDebugging\\\": \\\"Debugging nothing\\\",\\n  \\\"discord.lowerDetailsEditing\\\": \\\"Workspace nothing\\\",\\n  \\\"discord.detailsEditing\\\": \\\"Editing nothing\\\",\\n  \\\"discord.detailsDebugging\\\": \\\"Debugging nothing\\\",\\n  \\\"vscord.app.name\\\": \\\"Visual Studio Code\\\",\\n  \\\"vscord.status.details.enabled\\\": false,\\n  \\\"vscord.status.details.idle.enabled\\\": false,\\n  \\\"vscord.status.state.idle.enabled\\\": false,\\n  \\\"vscord.status.state.enabled\\\": false,\\n  \\\"window.density.editorTabHeight\\\": \\\"compact\\\",\\n  \\\"C_Cpp.default.cppStandard\\\": \\\"c++17\\\",\\n  \\\"blockman.n04ColorComboPreset\\\": \\\"Classic Dark 1 (Super gradients)\\\",\\n  \\\"background.windowBackgrounds\\\": [\\\"c:/lmqzzz/Images/Kurumi/386tmtxt0zq81.png\\\"],\\n  \\\"background.backgroundOpacity\\\": [0.25, 0.1, 0.1, 0.1],\\n  \\\"background.useInvertedOpacity\\\": true\\n}\\n\"}","keybindings":"{\"keybindings\":\"[\\n  {\\n    \\\"args\\\": {\\n      \\\"command\\\": \\\"multiCommand.dark\\\"\\n    },\\n    \\\"command\\\": \\\"extension.multiCommand.execute\\\",\\n    \\\"key\\\": \\\"shift+alt+x\\\"\\n  },\\n  {\\n    \\\"args\\\": {\\n      \\\"command\\\": \\\"multiCommand.focus\\\"\\n    },\\n    \\\"command\\\": \\\"extension.multiCommand.execute\\\",\\n    \\\"key\\\": \\\"f11\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"shift+enter\\\",\\n    \\\"command\\\": \\\"editor.action.insertLineAfter\\\",\\n    \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.fontZoomIn\\\",\\n    \\\"key\\\": \\\"ctrl+=\\\",\\n    \\\"when\\\": \\\"editorTextFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.fontZoomOut\\\",\\n    \\\"key\\\": \\\"ctrl+-\\\",\\n    \\\"when\\\": \\\"editorTextFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.fontZoomReset\\\",\\n    \\\"key\\\": \\\"ctrl+alt+0\\\",\\n    \\\"when\\\": \\\"editorTextFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"workbench.action.toggleAuxiliaryBar\\\",\\n    \\\"key\\\": \\\"alt+o\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"workbench.action.increaseViewSize\\\",\\n    \\\"key\\\": \\\"ctrl+shift+=\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"workbench.action.decreaseViewSize\\\",\\n    \\\"key\\\": \\\"ctrl+shift+-\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-workbench.action.files.newUntitledFile\\\",\\n    \\\"key\\\": \\\"ctrl+n\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"explorer.newFile\\\",\\n    \\\"key\\\": \\\"ctrl+n\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"explorer.newFolder\\\",\\n    \\\"key\\\": \\\"ctrl+shift+n\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.inlineSuggest.commit\\\",\\n    \\\"key\\\": \\\"ctrl+e\\\",\\n    \\\"when\\\": \\\"inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-editor.action.inlineSuggest.commit\\\",\\n    \\\"key\\\": \\\"tab\\\",\\n    \\\"when\\\": \\\"inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-workbench.action.terminal.sendSequence\\\",\\n    \\\"key\\\": \\\"shift+enter\\\",\\n    \\\"when\\\": \\\"terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-python.execSelectionInTerminal\\\",\\n    \\\"key\\\": \\\"shift+enter\\\",\\n    \\\"when\\\": \\\"editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-pycolonize.hold\\\",\\n    \\\"key\\\": \\\"ctrl+alt+enter\\\",\\n    \\\"when\\\": \\\"editorTextFocus && editorLangId == 'python'\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"extension.advancedOpenFile\\\",\\n    \\\"key\\\": \\\"ctrl+; ctrl+'\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-extension.advancedOpenFile\\\",\\n    \\\"key\\\": \\\"ctrl+x ctrl+f\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"inlineFold.toggle\\\",\\n    \\\"key\\\": \\\"alt+x\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-workbench.action.quickOpen\\\",\\n    \\\"key\\\": \\\"ctrl+e\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"workbench.action.newWindow\\\",\\n    \\\"key\\\": \\\"ctrl+shift+alt+n\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-workbench.action.newWindow\\\",\\n    \\\"key\\\": \\\"ctrl+shift+n\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"ctrl+shift+t\\\",\\n    \\\"command\\\": \\\"-workbench.action.reopenClosedEditor\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"ctrl+shift+t\\\",\\n    \\\"command\\\": \\\"workbench.action.reopenTextEditor\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"f9\\\",\\n    \\\"command\\\": \\\"code-runner.run\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"ctrl+alt+n\\\",\\n    \\\"command\\\": \\\"-code-runner.run\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"f10\\\",\\n    \\\"command\\\": \\\"code-runner.runCustomCommand\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"ctrl+alt+m\\\",\\n    \\\"command\\\": \\\"-code-runner.stop\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"ctrl+f1\\\",\\n    \\\"command\\\": \\\"-ahk2.help\\\",\\n    \\\"when\\\": \\\"editorLangId == 'ahk2'\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"ctrl+f1\\\",\\n    \\\"command\\\": \\\"workbench.panel.output.focus\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"f8\\\",\\n    \\\"command\\\": \\\"-editor.action.marker.nextInFiles\\\",\\n    \\\"when\\\": \\\"editorFocus\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"f8\\\",\\n    \\\"command\\\": \\\"-luna.color.toggleColorsWindow\\\",\\n    \\\"when\\\": \\\"luna:focused && activeCustomEditorId == 'luna.editor' && focusedView == ''\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"f8\\\",\\n    \\\"command\\\": \\\"code-runner.stop\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"ctrl+x ctrl+f\\\",\\n    \\\"command\\\": \\\"-vscode-advanced-open-file.pickFromActiveDirectory\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"ctrl+enter\\\",\\n    \\\"command\\\": \\\"editor.action.insertLineAfter\\\",\\n    \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"key\\\": \\\"ctrl+enter\\\",\\n    \\\"command\\\": \\\"-github.copilot.generate\\\",\\n    \\\"when\\\": \\\"editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused\\\"\\n  }\\n]\\n\",\"platform\":3}","snippets":"{\"snippets\":{\"lmqzzz.code-snippets\":\"{\\n\\t\\\"int128_t\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"int128\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"using int128 = signed __int128;\\\",\\n\\t\\t\\t\\\"using uint128 = unsigned __int128;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"namespace int128_io {\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"inline auto char_to_digit(int chr) {\\\",\\n\\t\\t\\t\\\"\\\\treturn static_cast<int>(isalpha(chr) ? 10 + tolower(chr) - 'a' : chr - '0');\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"inline auto digit_to_char(int digit) {\\\",\\n\\t\\t\\t\\\"\\\\treturn static_cast<char>(digit > 9 ? 'a' + digit - 10 : '0' + digit);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class integer>\\\",\\n\\t\\t\\t\\\"inline auto to_int(const std::string &str, size_t *idx = nullptr, int base = 10) {\\\",\\n\\t\\t\\t\\\"\\\\tsize_t i = idx != nullptr ? *idx : 0;\\\",\\n\\t\\t\\t\\\"\\\\tconst auto n = str.size();\\\",\\n\\t\\t\\t\\\"\\\\tconst auto neg = str[i] == '-';\\\",\\n\\t\\t\\t\\\"\\\\tinteger num = 0;\\\",\\n\\t\\t\\t\\\"\\\\tif (neg)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t++i;\\\",\\n\\t\\t\\t\\\"\\\\twhile (i < n)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tnum *= base, num += char_to_digit(str[i++]);\\\",\\n\\t\\t\\t\\\"\\\\tif (idx != nullptr)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t*idx = i;\\\",\\n\\t\\t\\t\\\"\\\\treturn neg ? -num : num;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class integer>\\\",\\n\\t\\t\\t\\\"inline auto to_string(integer num, int base = 10) {\\\",\\n\\t\\t\\t\\\"\\\\tconst auto neg = num < 0;\\\",\\n\\t\\t\\t\\\"\\\\tstd::string str;\\\",\\n\\t\\t\\t\\\"\\\\tif (neg)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tnum = -num;\\\",\\n\\t\\t\\t\\\"\\\\tdo\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tstr += digit_to_char(num % base), num /= base;\\\",\\n\\t\\t\\t\\\"\\\\twhile (num > 0);\\\",\\n\\t\\t\\t\\\"\\\\tif (neg)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tstr += '-';\\\",\\n\\t\\t\\t\\\"\\\\tstd::reverse(str.begin(), str.end());\\\",\\n\\t\\t\\t\\\"\\\\treturn str;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"inline auto next_str(std::istream &stream) {\\\",\\n\\t\\t\\t\\\"\\\\tstd::string str;\\\",\\n\\t\\t\\t\\\"\\\\tstream >> str;\\\",\\n\\t\\t\\t\\\"\\\\treturn str;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class integer>\\\",\\n\\t\\t\\t\\\"inline auto &read(std::istream &stream, integer &num) {\\\",\\n\\t\\t\\t\\\"\\\\tnum = to_int<integer>(next_str(stream));\\\",\\n\\t\\t\\t\\\"\\\\treturn stream;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class integer>\\\",\\n\\t\\t\\t\\\"inline auto &write(std::ostream &stream, integer num) { return stream << to_string(num); }\\\",\\n\\t\\t\\t\\\"}  // namespace int128_io\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"using namespace std;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"inline auto &operator>>(istream &stream, int128 &num) { return int128_io::read(stream, num); }\\\",\\n\\t\\t\\t\\\"inline auto &operator>>(istream &stream, uint128 &num) { return int128_io::read(stream, num); }\\\",\\n\\t\\t\\t\\\"inline auto &operator<<(ostream &stream, int128 num) { return int128_io::write(stream, num); }\\\",\\n\\t\\t\\t\\\"inline auto &operator<<(ostream &stream, uint128 num) { return int128_io::write(stream, num); }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"inline auto uint128_max() {\\\",\\n\\t\\t\\t\\\"\\\\tuint128 ans = 0;\\\",\\n\\t\\t\\t\\\"\\\\tfor (uint128 pow = 1; pow > 0; pow <<= 1)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tans |= pow;\\\",\\n\\t\\t\\t\\\"\\\\treturn ans;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"int128_t\\\"\\n\\t},\\n\\t\\\"template1\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"lmqzzz\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"#include <bits/stdc++.h>\\\",\\n\\t\\t\\t\\\"using namespace std;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// clang-format off\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"#define           fi    first\\\",\\n\\t\\t\\t\\\"#define           se    second\\\",\\n\\t\\t\\t\\\"#define           pb    push_back\\\",\\n\\t\\t\\t\\\"#define           ep    emplace\\\",\\n\\t\\t\\t\\\"#define           eb    emplace_back\\\",\\n\\t\\t\\t\\\"#define           lb    lower_bound\\\",\\n\\t\\t\\t\\\"#define           ub    upper_bound\\\",\\n\\t\\t\\t\\\"#define       all(x)    x.begin(), x.end()\\\",\\n\\t\\t\\t\\\"#define      rall(x)    x.rbegin(), x.rend()\\\",\\n\\t\\t\\t\\\"#define   uniquev(v)    sort(all(v)), (v).resize(unique(all(v)) - (v).begin())\\\",\\n\\t\\t\\t\\\"#define     mem(f,x)    memset(f , x , sizeof(f))\\\",\\n\\t\\t\\t\\\"#define        sz(x)    (int32_t)(x).size()\\\",\\n\\t\\t\\t\\\"#define  __lcm(a, b)    (1ll * ((a) / __gcd((a), (b))) * (b))\\\",\\n\\t\\t\\t\\\"#define          mxx    *max_element\\\",\\n\\t\\t\\t\\\"#define          mnn    *min_element\\\",\\n\\t\\t\\t\\\"#define         left    Kurumi_Tokisaki\\\",\\n\\t\\t\\t\\\"#define        right    Kei_Karuizawa\\\",\\n\\t\\t\\t\\\"#define         next    Mai_Sakurajima\\\",\\n\\t\\t\\t\\\"#define          div    Yume_Irido\\\",\\n\\t\\t\\t\\\"#define         prev    Chizuru_Mizuhara\\\",\\n\\t\\t\\t\\\"#define    cntbit(x)    __builtin_popcountll(x)\\\",\\n\\t\\t\\t\\\"#define      MASK(x)    ( 1ll << (x) )\\\",\\n\\t\\t\\t\\\"#define          Yes    cout << \\\\\\\"Yes\\\\\\\"\\\",\\n\\t\\t\\t\\\"#define          YES    cout << \\\\\\\"YES\\\\\\\"\\\",\\n\\t\\t\\t\\\"#define           No    cout << \\\\\\\"No\\\\\\\"\\\",\\n\\t\\t\\t\\\"#define           NO    cout << \\\\\\\"NO\\\\\\\"\\\",\\n\\t\\t\\t\\\"#define           AA    cout << \\\\\\\"Alice\\\\\\\"\\\",\\n\\t\\t\\t\\\"#define           BB    cout << \\\\\\\"Bob\\\\\\\"\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"/// TASK\\\",\\n\\t\\t\\t\\\"/// -----------------------------\\\",\\n\\t\\t\\t\\\"#ifdef LMQZZZ\\\",\\n\\t\\t\\t\\\"void __print(int x) {cerr << x;}\\\",\\n\\t\\t\\t\\\"void __print(long x) {cerr << x;}\\\",\\n\\t\\t\\t\\\"void __print(long long x) {cerr << x;}\\\",\\n\\t\\t\\t\\\"void __print(unsigned x) {cerr << x;}\\\",\\n\\t\\t\\t\\\"void __print(unsigned long x) {cerr << x;}\\\",\\n\\t\\t\\t\\\"void __print(unsigned long long x) {cerr << x;}\\\",\\n\\t\\t\\t\\\"void __print(float x) {cerr << x;}\\\",\\n\\t\\t\\t\\\"void __print(double x) {cerr << x;}\\\",\\n\\t\\t\\t\\\"void __print(long double x) {cerr << x;}\\\",\\n\\t\\t\\t\\\"void __print(char x) {cerr << '\\\\\\\\'' << x << '\\\\\\\\'';}\\\",\\n\\t\\t\\t\\\"void __print(const char *x) {cerr << '\\\\\\\\\\\\\\\"' << x << '\\\\\\\\\\\\\\\"';}\\\",\\n\\t\\t\\t\\\"void __print(const string &x) {cerr << '\\\\\\\\\\\\\\\"' << x << '\\\\\\\\\\\\\\\"';}\\\",\\n\\t\\t\\t\\\"void __print(bool x) {cerr << (x ? \\\\\\\"true\\\\\\\" : \\\\\\\"false\\\\\\\");}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template<typename T, typename V>\\\",\\n\\t\\t\\t\\\"void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << \\\\\\\", \\\\\\\"; __print(x.second); cerr << '}';}\\\",\\n\\t\\t\\t\\\"template<typename T>\\\",\\n\\t\\t\\t\\\"void __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \\\\\\\", \\\\\\\" : \\\\\\\"\\\\\\\"), __print(i); cerr << \\\\\\\"}\\\\\\\";}\\\",\\n\\t\\t\\t\\\"void _print() {cerr << \\\\\\\" ]\\\\\\\\n\\\\\\\";}\\\",\\n\\t\\t\\t\\\"template <typename T, typename... V>\\\",\\n\\t\\t\\t\\\"void _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \\\\\\\", \\\\\\\"; _print(v...);}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"#define deb(x...) cerr << \\\\\\\"[ in \\\\\\\" <<__func__<< \\\\\\\"() : line \\\\\\\" <<__LINE__<< \\\\\\\" ] : [ \\\\\\\" << #x << \\\\\\\" ] = [ \\\\\\\"; _print(x); cerr << '\\\\\\\\n';\\\",\\n\\t\\t\\t\\\"#define TASK \\\\\\\"C\\\\\\\"\\\",\\n\\t\\t\\t\\\"#else\\\",\\n\\t\\t\\t\\\"#define deb(x...) 3326\\\",\\n\\t\\t\\t\\\"#define TASK \\\\\\\"$1\\\\\\\"\\\",\\n\\t\\t\\t\\\"#endif\\\",\\n\\t\\t\\t\\\"///------------------------------\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"void lmqzzz();\\\",\\n\\t\\t\\t\\\"void init() {};\\\",\\n\\t\\t\\t\\\"int32_t main() {\\\",\\n\\t\\t\\t\\\"\\\\tios_base::sync_with_stdio(0);\\\",\\n\\t\\t\\t\\\"\\\\tcin.tie(0);      cout.tie(0);\\\",\\n\\t\\t\\t\\\"\\\\tif (fopen(TASK \\\\\\\".inp\\\\\\\", \\\\\\\"r\\\\\\\")) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfreopen(TASK \\\\\\\".inp\\\\\\\", \\\\\\\"r\\\\\\\", stdin);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfreopen(TASK \\\\\\\".out\\\\\\\", \\\\\\\"w\\\\\\\", stdout);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t/// =================================\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tconstexpr bool MULTITEST = $2;\\\",\\n\\t\\t\\t\\\"\\\\t/// ================================\\\",\\n\\t\\t\\t\\\"\\\\tinit();\\\",\\n\\t\\t\\t\\\"\\\\tint32_t TT = 1;\\\",\\n\\t\\t\\t\\\"\\\\tif ( MULTITEST ) cin >> TT;\\\",\\n\\t\\t\\t\\\"\\\\tfor(int32_t TTT = 1; TTT <= TT; TTT ++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tlmqzzz();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tcout << '\\\\\\\\n';\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class T> inline T min(const T &a, const T &b, const T &c) { return min(a, min(b, c)); }\\\",\\n\\t\\t\\t\\\"template <class T> inline T max(const T &a, const T &b, const T &c) { return max(a, max(b, c)); }\\\",\\n\\t\\t\\t\\\"template <class T, class U> inline bool mini(T &a, const U &b) { if (a > b) { a = b; return 1; } return 0; }\\\",\\n\\t\\t\\t\\\"template <class T, class U> inline bool maxi(T &a, const U &b) { if (a < b) { a = b; return 1; } return 0; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"constexpr     int16_t dr[]  =  {0, 0, -1, 1};\\\",\\n\\t\\t\\t\\\"constexpr     int16_t dc[]  =  {1, -1, 0, 0};\\\",\\n\\t\\t\\t\\\"constexpr      int64_t MOD  =  1e9 + 7;\\\",\\n\\t\\t\\t\\\"constexpr     int32_t MAXN  =  1e6 + 10;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// clang-format on\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"void lmqzzz() {\\\",\\n\\t\\t\\t\\\"\\\\t$3\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"y_combinator\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"ycombinator\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"namespace std {\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class Fun>\\\",\\n\\t\\t\\t\\\"class y_combinator_result {\\\",\\n\\t\\t\\t\\\"\\\\tFun fun_;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"       public:\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class T>\\\",\\n\\t\\t\\t\\\"\\\\texplicit y_combinator_result(T &&fun) : fun_(std::forward<T>(fun)) {}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class... Args>\\\",\\n\\t\\t\\t\\\"\\\\tdecltype(auto) operator()(Args &&...args) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn fun_(std::ref(*this), std::forward<Args>(args)...);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class Fun>\\\",\\n\\t\\t\\t\\\"decltype(auto) y_combinator(Fun &&fun) {\\\",\\n\\t\\t\\t\\\"\\\\treturn y_combinator_result<std::decay_t<Fun>>(std::forward<Fun>(fun));\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"/* Example\\\",\\n\\t\\t\\t\\\"\\\\tauto fun = y_combinator([&](auto self, int x) -> void {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tself(x + 1);\\\",\\n\\t\\t\\t\\\"\\\\t});\\\",\\n\\t\\t\\t\\\"*/\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"}  // namespace std\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"y_combinator\\\"\\n\\t},\\n\\t\\\"trieString\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"trieString\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <const int A, const int offset, class T>\\\",\\n\\t\\t\\t\\\"class trie_t {\\\",\\n\\t\\t\\t\\\"       public:\\\",\\n\\t\\t\\t\\\"\\\\ttrie_t *g[A];\\\",\\n\\t\\t\\t\\\"\\\\tint cnt, is_end;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\ttrie_t() : cnt(0), is_end(0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < A; i++) g[i] = nullptr;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic int add(trie_t *root, const T &s, const int &d = 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (auto &x : s) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (!root->g[x - offset]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\troot->g[x - offset] = new trie_t();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\troot = root->g[x - offset];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\troot->cnt += d;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\troot->is_end += d;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn root->is_end;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic int checkPrefix(trie_t *root, const T &s) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint res = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (auto &x : s) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (!root->g[x - offset]) break;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tres++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\troot = root->g[x - offset];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic int checkAll(trie_t *root, const T &s) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (auto &x : s) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (!root->g[x - offset]) return 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\troot = root->g[x - offset];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn root->is_end;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"combinatorics\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"combinatorics\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"int invs[MAXN + 12] , fact[MAXN + 12];\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"int Power(int A, int B) {\\\",\\n\\t\\t\\t\\\"\\\\tint64_t res = 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (; B ; B >>= 1, A = (1ll * A * A) % MOD) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (B & 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t(res *= A) %= MOD;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treturn (int)res;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"int C(int N, int K) {\\\",\\n\\t\\t\\t\\\"\\\\tif (K > N) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn 0;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\treturn (1ll * (1ll * fact[N] * invs[N - K]) % MOD * invs[K]) % MOD;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"int P(int N, int K) {\\\",\\n\\t\\t\\t\\\"\\\\tif (K > N) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn 0;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\treturn (1ll * fact[N] * invs[N - K]) % MOD;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"void prepare_fact(int N) {\\\",\\n\\t\\t\\t\\\"\\\\tfact[0] = 1;\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 1 ; i <= N ; i ++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfact[i] = (1ll * fact[i - 1] * i) % MOD;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tinvs[N] = Power(fact[N], MOD - 2);\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = N - 1 ; i >= 0 ; i --) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tinvs[i] = (1ll * invs[i + 1] * (i + 1)) % MOD;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"dsu_t\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"dsu_t\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"class DSU {\\\",\\n\\t\\t\\t\\\"public:\\\",\\n\\t\\t\\t\\\"\\\\tDSU(int n) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tprt.resize(n + 1, -1);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tint SZ(int u) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn - prt[root(u)];\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tint root(int u) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn (prt[u] < 0 ? u : (prt[u] = root(prt[u])));\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbool connected(int u, int v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn ((u = root(u)) == (v = root(v)));\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbool unite(int u, int v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif((u = root(u)) == (v = root(v))) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif(prt[u] > prt[v]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tu ^= v ^= u ^= v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tprt[u] += prt[v];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tprt[v] = u;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn 1;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"private:\\\",\\n\\t\\t\\t\\\"\\\\tvector<int>prt;\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"eratosthenes\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"eratosthenes\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"vector<int> prime, pm;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"void eratosthenes(int N) {\\\",\\n\\t\\t\\t\\\"\\\\tpm.assign(N + 1, 0);\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 2; i <= N; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (pm[i] == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tpm[i] = i;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tprime.emplace_back(i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int j = 0; (j < prime.size()) && (prime[j] <= pm[i]) && (i * prime[j] <= N); j++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tpm[i * prime[j]] = prime[j];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"fenwick_t\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"fenwick_t\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class T>\\\",\\n\\t\\t\\t\\\"class fenwick_t {\\\",\\n\\t\\t\\t\\\"       public:\\\",\\n\\t\\t\\t\\\"\\\\tvector<T> bit;\\\",\\n\\t\\t\\t\\\"\\\\tint n;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tfenwick_t(int n = 0) : n(n) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbit.resize(n + 5, 0);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid Update(int pos, T val) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (pos++; pos < bit.size(); pos += pos & -pos) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tbit[pos] += val;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tT Get(int pos) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tT res = T(0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (pos++; pos > 0; pos -= pos & -pos) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tres += bit[pos];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tT Get(int l, int r) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn Get(r) - ((l >= 0) ? Get(l - 1) : T(0));\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"fraction_t\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"fraction_t\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"class fraction_t {\\\",\\n\\t\\t\\t\\\"       public:\\\",\\n\\t\\t\\t\\\"\\\\tint64_t x, y;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// x / y, normalized to y > 0 if x != 0 and y = 1 if x = 0\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid fix() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(y && \\\\\\\"Your Denominator Equal 0\\\\\\\");\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (y < 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ty = -y;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tx = -x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint64_t d = __gcd(abs(x), y);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tx /= d;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ty /= d;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tfraction_t(const int64_t& x = 0, const int64_t& y = 1) : x(x), y(y) { fix(); }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tfriend bool operator<(const fraction_t& e, const fraction_t& f) { return e.x * f.y < e.y * f.x; }\\\",\\n\\t\\t\\t\\\"\\\\tfriend bool operator<=(const fraction_t& e, const fraction_t& f) { return e.x * f.y <= e.y * f.x; }\\\",\\n\\t\\t\\t\\\"\\\\tfriend bool operator==(const fraction_t& e, const fraction_t& f) { return e.x * f.y == e.y * f.x; }\\\",\\n\\t\\t\\t\\\"\\\\tfriend bool operator!=(const fraction_t& e, const fraction_t& f) { return e.x * f.y != e.y * f.x; }\\\",\\n\\t\\t\\t\\\"\\\\tfriend bool operator>(const fraction_t& e, const fraction_t& f) { return e.x * f.y > e.y * f.x; }\\\",\\n\\t\\t\\t\\\"\\\\tfriend bool operator>=(const fraction_t& e, const fraction_t& f) { return e.x * f.y >= e.y * f.x; }\\\",\\n\\t\\t\\t\\\"\\\\tfriend ostream& operator<<(ostream& out, const fraction_t& f) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tout << setprecision(6) << fixed << ((double)f.x) / f.y;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn out;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"geometry\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"geometry\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F>\\\",\\n\\t\\t\\t\\\"struct point_t {\\\",\\n\\t\\t\\t\\\"\\\\tF x, y;\\\",\\n\\t\\t\\t\\\"\\\\tpoint_t() : x(0), y(0) {}\\\",\\n\\t\\t\\t\\\"\\\\tpoint_t(const F& x, const F& y) : x(x), y(y) {}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid swap(point_t& other) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tusing std::swap;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tswap(x, other.x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tswap(y, other.y);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F1>\\\",\\n\\t\\t\\t\\\"\\\\texplicit operator point_t<F1>() const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn point_t<F1>(static_cast<F1>(x), static_cast<F1>(y));\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F1>\\\",\\n\\t\\t\\t\\\"\\\\tpoint_t& operator=(const point_t<F1>& other) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tx = other.x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ty = other.y;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F1>\\\",\\n\\t\\t\\t\\\"\\\\tpoint_t& operator+=(const point_t<F1>& other) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tx += other.x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ty += other.y;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F1>\\\",\\n\\t\\t\\t\\\"\\\\tpoint_t& operator-=(const point_t<F1>& other) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tx -= other.x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ty -= other.y;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F1>\\\",\\n\\t\\t\\t\\\"\\\\tpoint_t& operator*=(const F1& factor) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tx *= factor;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ty *= factor;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F1>\\\",\\n\\t\\t\\t\\\"\\\\tpoint_t& operator/=(const F1& factor) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tx /= factor;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ty /= factor;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F>\\\",\\n\\t\\t\\t\\\"int read(point_t<F>& point) { return read(point.x, point.y) / 2; }\\\",\\n\\t\\t\\t\\\"template <class F>\\\",\\n\\t\\t\\t\\\"int write(const point_t<F>& point) { return write(point.x, point.y); }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F>\\\",\\n\\t\\t\\t\\\"istream& operator>>(istream& is, point_t<F>& point) {\\\",\\n\\t\\t\\t\\\"\\\\treturn is >> point.x >> point.y;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"template <class F>\\\",\\n\\t\\t\\t\\\"ostream& operator<<(ostream& os, const point_t<F>& point) {\\\",\\n\\t\\t\\t\\\"\\\\treturn os << point.x << ' ' << point.y;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F>\\\",\\n\\t\\t\\t\\\"inline point_t<F> makePoint(const F& x, const F& y) { return point_t<F>(x, y); }\\\",\\n\\t\\t\\t\\\"template <class F>\\\",\\n\\t\\t\\t\\\"void swap(point_t<F>& lhs, point_t<F>& rhs) { lhs.swap(rhs); }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"#define FUNC1(name, arg, expr) \\\\\\\\\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F>     \\\\\\\\\\\",\\n\\t\\t\\t\\\"\\\\tinline auto name(const arg)->decltype(expr) { return expr; }\\\",\\n\\t\\t\\t\\\"#define FUNC2(name, arg1, arg2, expr) \\\\\\\\\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F1, class F2> \\\\\\\\\\\",\\n\\t\\t\\t\\\"\\\\tinline auto name(const arg1, const arg2)->decltype(expr) { return expr; }\\\",\\n\\t\\t\\t\\\"#define FUNC3(name, arg1, arg2, arg3, expr)     \\\\\\\\\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F1, class F2, class F3> \\\\\\\\\\\",\\n\\t\\t\\t\\\"\\\\tinline auto name(const arg1, const arg2, const arg3)->decltype(expr) { return expr; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"FUNC1(operator-, point_t<F>& point, makePoint(-point.x, -point.y))\\\",\\n\\t\\t\\t\\\"FUNC2(operator+, point_t<F1>& lhs, point_t<F2>& rhs, makePoint(lhs.x + rhs.x, lhs.y + rhs.y))\\\",\\n\\t\\t\\t\\\"FUNC2(operator-, point_t<F1>& lhs, point_t<F2>& rhs, makePoint(lhs.x - rhs.x, lhs.y - rhs.y))\\\",\\n\\t\\t\\t\\\"FUNC2(operator*, F1& factor, point_t<F2>& rhs, makePoint(factor* rhs.x, factor* rhs.y))\\\",\\n\\t\\t\\t\\\"FUNC2(operator*, point_t<F1>& lhs, F2& factor, makePoint(lhs.x* factor, lhs.y* factor))\\\",\\n\\t\\t\\t\\\"FUNC2(operator/, point_t<F1>& lhs, F2& factor, makePoint(lhs.x / factor, lhs.y / factor))\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"FUNC2(operator*, point_t<F1>& lhs, point_t<F2>& rhs, lhs.x* rhs.x + lhs.y * rhs.y)\\\",\\n\\t\\t\\t\\\"FUNC2(operator^, point_t<F1>& lhs, point_t<F2>& rhs, lhs.x* rhs.y - lhs.y * rhs.x)\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// < 0 if rhs <- lhs counter-clockwise, 0 if collinear, > 0 if clockwise.\\\",\\n\\t\\t\\t\\\"FUNC2(ccw, point_t<F1>& lhs, point_t<F2>& rhs, rhs ^ lhs)\\\",\\n\\t\\t\\t\\\"FUNC3(ccw, point_t<F1>& lhs, point_t<F2>& rhs, point_t<F3>& origin, ccw(lhs - origin, rhs - origin))\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"FUNC2(operator==, point_t<F1>& lhs, point_t<F2>& rhs, lhs.x == rhs.x && lhs.y == rhs.y)\\\",\\n\\t\\t\\t\\\"FUNC2(operator!=, point_t<F1>& lhs, point_t<F2>& rhs, !(lhs == rhs))\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"FUNC2(operator<, point_t<F1>& lhs, point_t<F2>& rhs,\\\",\\n\\t\\t\\t\\\"      lhs.y < rhs.y || (lhs.y == rhs.y && lhs.x < rhs.x))\\\",\\n\\t\\t\\t\\\"FUNC2(operator>, point_t<F1>& lhs, point_t<F2>& rhs, rhs < lhs)\\\",\\n\\t\\t\\t\\\"FUNC2(operator<=, point_t<F1>& lhs, point_t<F2>& rhs, !(lhs > rhs))\\\",\\n\\t\\t\\t\\\"FUNC2(operator>=, point_t<F1>& lhs, point_t<F2>& rhs, !(lhs < rhs))\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// Angles and rotations (counter-clockwise).\\\",\\n\\t\\t\\t\\\"FUNC1(angle, point_t<F>& point, atan2(point.y, point.x))\\\",\\n\\t\\t\\t\\\"FUNC2(angle, point_t<F1>& lhs, point_t<F2>& rhs, atan2(lhs ^ rhs, lhs* rhs))\\\",\\n\\t\\t\\t\\\"FUNC3(angle, point_t<F1>& lhs, point_t<F2>& rhs, point_t<F3>& origin,\\\",\\n\\t\\t\\t\\\"      angle(lhs - origin, rhs - origin))\\\",\\n\\t\\t\\t\\\"FUNC3(rotate, point_t<F1>& point, F2& angleSin, F3& angleCos,\\\",\\n\\t\\t\\t\\\"      makePoint(angleCos* point.x - angleSin * point.y,\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tangleSin* point.x + angleCos * point.y))\\\",\\n\\t\\t\\t\\\"FUNC2(rotate, point_t<F1>& point, F2& angle, rotate(point, sin(angle), cos(angle)))\\\",\\n\\t\\t\\t\\\"FUNC3(rotate, point_t<F1>& point, F2& angle, point_t<F3>& origin,\\\",\\n\\t\\t\\t\\\"      origin + rotate(point - origin, angle))\\\",\\n\\t\\t\\t\\\"FUNC1(perp, point_t<F>& point, makePoint(-point.y, point.x))\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// Distances.\\\",\\n\\t\\t\\t\\\"FUNC1(abs, point_t<F>& point, point* point)\\\",\\n\\t\\t\\t\\\"FUNC1(norm, point_t<F>& point, sqrt(abs(point)))\\\",\\n\\t\\t\\t\\\"FUNC2(dist, point_t<F1>& lhs, point_t<F2>& rhs, norm(lhs - rhs))\\\",\\n\\t\\t\\t\\\"FUNC2(dist2, point_t<F1>& lhs, point_t<F2>& rhs, abs(lhs - rhs))\\\",\\n\\t\\t\\t\\\"FUNC2(bisector, point_t<F1>& lhs, point_t<F2>& rhs, lhs* norm(rhs) + rhs * norm(lhs))\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"#undef FUNC1\\\",\\n\\t\\t\\t\\\"#undef FUNC2\\\",\\n\\t\\t\\t\\\"#undef FUNC3\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F>\\\",\\n\\t\\t\\t\\\"struct line_t {\\\",\\n\\t\\t\\t\\\"\\\\tpoint_t<F> a, ab;\\\",\\n\\t\\t\\t\\\"\\\\tline_t() : a(), ab() {}\\\",\\n\\t\\t\\t\\\"\\\\tline_t(const point_t<F>& a, const point_t<F>& b, bool twoPoints = true)\\\",\\n\\t\\t\\t\\\"\\\\t    : a(a), ab(twoPoints ? b - a : b) {}\\\",\\n\\t\\t\\t\\\"\\\\tline_t(const F& xa, const F& ya, const F& xb, const F& yb)\\\",\\n\\t\\t\\t\\\"\\\\t    : a(xa, ya), ab(xb - xa, yb - ya) {}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid swap(line_t& other) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tusing std::swap;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tswap(a, other.a);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tswap(ab, other.ab);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F1>\\\",\\n\\t\\t\\t\\\"\\\\texplicit operator line_t<F1>() const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn line_t<F1>(point_t<F1>(a), point_t<F1>(ab), false);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F1>\\\",\\n\\t\\t\\t\\\"\\\\tline_t& operator=(const line_t<F1>& other) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ta = other.a;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tab = other.ab;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tpoint_t<F> b() const { return a + ab; }\\\",\\n\\t\\t\\t\\\"\\\\toperator bool() const { return ab != point_t<F>(); }\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F>\\\",\\n\\t\\t\\t\\\"int read(line_t<F>& line) {\\\",\\n\\t\\t\\t\\\"\\\\tint res = read(line.a, line.ab) / 2;\\\",\\n\\t\\t\\t\\\"\\\\treturn line.ab -= line.a, res;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F>\\\",\\n\\t\\t\\t\\\"inline line_t<F> makeLine(const point_t<F>& a, const point_t<F>& b, bool twoPoints = true) {\\\",\\n\\t\\t\\t\\\"\\\\treturn line_t<F>(a, b, twoPoints);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F>\\\",\\n\\t\\t\\t\\\"void swap(line_t<F>& lhs, line_t<F>& rhs) { lhs.swap(rhs); }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F1, class F2>\\\",\\n\\t\\t\\t\\\"bool onLine(const point_t<F1>& point, const line_t<F2>& line) {\\\",\\n\\t\\t\\t\\\"\\\\tif (!line) return point == line.a;\\\",\\n\\t\\t\\t\\\"\\\\treturn ((point - line.a) ^ line.ab) == 0;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F1, class F2>\\\",\\n\\t\\t\\t\\\"bool onSegment(const point_t<F1>& point, const line_t<F2>& seg) {\\\",\\n\\t\\t\\t\\\"\\\\tif (!seg) return point == seg.a;\\\",\\n\\t\\t\\t\\\"\\\\tauto vecta = seg.a - point, vectb = seg.b() - point;\\\",\\n\\t\\t\\t\\\"\\\\treturn (vecta ^ vectb) == 0 && (vecta * vectb) <= 0;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F1, class F2>\\\",\\n\\t\\t\\t\\\"using distF = decltype(sqrt(F1() + F2()));\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F1, class F2>\\\",\\n\\t\\t\\t\\\"distF<F1, F2> distLine(const point_t<F1>& point, const line_t<F2>& line) {\\\",\\n\\t\\t\\t\\\"\\\\tif (!line) return dist(point, line.a);\\\",\\n\\t\\t\\t\\\"\\\\treturn abs((point - line.a) ^ line.ab) / norm(line.ab);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F1, class F2>\\\",\\n\\t\\t\\t\\\"distF<F1, F2> distSegment(const point_t<F1>& point, const line_t<F2>& seg) {\\\",\\n\\t\\t\\t\\\"\\\\tif (((point - seg.a) * seg.ab) <= 0) return dist(point, seg.a);\\\",\\n\\t\\t\\t\\\"\\\\tif (((point - seg.b()) * seg.ab) >= 0) return dist(point, seg.b());\\\",\\n\\t\\t\\t\\\"\\\\treturn distLine(point, seg);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F1, class F2, class F3>\\\",\\n\\t\\t\\t\\\"void projection(const point_t<F1>& point, const line_t<F2>& line, point_t<F3>& res) {\\\",\\n\\t\\t\\t\\\"\\\\tres = line.a;\\\",\\n\\t\\t\\t\\\"\\\\tif (line) res += line.ab * static_cast<F3>((point - line.a) * line.ab) / abs(line.ab);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F1, class F2, class F3>\\\",\\n\\t\\t\\t\\\"void reflection(const point_t<F1>& point, const line_t<F2>& line, point_t<F3>& res) {\\\",\\n\\t\\t\\t\\\"\\\\tprojection(point, line, res);\\\",\\n\\t\\t\\t\\\"\\\\tres = 2 * res - point;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F1, class F2, class F3>\\\",\\n\\t\\t\\t\\\"void closest(const point_t<F1>& point, const line_t<F2>& seg, point_t<F3>& res) {\\\",\\n\\t\\t\\t\\\"\\\\tif (((point - seg.a) * seg.ab) <= 0)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres = seg.a;\\\",\\n\\t\\t\\t\\\"\\\\telse if (((point - seg.b()) * seg.ab) >= 0)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres = seg.b();\\\",\\n\\t\\t\\t\\\"\\\\telse\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tprojection(point, seg, res);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <int TYPE>\\\",\\n\\t\\t\\t\\\"struct EndpointChecker {};\\\",\\n\\t\\t\\t\\\"template <>\\\",\\n\\t\\t\\t\\\"struct EndpointChecker<0> {  // no endpoint (ray)\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F>\\\",\\n\\t\\t\\t\\\"\\\\tbool operator()(const F& a, const F& b) const { return true; }\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"template <>\\\",\\n\\t\\t\\t\\\"struct EndpointChecker<1> {  // closed endpoint\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F>\\\",\\n\\t\\t\\t\\\"\\\\tbool operator()(const F& a, const F& b) const { return a <= b; }\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"template <>\\\",\\n\\t\\t\\t\\\"struct EndpointChecker<2> {  // open endpoint\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F>\\\",\\n\\t\\t\\t\\\"\\\\tbool operator()(const F& a, const F& b) const { return a < b; }\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <int LA, int LB, int RA, int RB, class F1, class F2, class F3>\\\",\\n\\t\\t\\t\\\"bool intersectLines(const line_t<F1>& lhs, const line_t<F2>& rhs, point_t<F3>& res) {\\\",\\n\\t\\t\\t\\\"\\\\tassert(lhs && rhs);\\\",\\n\\t\\t\\t\\\"\\\\tauto s = lhs.ab ^ rhs.ab;\\\",\\n\\t\\t\\t\\\"\\\\tif (s == 0) return false;\\\",\\n\\t\\t\\t\\\"\\\\tauto ls = (rhs.a - lhs.a) ^ rhs.ab;\\\",\\n\\t\\t\\t\\\"\\\\tauto rs = (rhs.a - lhs.a) ^ lhs.ab;\\\",\\n\\t\\t\\t\\\"\\\\tif (s < 0) s = -s, ls = -ls, rs = -rs;\\\",\\n\\t\\t\\t\\\"\\\\tbool intersect =\\\",\\n\\t\\t\\t\\\"\\\\t    EndpointChecker<LA>()(decltype(ls)(0), ls) && EndpointChecker<LB>()(ls, s) &&\\\",\\n\\t\\t\\t\\\"\\\\t    EndpointChecker<RA>()(decltype(rs)(0), rs) && EndpointChecker<RB>()(rs, s);\\\",\\n\\t\\t\\t\\\"\\\\tif (intersect) res = lhs.a + lhs.ab * static_cast<F3>(ls) / s;\\\",\\n\\t\\t\\t\\\"\\\\treturn intersect;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F1, class F2, class F3>\\\",\\n\\t\\t\\t\\\"bool intersectClosedSegments(const line_t<F1>& lhs, const line_t<F2>& rhs, point_t<F3>& res) {\\\",\\n\\t\\t\\t\\\"\\\\treturn intersectLines<1, 1, 1, 1>(lhs, rhs, res);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F1, class F2, class F3>\\\",\\n\\t\\t\\t\\\"bool intersectSegments(const line_t<F1>& lhs, const line_t<F2>& rhs, line_t<F3>& res) {\\\",\\n\\t\\t\\t\\\"\\\\tauto s = lhs.ab ^ rhs.ab;\\\",\\n\\t\\t\\t\\\"\\\\tauto ls = (rhs.a - lhs.a) ^ rhs.ab;\\\",\\n\\t\\t\\t\\\"\\\\tif (s == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (ls != 0) return false;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tauto lhsa = lhs.a, lhsb = lhs.b();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tauto rhsa = rhs.a, rhsb = rhs.b();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (lhsa > lhsb) swap(lhsa, lhsb);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (rhsa > rhsb) swap(rhsa, rhsb);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres = line_t<F3>(max(lhsa, rhsa), min(lhsb, rhsb));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res.ab >= point_t<F3>();\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tauto rs = (rhs.a - lhs.a) ^ lhs.ab;\\\",\\n\\t\\t\\t\\\"\\\\tif (s < 0) s = -s, ls = -ls, rs = -rs;\\\",\\n\\t\\t\\t\\\"\\\\tbool intersect = 0 <= ls && ls <= s && 0 <= rs && rs <= s;\\\",\\n\\t\\t\\t\\\"\\\\tif (intersect)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres = line_t<F3>(lhs.a + lhs.ab * static_cast<F3>(ls) / s, point_t<F3>());\\\",\\n\\t\\t\\t\\\"\\\\treturn intersect;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class F>\\\",\\n\\t\\t\\t\\\"struct AngleCompare {\\\",\\n\\t\\t\\t\\\"\\\\tconst point_t<F> origin;\\\",\\n\\t\\t\\t\\\"\\\\tconst bool zero;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tAngleCompare(const point_t<F>& origin = point_t<F>())\\\",\\n\\t\\t\\t\\\"\\\\t    : origin(origin), zero(origin == point_t<F>()) {}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F1, class F2>\\\",\\n\\t\\t\\t\\\"\\\\tbool operator()(const point_t<F1>& lhs, const point_t<F2>& rhs) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn zero ? ccw(lhs, rhs) < 0 : ccw(lhs, rhs, origin) < 0;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class Iterator, class F>\\\",\\n\\t\\t\\t\\\"void sortByAngle(Iterator first, Iterator last, const point_t<F>& origin) {\\\",\\n\\t\\t\\t\\\"\\\\tfirst = partition(first, last, [&origin](const decltype(*first)& point) { return point == origin; });\\\",\\n\\t\\t\\t\\\"\\\\tauto pivot = partition(first, last, [&origin](const decltype(*first)& point) { return point > origin; });\\\",\\n\\t\\t\\t\\\"\\\\tAngleCompare<F> acmp(origin);\\\",\\n\\t\\t\\t\\\"\\\\tsort(first, pivot, acmp);\\\",\\n\\t\\t\\t\\\"\\\\tsort(pivot, last, acmp);\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"geometry\\\"\\n\\t},\\n\\t\\\"manhattanMST\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"manhattanMST\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"typedef point_t<int> P;\\\",\\n\\t\\t\\t\\\"vector<array<int, 3>> manhattanMST(vector<P> ps) {\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> id(sz(ps));\\\",\\n\\t\\t\\t\\\"\\\\tiota(all(id), 0);\\\",\\n\\t\\t\\t\\\"\\\\tvector<array<int, 3>> edges;\\\",\\n\\t\\t\\t\\\"\\\\tfor (int k = 0; k < 4; k++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tsort(all(id), [&](int i, int j) { return (ps[i] - ps[j]).x < (ps[j] - ps[i]).y; });\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tmap<int, int> sweep;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i : id) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (auto it = sweep.lower_bound(-ps[i].y);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t     it != sweep.end(); sweep.erase(it++)) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tint j = it->second;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tP d = ps[i] - ps[j];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (d.y > d.x) break;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tedges.push_back({d.y + d.x, i, j});\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tsweep[-ps[i].y] = i;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (P& p : ps)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (k & 1)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tp.x = -p.x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\telse\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tswap(p.x, p.y);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treturn edges;\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"manhattanMST\\\"\\n\\t},\\n\\t\\\"SuffixArray\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"SuffixArray\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"struct SuffixArray {\\\",\\n\\t\\t\\t\\\"\\\\tstring a;\\\",\\n\\t\\t\\t\\\"\\\\tint N, m;\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> SA, LCP, x, y, w, c;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tSuffixArray(string _a, int m) : a(\\\\\\\" \\\\\\\" + _a), N(a.length()), m(m), SA(N), LCP(N), x(N), y(N), w(max(m, N)), c(N) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ta[0] = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tDA();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tkasaiLCP();\\\",\\n\\t\\t\\t\\\"#define REF(X)\\\\t\\\\t\\\\t\\\\t\\\\t     \\\\\\\\\\\",\\n\\t\\t\\t\\\"\\\\t{\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t  \\\\\\\\\\\",\\n\\t\\t\\t\\\"\\\\t\\\\trotate(X.begin(), X.begin() + 1, X.end()); \\\\\\\\\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tX.pop_back();\\\\t\\\\t\\\\t      \\\\\\\\\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tREF(SA);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tREF(LCP);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ta = a.substr(1, a.size());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < (int)SA.size(); ++i) --SA[i];\\\",\\n\\t\\t\\t\\\"#undef REF\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tinline bool cmp(const int a, const int b, const int l) { return (y[a] == y[b] && y[a + l] == y[b + l]); }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid Sort() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < m; ++i) w[i] = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < N; ++i) ++w[x[y[i]]];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < m - 1; ++i) w[i + 1] += w[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = N - 1; i >= 0; --i) SA[--w[x[y[i]]]] = y[i];\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid DA() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < N; ++i) x[i] = a[i], y[i] = i;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tSort();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i, j = 1, p = 1; p < N; j <<= 1, m = p) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (p = 0, i = N - j; i < N; i++) y[p++] = i;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int k = 0; k < N; ++k)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (SA[k] >= j) y[p++] = SA[k] - j;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tSort();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (swap(x, y), p = 1, x[SA[0]] = 0, i = 1; i < N; ++i)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tx[SA[i]] = cmp(SA[i - 1], SA[i], j) ? p - 1 : p++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid kasaiLCP() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < N; i++) c[SA[i]] = i;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0, j, k = 0; i < N; LCP[c[i++]] = k)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (c[i] > 0)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tfor (k ? k-- : 0, j = SA[c[i] - 1]; a[i + k] == a[j + k]; k++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\telse\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tk = 0;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"int main() {\\\",\\n\\t\\t\\t\\\"\\\\tSuffixArray sa(\\\\\\\"mississippi\\\\\\\", 256);\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 0; i < sa.N - 1; ++i) cout << sa.SA[i] << ' ';\\\",\\n\\t\\t\\t\\\"\\\\tcout << '\\\\\\\\n';\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 0; i < sa.N - 1; ++i) cout << sa.LCP[i] << ' ';\\\",\\n\\t\\t\\t\\\"\\\\tcout << '\\\\\\\\n';\\\",\\n\\t\\t\\t\\\"\\\\t// 10 7 4 1 0 9 8 6 3 5 2\\\",\\n\\t\\t\\t\\\"\\\\t// 0 1 1 4 0 0 1 0 2 1 3\\\",\\n\\t\\t\\t\\\"\\\\treturn 0;\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"SA\\\"\\n\\t},\\n\\t\\\"manacher\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"manacher\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"vector<int> manacher_odd(string s) {\\\",\\n\\t\\t\\t\\\"\\\\tint n = s.size();\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> p(n + 2);\\\",\\n\\t\\t\\t\\\"\\\\ts = \\\\\\\"\\\\\\\\$\\\\\\\" + s + \\\\\\\"^\\\\\\\";\\\",\\n\\t\\t\\t\\\"\\\\tint l = 1, r = 0;\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 1; i <= n; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tp[i] = max(1, min(r - i, p[l + r - i]));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (s[i - p[i]] == s[i + p[i]]) p[i]++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (i + p[i] > r) r = i + p[i], l = i - p[i];\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treturn vector<int>(p.begin() + 1, p.end() - 1);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"vector<int> manacher(string s) {\\\",\\n\\t\\t\\t\\\"\\\\tstring t = \\\\\\\"\\\\\\\";\\\",\\n\\t\\t\\t\\\"\\\\tfor (auto c : s) t += '#', t += c;\\\",\\n\\t\\t\\t\\\"\\\\tt += \\\\\\\"#\\\\\\\";\\\",\\n\\t\\t\\t\\\"\\\\treturn manacher_odd(t);\\\",\\n\\t\\t\\t\\\"} /*\\\",\\n\\t\\t\\t\\\"// 0-index\\\",\\n\\t\\t\\t\\\"(2i) = (i - 1, i)\\\",\\n\\t\\t\\t\\\"(2i + 1) = (i)\\\",\\n\\t\\t\\t\\\"length = p - 1\\\",\\n\\t\\t\\t\\\"*/\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"manacher\\\"\\n\\t},\\n\\t\\\"_lmqzzz\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"_lmqzzz\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"#include <bits/stdc++.h>\\\",\\n\\t\\t\\t\\\"using namespace std;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"namespace std {\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <int D, typename T>\\\",\\n\\t\\t\\t\\\"struct Vec : public vector<Vec<D - 1, T>> {\\\",\\n\\t\\t\\t\\\"\\\\tstatic_assert(D >= 1, \\\\\\\"Dimension must be positive\\\\\\\");\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename... Args>\\\",\\n\\t\\t\\t\\\"\\\\tVec(int n = 0, Args... args) : vector<Vec<D - 1, T>>(n, Vec<D - 1, T>(args...)) {}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"struct Vec<1, T> : public vector<T> {\\\",\\n\\t\\t\\t\\\"\\\\tVec(int n = 0, T val = T()) : std::vector<T>(n, val) {}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"/* Example\\\",\\n\\t\\t\\t\\\"\\\\tVec<4, int64_t> f(n, k, 2, 2); // = f[n][k][2][2];\\\",\\n\\t\\t\\t\\\"\\\\tVec<2, int> adj(n); // graph\\\",\\n\\t\\t\\t\\\"*/\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class Fun>\\\",\\n\\t\\t\\t\\\"class y_combinator_result {\\\",\\n\\t\\t\\t\\\"\\\\tFun fun_;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"       public:\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class T>\\\",\\n\\t\\t\\t\\\"\\\\texplicit y_combinator_result(T &&fun) : fun_(std::forward<T>(fun)) {}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class... Args>\\\",\\n\\t\\t\\t\\\"\\\\tdecltype(auto) operator()(Args &&...args) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn fun_(std::ref(*this), std::forward<Args>(args)...);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class Fun>\\\",\\n\\t\\t\\t\\\"decltype(auto) y_combinator(Fun &&fun) {\\\",\\n\\t\\t\\t\\\"\\\\treturn y_combinator_result<std::decay_t<Fun>>(std::forward<Fun>(fun));\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"/* Example\\\",\\n\\t\\t\\t\\\"\\\\tauto fun = y_combinator([&](auto self, int x) -> void {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tself(x + 1);\\\",\\n\\t\\t\\t\\\"\\\\t});\\\",\\n\\t\\t\\t\\\"*/\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"}  // namespace std\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"int32_t main() {\\\",\\n\\t\\t\\t\\\"\\\\tios_base::sync_with_stdio(0);\\\",\\n\\t\\t\\t\\\"\\\\tcin.tie(0);\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"template\\\"\\n\\t},\\n\\t\\\"segtree_atcoder \\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"segtree_atcoder\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// SegTree, copied from AtCoder library {{{\\\",\\n\\t\\t\\t\\\"// AtCoder doc: https://atcoder.github.io/ac-library/master/document_en/segtree.html\\\",\\n\\t\\t\\t\\\"//\\\",\\n\\t\\t\\t\\\"// Notes:\\\",\\n\\t\\t\\t\\\"// - Index of elements from 0 -> n-1\\\",\\n\\t\\t\\t\\\"// - Range queries are [l, r-1]\\\",\\n\\t\\t\\t\\\"//\\\",\\n\\t\\t\\t\\\"// Tested:\\\",\\n\\t\\t\\t\\\"// - (binary search) https://atcoder.jp/contests/practice2/tasks/practice2_j\\\",\\n\\t\\t\\t\\\"// - https://oj.vnoi.info/problem/gss\\\",\\n\\t\\t\\t\\\"// - https://oj.vnoi.info/problem/nklineup\\\",\\n\\t\\t\\t\\\"// - (max_right & min_left for delete position queries) https://oj.vnoi.info/problem/segtree_itstr\\\",\\n\\t\\t\\t\\\"// - https://judge.yosupo.jp/problem/point_add_range_sum\\\",\\n\\t\\t\\t\\\"// - https://judge.yosupo.jp/problem/point_set_range_composite\\\",\\n\\t\\t\\t\\\"int ceil_pow2(int n) {\\\",\\n\\t\\t\\t\\\"\\\\tint x = 0;\\\",\\n\\t\\t\\t\\\"\\\\twhile ((1U << x) < (unsigned int)(n)) x++;\\\",\\n\\t\\t\\t\\\"\\\\treturn x;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <\\\",\\n\\t\\t\\t\\\"\\\\tclass T,\\\\t\\\\t// data type for nodes\\\",\\n\\t\\t\\t\\\"\\\\tT (*op)(T, T),  // operator to combine 2 nodes\\\",\\n\\t\\t\\t\\\"\\\\tT (*e)()\\\\t\\\\t// identity element\\\",\\n\\t\\t\\t\\\"\\\\t>\\\",\\n\\t\\t\\t\\\"struct SegTree {\\\",\\n\\t\\t\\t\\\"\\\\tSegTree() : SegTree(0) {}\\\",\\n\\t\\t\\t\\\"\\\\texplicit SegTree(int n) : SegTree(vector<T>(n, e())) {}\\\",\\n\\t\\t\\t\\\"\\\\texplicit SegTree(const vector<T> &v) : _n((int)v.size()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tlog = ceil_pow2(_n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tsize = 1 << log;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td = vector<T>(2 * size, e());\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < _n; i++) d[size + i] = v[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = size - 1; i >= 1; i--) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tupdate(i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// 0 <= p < n\\\",\\n\\t\\t\\t\\\"\\\\tvoid set(int p, T x) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= p && p < _n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tp += size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td[p] = x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i <= log; i++) update(p >> i);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// 0 <= p < n\\\",\\n\\t\\t\\t\\\"\\\\tT get(int p) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= p && p < _n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn d[p + size];\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// Get product in range [l, r-1]\\\",\\n\\t\\t\\t\\\"\\\\t// 0 <= l <= r <= n\\\",\\n\\t\\t\\t\\\"\\\\t// For empty segment (l == r) -> return e()\\\",\\n\\t\\t\\t\\\"\\\\tT prod(int l, int r) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= l && l <= r && r <= _n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tT sml = e(), smr = e();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tl += size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tr += size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (l < r) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (l & 1) sml = op(sml, d[l++]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (r & 1) smr = op(d[--r], smr);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tl >>= 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tr >>= 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn op(sml, smr);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tT all_prod() const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn d[1];\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// Binary search on SegTree to find largest r:\\\",\\n\\t\\t\\t\\\"\\\\t//\\\\tf(op(a[l] .. a[r-1])) = true   (assuming empty array is always true)\\\",\\n\\t\\t\\t\\\"\\\\t//\\\\tf(op(a[l] .. a[r])) = false\\\\t(assuming op(..., a[n]), which is out of bound, is always false)\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <bool (*f)(T)>\\\",\\n\\t\\t\\t\\\"\\\\tint max_right(int l) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn max_right(l, [](T x) { return f(x); });\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F>\\\",\\n\\t\\t\\t\\\"\\\\tint max_right(int l, F f) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= l && l <= _n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(f(e()));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l == _n) return _n;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tl += size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tT sm = e();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tdo {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\twhile (l % 2 == 0) l >>= 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (!f(op(sm, d[l]))) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\twhile (l < size) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tl = (2 * l);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tif (f(op(sm, d[l]))) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tsm = op(sm, d[l]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tl++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\treturn l - size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tsm = op(sm, d[l]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tl++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t} while ((l & -l) != l);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn _n;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// Binary search on SegTree to find smallest l:\\\",\\n\\t\\t\\t\\\"\\\\t//\\\\tf(op(a[l] .. a[r-1])) = true\\\\t  (assuming empty array is always true)\\\",\\n\\t\\t\\t\\\"\\\\t//\\\\tf(op(a[l-1] .. a[r-1])) = false   (assuming op(a[-1], ..), which is out of bound, is always false)\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <bool (*f)(T)>\\\",\\n\\t\\t\\t\\\"\\\\tint min_left(int r) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn min_left(r, [](T x) { return f(x); });\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class F>\\\",\\n\\t\\t\\t\\\"\\\\tint min_left(int r, F f) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= r && r <= _n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(f(e()));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (r == 0) return 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tr += size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tT sm = e();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tdo {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tr--;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\twhile (r > 1 && (r % 2)) r >>= 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (!f(op(d[r], sm))) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\twhile (r < size) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tr = (2 * r + 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tif (f(op(d[r], sm))) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tsm = op(d[r], sm);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tr--;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\treturn r + 1 - size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tsm = op(d[r], sm);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t} while ((r & -r) != r);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn 0;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"   private:\\\",\\n\\t\\t\\t\\\"\\\\tint _n, size, log;\\\",\\n\\t\\t\\t\\\"\\\\tvector<T> d;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid update(int k) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td[k] = op(d[2 * k], d[2 * k + 1]);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"// }}}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// SegTree examples {{{\\\",\\n\\t\\t\\t\\\"// Examples: Commonly used SegTree ops: max / min / sum\\\",\\n\\t\\t\\t\\\"struct MaxSegTreeOp {\\\",\\n\\t\\t\\t\\\"\\\\tstatic int op(int x, int y) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn max(x, y);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tstatic int e() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn INT_MIN;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"struct MinSegTreeOp {\\\",\\n\\t\\t\\t\\\"\\\\tstatic int op(int x, int y) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn min(x, y);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tstatic int e() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn INT_MAX;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"struct SumSegTreeOp {\\\",\\n\\t\\t\\t\\\"\\\\tstatic long long op(long long x, long long y) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn x + y;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tstatic long long e() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn 0;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// using STMax = SegTree<int, MaxSegTreeOp::op, MaxSegTreeOp::e>;\\\",\\n\\t\\t\\t\\\"// using STMin = SegTree<int, MinSegTreeOp::op, MinSegTreeOp::e>;\\\",\\n\\t\\t\\t\\\"// using STSum = SegTree<int, SumSegTreeOp::op, SumSegTreeOp::e>;\\\",\\n\\t\\t\\t\\\"// }}}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"segtree atcoder\\\"\\n\\t},\\n\\t\\\"lazysegtree\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"lazysegtree\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"// Lazy Segment Tree, copied from AtCoder {{{\\\",\\n\\t\\t\\t\\\"// Source: https://github.com/atcoder/ac-library/blob/master/atcoder/lazysegtree.hpp\\\",\\n\\t\\t\\t\\\"// Doc: https://atcoder.github.io/ac-library/master/document_en/lazysegtree.html\\\",\\n\\t\\t\\t\\\"//\\\",\\n\\t\\t\\t\\\"// Notes:\\\",\\n\\t\\t\\t\\\"// - Index of elements from 0\\\",\\n\\t\\t\\t\\\"// - Range queries are [l, r-1]\\\",\\n\\t\\t\\t\\\"// - composition(f, g) should return f(g())\\\",\\n\\t\\t\\t\\\"//\\\",\\n\\t\\t\\t\\\"// Tested:\\\",\\n\\t\\t\\t\\\"// - https://oj.vnoi.info/problem/qmax2\\\",\\n\\t\\t\\t\\\"// - https://oj.vnoi.info/problem/lites\\\",\\n\\t\\t\\t\\\"// - (range set, add, mult, sum) https://oj.vnoi.info/problem/segtree_itmix\\\",\\n\\t\\t\\t\\\"// - (range add (i-L)*A + B, sum) https://oj.vnoi.info/problem/segtree_itladder\\\",\\n\\t\\t\\t\\\"// - https://atcoder.jp/contests/practice2/tasks/practice2_l\\\",\\n\\t\\t\\t\\\"// - https://judge.yosupo.jp/problem/range_affine_range_sum\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"int ceil_pow2(int n) {\\\",\\n\\t\\t\\t\\\"\\\\tint x = 0;\\\",\\n\\t\\t\\t\\\"\\\\twhile ((1U << x) < (unsigned int)(n)) x++;\\\",\\n\\t\\t\\t\\\"\\\\treturn x;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"template<\\\",\\n\\t\\t\\t\\\"\\\\tclass S,\\\\t\\\\t\\\\t\\\\t // node data type\\\",\\n\\t\\t\\t\\\"\\\\tS (*op) (S, S),\\\\t\\\\t  // combine 2 nodes\\\",\\n\\t\\t\\t\\\"\\\\tS (*e) (),\\\\t\\\\t\\\\t   // identity element\\\",\\n\\t\\t\\t\\\"\\\\tclass F,\\\\t\\\\t\\\\t\\\\t // lazy propagation tag\\\",\\n\\t\\t\\t\\\"\\\\tS (*mapping) (F, S),\\\\t // apply tag F on a node\\\",\\n\\t\\t\\t\\\"\\\\tF (*composition) (F, F), // combine 2 tags\\\",\\n\\t\\t\\t\\\"\\\\tF (*id)()\\\\t\\\\t\\\\t\\\\t// identity tag\\\",\\n\\t\\t\\t\\\">\\\",\\n\\t\\t\\t\\\"struct LazySegTree {\\\",\\n\\t\\t\\t\\\"\\\\tLazySegTree() : LazySegTree(0) {}\\\",\\n\\t\\t\\t\\\"\\\\texplicit LazySegTree(int n) : LazySegTree(vector<S>(n, e())) {}\\\",\\n\\t\\t\\t\\\"\\\\texplicit LazySegTree(const vector<S>& v) : _n((int) v.size()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tlog = ceil_pow2(_n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tsize = 1 << log;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td = std::vector<S>(2 * size, e());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tlz = std::vector<F>(size, id());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < _n; i++) d[size + i] = v[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = size - 1; i >= 1; i--) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tupdate(i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// 0 <= p < n\\\",\\n\\t\\t\\t\\\"\\\\tvoid set(int p, S x) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= p && p < _n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tp += size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = log; i >= 1; i--) push(p >> i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td[p] = x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i <= log; i++) update(p >> i);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// 0 <= p < n\\\",\\n\\t\\t\\t\\\"\\\\tS get(int p) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= p && p < _n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tp += size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = log; i >= 1; i--) push(p >> i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn d[p];\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// Get product in range [l, r-1]\\\",\\n\\t\\t\\t\\\"\\\\t// 0 <= l <= r <= n\\\",\\n\\t\\t\\t\\\"\\\\t// For empty segment (l == r) -> return e()\\\",\\n\\t\\t\\t\\\"\\\\tS prod(int l, int r) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= l && l <= r && r <= _n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l == r) return e();\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tl += size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tr += size;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = log; i >= 1; i--) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (((l >> i) << i) != l) push(l >> i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (((r >> i) << i) != r) push((r - 1) >> i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tS sml = e(), smr = e();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (l < r) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (l & 1) sml = op(sml, d[l++]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (r & 1) smr = op(d[--r], smr);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tl >>= 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tr >>= 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn op(sml, smr);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tS all_prod() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn d[1];\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// 0 <= p < n\\\",\\n\\t\\t\\t\\\"\\\\tvoid apply(int p, F f) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= p && p < _n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tp += size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = log; i >= 1; i--) push(p >> i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td[p] = mapping(f, d[p]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i <= log; i++) update(p >> i);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// Apply f on all elements in range [l, r-1]\\\",\\n\\t\\t\\t\\\"\\\\t// 0 <= l <= r <= n\\\",\\n\\t\\t\\t\\\"\\\\tvoid apply(int l, int r, F f) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= l && l <= r && r <= _n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l == r) return;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tl += size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tr += size;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = log; i >= 1; i--) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (((l >> i) << i) != l) push(l >> i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (((r >> i) << i) != r) push((r - 1) >> i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t{\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint l2 = l, r2 = r;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\twhile (l < r) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (l & 1) all_apply(l++, f);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (r & 1) all_apply(--r, f);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tl >>= 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tr >>= 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tl = l2;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tr = r2;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i <= log; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (((l >> i) << i) != l) update(l >> i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (((r >> i) << i) != r) update((r - 1) >> i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// Binary search on SegTree to find largest r:\\\",\\n\\t\\t\\t\\\"\\\\t//\\\\tf(op(a[l] .. a[r-1])) = true   (assuming empty array is always true)\\\",\\n\\t\\t\\t\\\"\\\\t//\\\\tf(op(a[l] .. a[r])) = false\\\\t(assuming op(..., a[n]), which is out of bound, is always false)\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <bool (*g)(S)> int max_right(int l) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn max_right(l, [](S x) { return g(x); });\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class G> int max_right(int l, G g) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= l && l <= _n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(g(e()));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l == _n) return _n;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tl += size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = log; i >= 1; i--) push(l >> i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tS sm = e();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tdo {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\twhile (l % 2 == 0) l >>= 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (!g(op(sm, d[l]))) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\twhile (l < size) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tpush(l);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tl = (2 * l);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tif (g(op(sm, d[l]))) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tsm = op(sm, d[l]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tl++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\treturn l - size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tsm = op(sm, d[l]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tl++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t} while ((l & -l) != l);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn _n;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// Binary search on SegTree to find smallest l:\\\",\\n\\t\\t\\t\\\"\\\\t//\\\\tf(op(a[l] .. a[r-1])) = true\\\\t  (assuming empty array is always true)\\\",\\n\\t\\t\\t\\\"\\\\t//\\\\tf(op(a[l-1] .. a[r-1])) = false   (assuming op(a[-1], ..), which is out of bound, is always false)\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <bool (*g)(S)> int min_left(int r) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn min_left(r, [](S x) { return g(x); });\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class G> int min_left(int r, G g) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= r && r <= _n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(g(e()));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (r == 0) return 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tr += size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = log; i >= 1; i--) push((r - 1) >> i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tS sm = e();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tdo {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tr--;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\twhile (r > 1 && (r % 2)) r >>= 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (!g(op(d[r], sm))) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\twhile (r < size) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tpush(r);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tr = (2 * r + 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tif (g(op(d[r], sm))) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tsm = op(d[r], sm);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tr--;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\treturn r + 1 - size;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tsm = op(d[r], sm);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t} while ((r & -r) != r);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn 0;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"private:\\\",\\n\\t\\t\\t\\\"\\\\tint _n, size, log;\\\",\\n\\t\\t\\t\\\"\\\\tvector<S> d;\\\",\\n\\t\\t\\t\\\"\\\\tvector<F> lz;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid update(int k) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td[k] = op(d[2*k], d[2*k+1]);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tvoid all_apply(int k, F f) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td[k] = mapping(f, d[k]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (k < size) lz[k] = composition(f, lz[k]);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tvoid push(int k) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tall_apply(2*k, lz[k]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tall_apply(2*k+1, lz[k]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tlz[k] = id();\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"// }}}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// Examples {{{\\\",\\n\\t\\t\\t\\\"// https://onlinejudge.u-aizu.ac.jp/courses/library/3/DSL/2/DSL_2_D\\\",\\n\\t\\t\\t\\\"// https://onlinejudge.u-aizu.ac.jp/courses/library/3/DSL/2/DSL_2_E\\\",\\n\\t\\t\\t\\\"// https://onlinejudge.u-aizu.ac.jp/courses/library/3/DSL/2/DSL_2_F\\\",\\n\\t\\t\\t\\\"// https://onlinejudge.u-aizu.ac.jp/courses/library/3/DSL/2/DSL_2_G\\\",\\n\\t\\t\\t\\\"// https://onlinejudge.u-aizu.ac.jp/courses/library/3/DSL/2/DSL_2_H\\\",\\n\\t\\t\\t\\\"// https://onlinejudge.u-aizu.ac.jp/courses/library/3/DSL/2/DSL_2_I\\\",\\n\\t\\t\\t\\\"// supports:\\\",\\n\\t\\t\\t\\\"// - set a(l -> r) to val; val > NOT_SET\\\",\\n\\t\\t\\t\\\"// - add a(l -> r) += val\\\",\\n\\t\\t\\t\\\"// - find sum a(l -> r)\\\",\\n\\t\\t\\t\\\"// - find min a(l -> r)\\\",\\n\\t\\t\\t\\\"struct RangeSetAddMinSumOps {\\\",\\n\\t\\t\\t\\\"\\\\tstruct S { long long sum, min, sz; };\\\",\\n\\t\\t\\t\\\"\\\\tstatic S op(S l, S r) { return S { l.sum + r.sum, min(l.min, r.min), l.sz + r.sz }; }\\\",\\n\\t\\t\\t\\\"\\\\tstatic S e() { return S {0LL, INT_MAX, 0}; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic const long long NOT_SET = -1000111000;\\\",\\n\\t\\t\\t\\\"\\\\tstruct F { long long set, add; };\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic S mapping(F f, S s) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (f.set == NOT_SET) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn S {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\ts.sum + f.add * s.sz,\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\ts.min + f.add,\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\ts.sz,\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t};\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn S {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t(f.set + f.add) * s.sz,\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tf.set + f.add,\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ts.sz,\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t};\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tstatic F composition(F f, F g) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (f.set == NOT_SET) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn F { g.set, g.add + f.add };\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn f;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tstatic F id() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn F { NOT_SET, 0 };\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"// }}}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"lazysegtree atcoder\\\"\\n\\t},\\n\\t\\\"primitive root\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"primitive root\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"int totient(int n) {\\\",\\n\\t\\t\\t\\\"\\\\tint ans = n;\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 2; i * i <= n; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (n % i == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\twhile (n % i == 0) n /= i;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tans = ans / i * (i - 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tif (n > 1) ans = ans / n * (n - 1);\\\",\\n\\t\\t\\t\\\"\\\\treturn ans;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"int power(int a, int b, int m) {\\\",\\n\\t\\t\\t\\\"\\\\tint res = 1;\\\",\\n\\t\\t\\t\\\"\\\\twhile (b > 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (b & 1) res = 1LL * res * a % m;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ta = 1LL * a * a % m;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tb >>= 1;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treturn res;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"// g is a primitive root modulo p if and only if for any integer a such that\\\",\\n\\t\\t\\t\\\"// gcd(a, p) = 1, there exists an integer k such that: g^k = a(mod p).\\\",\\n\\t\\t\\t\\\"// primitive root modulo n exists iff n = 1, 2, 4 or n = p^k or 2 * p^k for some odd prime p\\\",\\n\\t\\t\\t\\\"int primitive_root(int p) {\\\",\\n\\t\\t\\t\\\"\\\\t// first check if primitive root exists or not. I have omitted this part here\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> fact;\\\",\\n\\t\\t\\t\\\"\\\\tint phi = totient(p), n = phi;\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 2; i * i <= n; ++i) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (n % i == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfact.push_back(i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\twhile (n % i == 0) n /= i;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tif (n > 1) fact.push_back(n);\\\",\\n\\t\\t\\t\\\"\\\\tfor (int res = 2; res <= p; ++res) {  // this loop will run at most (logp ^ 6) times i.e. until a root is found\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbool ok = true;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// check if this is a primitive root modulo p\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (size_t i = 0; i < fact.size() && ok; ++i)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tok &= power(res, phi / fact[i], p) != 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (ok) return res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treturn -1;\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"primitive root mod n\\\"\\n\\t},\\n\\t\\\"lca\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"lca\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"class lca_t {\\\",\\n\\t\\t\\t\\\"   public:\\\",\\n\\t\\t\\t\\\"\\\\tvector<vector<int>> rmq;\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> pos;\\\",\\n\\t\\t\\t\\\"\\\\tvector<int64_t> d;\\\",\\n\\t\\t\\t\\\"\\\\tvector<vector<pair<int, T>>> adj;\\\",\\n\\t\\t\\t\\\"\\\\tint timer;\\\",\\n\\t\\t\\t\\\"\\\\tint n;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tlca_t(const int &n) : n(n) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tadj.resize(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tpos.resize(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td.resize(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ttimer = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\trmq.assign(1, vector<int>(2 * n));\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid add_edge(int u, int v, T w = 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tadj[u].emplace_back(v, w);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tadj[v].emplace_back(u, w);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tlca_t(const int &n, const vector<vector<int>> &_adj) : n(n) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tadj.resize(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < n; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int j : _adj[i]) adj[i].emplace_back(j, 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tpos.resize(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td.resize(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ttimer = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\trmq.assign(1, vector<int>(2 * n));\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tlca_t(const int &n, const vector<vector<pair<int, T>>> &adj) : n(n), adj(adj) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tpos.resize(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td.resize(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ttimer = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\trmq.assign(1, vector<int>(2 * n));\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid dfs(int u, int p) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\trmq[0][timer++] = u;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (auto &&[v, w] : adj[u]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (v == p) continue;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\td[v] = d[u] + w;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tdfs(v, u);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\trmq[0][timer++] = u;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid build(int root) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ttimer = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td[root] = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tdfs(root, -1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < timer; i++) pos[rmq[0][i]] = i;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\trmq.resize(__lg(timer) + 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i <= __lg(timer); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\trmq[i].resize(timer - (1 << i) + 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int j = 0; j + (1 << i) <= timer; j++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\trmq[i][j] = d[rmq[i - 1][j]] < d[rmq[i - 1][j + (1 << (i - 1))]]\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t? rmq[i - 1][j]\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t: rmq[i - 1][j + (1 << (i - 1))];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tint get(int u, int v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint l = pos[u], r = pos[v];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l > r) swap(l, r);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint i = __lg(r - l + 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tr -= (1 << i) - 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn d[rmq[i][l]] < d[rmq[i][r]] ? rmq[i][l] : rmq[i][r];\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tint64_t dist(int u, int v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn d[u] + d[v] - 2 * d[get(u, v)];\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"lca\\\"\\n\\t},\\n\\t\\\"wavelet\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"wavelet\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"/*\\\",\\n\\t\\t\\t\\\"https://github.com/marvinthang/algorithm-library/blob/main/lib/data-structures/wavelet_tree.h\\\",\\n\\t\\t\\t\\\"*/\\\",\\n\\t\\t\\t\\\"struct WaveletTree {\\\",\\n\\t\\t\\t\\\"\\\\tint lo, hi, mid;\\\",\\n\\t\\t\\t\\\"\\\\tstd::vector<int> b;\\\",\\n\\t\\t\\t\\\"\\\\tWaveletTree *left, *right;\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class RandomIt>\\\",\\n\\t\\t\\t\\\"\\\\tWaveletTree(RandomIt first, RandomIt last) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (first == last) return;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tauto x = minmax_element(first, last);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tlo = *x.fi;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\thi = *x.se;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (lo == hi) return;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tmid = lo + hi >> 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tauto f = [&](int x) { return x <= mid; };\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tb.reserve(last - first + 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tb.push_back(0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (auto it = first; it != last; ++it) b.push_back(b.back() + f(*it));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tauto mid = stable_partition(first, last, f);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tleft = new WaveletTree(first, mid);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tright = new WaveletTree(mid, last);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t// kth smallest element in [l, r)\\\",\\n\\t\\t\\t\\\"\\\\tint kth_smallest(int l, int r, int k) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l > r) return 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (lo == hi) return lo;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint inLeft = b[r] - b[l];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (k <= inLeft) return left->kth_smallest(b[l], b[r], k);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn right->kth_smallest(l - b[l], r - b[r], k - inLeft);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t// kth largest element in [l, r)\\\",\\n\\t\\t\\t\\\"\\\\tint kth_largest(int l, int r, int k) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l > r) return 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (lo == hi) return lo;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint inRight = r - l - b[r] + b[l];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (k <= inRight) return right->kth_largest(l - b[l], r - b[r], k);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn left->kth_largest(b[l], b[r], k - inRight);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t// count of nos in [l, r) Less than or equal to k\\\",\\n\\t\\t\\t\\\"\\\\tint LTE(int l, int r, int k) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l > r || k < lo) return 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (hi <= k) return r - l;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn left->LTE(b[l], b[r], k) + right->LTE(l - b[l], r - b[r], k);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t// count of nos in [l, r) equal to k\\\",\\n\\t\\t\\t\\\"\\\\tint count(int l, int r, int k) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l > r || k < lo || k > hi) return 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (lo == hi) return r - l;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (k <= mid) return left->count(b[l], b[r], k);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn right->count(l - b[l], r - b[r], k);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"wavelet-tree\\\"\\n\\t},\\n\\t\\\"persistent_segtree_pointer\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"persistent_segtree\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"struct Node {\\\",\\n\\t\\t\\t\\\"\\\\tNode *left, *right;\\\",\\n\\t\\t\\t\\\"\\\\tint64_t sum;\\\",\\n\\t\\t\\t\\\"\\\\tint cnt;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tNode() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tleft = right = nullptr;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tsum = cnt = 0;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tNode(Node *x) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tleft = x->left;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tright = x->right;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tsum = x->sum;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tcnt = x->cnt;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"Node *BuildTree(const int &l, const int &r) {\\\",\\n\\t\\t\\t\\\"\\\\tif (l > r) return nullptr;\\\",\\n\\t\\t\\t\\\"\\\\tNode *node = new Node();\\\",\\n\\t\\t\\t\\\"\\\\tif (l == r) return node;\\\",\\n\\t\\t\\t\\\"\\\\tint m = l + r >> 1;\\\",\\n\\t\\t\\t\\\"\\\\tnode->left = BuildTree(l, m);\\\",\\n\\t\\t\\t\\\"\\\\tnode->right = BuildTree(m + 1, r);\\\",\\n\\t\\t\\t\\\"\\\\treturn node;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"Node *update(Node *root, const int &pos, const int &d) {\\\",\\n\\t\\t\\t\\\"\\\\tNode *newRoot = new Node(root);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tNode *p = newRoot;\\\",\\n\\t\\t\\t\\\"\\\\t// int l = 0, r = n - 2;\\\",\\n\\t\\t\\t\\\"\\\\tint l, r;\\\",\\n\\t\\t\\t\\\"\\\\twhile (true) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// p->sum += 1ll * d * SD[pos];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// p->cnt += d;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// if (l == r) return newRoot;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint m = l + r >> 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (pos > m) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tp->right = new Node(p->right);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tp = p->right;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tl = m + 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t} else {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tp->left = new Node(p->left);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tp = p->left;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tr = m;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"psegtree\\\"\\n\\t},\\n\\t\\\"matrix_t\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"matrix_t\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"class matrix_t {\\\",\\n\\t\\t\\t\\\"       public:\\\",\\n\\t\\t\\t\\\"\\\\tstatic const int NMAX = | ;\\\",\\n\\t\\t\\t\\\"\\\\tstatic const int64_t MXMOD = 1ll * (int64_t)(7e18 / MOD) * MOD;\\\",\\n\\t\\t\\t\\\"\\\\tint64_t d[NMAX][NMAX];\\\",\\n\\t\\t\\t\\\"\\\\tint r, c;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tmatrix_t(int r = 0, int c = 0, int init = 0) : r(r), c(c) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < r; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int j = 0; j < c; j++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\td[i][j] = init;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tint64_t *operator[](int i) { return d[i]; }\\\",\\n\\t\\t\\t\\\"\\\\tconst int64_t *operator[](int i) const { return d[i]; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tmatrix_t operator*(const matrix_t &other) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tmatrix_t res(r, other.c);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < res.r; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int j = 0; j < res.c; j++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tfor (int k = 0; k < c; k++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tres[i][j] += d[i][k] * other[k][j];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tif (res[i][j] >= MXMOD) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tres[i][j] -= MXMOD;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < res.r; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int j = 0; j < res.c; j++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tres[i][j] %= MOD;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid operator*=(const matrix_t &other) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t*this = *this * other;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tmatrix_t operator^(int64_t p) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(r == c);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tmatrix_t res(r, c), mat = *this;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < r; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tres[i][i] = 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (; p; p >>= 1, mat *= mat) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (p & 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tres *= mat;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid operator^=(const int64_t &p) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t*this = *this ^ p;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tfriend ostream &operator<<(ostream &os, const matrix_t &a) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tos << a.r << ' ' << a.c << '\\\\\\\\n';\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < a.r; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int j = 0; j < a.c; j++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tos << a[i][j] << \\\\\\\" \\\\\\\\n\\\\\\\"[j == a.c - 1];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tos << '\\\\\\\\n';\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn os;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"maximummatching_t\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"maximummatching_t\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"class maximumMatching_t {\\\",\\n\\t\\t\\t\\\"       private:\\\",\\n\\t\\t\\t\\\"\\\\tbool bfs() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tqueue<int> q;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i <= n_left; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (mat[i] == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tq.emplace(i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\td[i] = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t} else {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\td[i] = 1e9;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td[0] = 1e9;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (q.size()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint u = q.front();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tq.pop();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (d[u] >= d[0]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tcontinue;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int v : adj[u]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (mini(d[rmat[v]], d[u] + 1)) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tq.emplace(rmat[v]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn d[0] != 1e9;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbool bpm(const int &u) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (!u) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int v : adj[u]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (d[rmat[v]] == d[u] + 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (bpm(rmat[v])) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tmat[u] = v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\trmat[v] = u;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\treturn 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\td[u] = 1e9;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn 0;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid dfs(const int &u, const bool &_) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvis[u][_] = 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int v : g[u][_]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (vis[v][_ ^ 1] == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tdfs(v, _ ^ 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"       public:\\\",\\n\\t\\t\\t\\\"\\\\tstatic constexpr int NMAX = 100000;\\\",\\n\\t\\t\\t\\\"\\\\tint mat[NMAX], rmat[NMAX], d[NMAX];\\\",\\n\\t\\t\\t\\\"\\\\tbool vis[NMAX][2];\\\",\\n\\t\\t\\t\\\"\\\\tint n_left, n_right;\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> adj[NMAX];\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> g[NMAX][2];\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tmaximumMatching_t(int n_left = 0, int n_right = 0)\\\",\\n\\t\\t\\t\\\"\\\\t    : n_left(n_left), n_right(n_right) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i <= n_left; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tvector<int>().swap(adj[i]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid addEdge(const int &u, const int &v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tadj[u].emplace_back(v);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tint findMaximumMatching() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tmemset(mat, 0, (n_left + 1) * sizeof(int));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tmemset(rmat, 0, (n_right + 1) * sizeof(int));\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint res = 0;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (bfs()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int i = 1; i <= n_left; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (mat[i] == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tres += bpm(i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvector<pair<int, bool> > minimumVertexCover(const bool &inverse = 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i <= n_left; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tvector<int>().swap(g[i][0]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tvis[i][0] = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i <= n_right; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tvector<int>().swap(g[i][1]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tvis[i][1] = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t/// if it's a matching: edge from right->left\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t/// otherwise: edge from left->right\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i <= n_left; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int v : adj[i]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (v == mat[i]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tg[v][1].emplace_back(i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t} else {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tg[i][0].emplace_back(v);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i <= n_left; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (mat[i] == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tdfs(i, 0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<pair<int, bool> > ans;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i <= n_left; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (vis[i][0] == inverse) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tans.emplace_back(i, 0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i <= n_right; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (vis[i][1] != inverse) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tans.emplace_back(i, 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn ans;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"segtree_t\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"segtree_t\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"class segtree_t {\\\",\\n\\t\\t\\t\\\"public:\\\",\\n\\t\\t\\t\\\"\\\\tsegtree_t *left, *right;\\\",\\n\\t\\t\\t\\\"\\\\tint l, r, m, val, lazy;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tsegtree_t(int l, int r) : l(l), r(r), m(l + r >> 1), val(0), lazy(0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l == r) return;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tleft = new segtree_t(l, m);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tright = new segtree_t(m + 1, r);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid Update(int s, int t, int x) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (r < s || l > t) return;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (s <= l && r <= t) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tval += x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tlazy += x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tDown();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tleft->Update(s, t, x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tright->Update(s, t, x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tUp();\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tint Get(int s, int t) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (r < s or l > t) return nullptr;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (s <= l && r <= t) return val;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tDown();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn max(left->Get(s, t), right->Get(s, t));\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid Up() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tval = max(left->val, right->val);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid Down() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tleft->lazy += lazy;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tright->lazy += lazy;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tright->val += lazy;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tleft->val += lazy;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tlazy = 0;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"twosat\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"twosat\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"class graph {\\\",\\n\\t\\t\\t\\\"   public:\\\",\\n\\t\\t\\t\\\"\\\\tstruct edge {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint from;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint to;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tT cost;\\\",\\n\\t\\t\\t\\\"\\\\t};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvector<edge> edges;\\\",\\n\\t\\t\\t\\\"\\\\tvector<vector<int>> g;\\\",\\n\\t\\t\\t\\\"\\\\tint n;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tgraph(int _n) : n(_n) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tg.resize(n);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvirtual int add(int from, int to, T cost) = 0;\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"class digraph : public graph<T> {\\\",\\n\\t\\t\\t\\\"   public:\\\",\\n\\t\\t\\t\\\"\\\\tusing graph<T>::edges;\\\",\\n\\t\\t\\t\\\"\\\\tusing graph<T>::g;\\\",\\n\\t\\t\\t\\\"\\\\tusing graph<T>::n;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tdigraph(int _n) : graph<T>(_n) {\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tint add(int from, int to, T cost = 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= from && from < n && 0 <= to && to < n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint id = (int)edges.size();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tg[from].push_back(id);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tedges.push_back({from, to, cost});\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn id;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tdigraph<T> reverse() const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tdigraph<T> rev(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (auto &e : edges) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\trev.add(e.to, e.from, e.cost);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn rev;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"vector<int> find_scc(const digraph<T> &g, int &cnt) {\\\",\\n\\t\\t\\t\\\"\\\\tdigraph<T> g_rev = g.reverse();\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> order;\\\",\\n\\t\\t\\t\\\"\\\\tvector<bool> was(g.n, false);\\\",\\n\\t\\t\\t\\\"\\\\tfunction<void(int)> dfs1 = [&](int v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twas[v] = true;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int id : g.g[v]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tauto &e = g.edges[id];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint to = e.to;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (!was[to]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tdfs1(to);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\torder.push_back(v);\\\",\\n\\t\\t\\t\\\"\\\\t};\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 0; i < g.n; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (!was[i]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tdfs1(i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> c(g.n, -1);\\\",\\n\\t\\t\\t\\\"\\\\tfunction<void(int)> dfs2 = [&](int v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int id : g_rev.g[v]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tauto &e = g_rev.edges[id];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint to = e.to;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (c[to] == -1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tc[to] = c[v];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tdfs2(to);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t};\\\",\\n\\t\\t\\t\\\"\\\\tcnt = 0;\\\",\\n\\t\\t\\t\\\"\\\\tfor (int id = g.n - 1; id >= 0; id--) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint i = order[id];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (c[i] != -1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tcontinue;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tc[i] = cnt++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tdfs2(i);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treturn c;\\\",\\n\\t\\t\\t\\\"\\\\t// c[i] <= c[j] for every edge i -> j\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"class twosat {\\\",\\n\\t\\t\\t\\\"   public:\\\",\\n\\t\\t\\t\\\"\\\\tdigraph<int> g;\\\",\\n\\t\\t\\t\\\"\\\\tint n;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\ttwosat(int _n) : g(digraph<int>(2 * _n)), n(_n) {\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// (v[x] == value_x)\\\",\\n\\t\\t\\t\\\"\\\\tinline void add(int x, int value_x) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= x && x < n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= value_x && value_x <= 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tg.add(2 * x + (value_x ^ 1), 2 * x + value_x);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// (v[x] == value_x || v[y] == value_y)\\\",\\n\\t\\t\\t\\\"\\\\tinline void add(int x, int value_x, int y, int value_y) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= x && x < n && 0 <= y && y < n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= value_x && value_x <= 1 && 0 <= value_y && value_y <= 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tg.add(2 * x + (value_x ^ 1), 2 * y + value_y);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tg.add(2 * y + (value_y ^ 1), 2 * x + value_x);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tinline vector<int> solve() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint cnt;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<int> c = find_scc(g, cnt);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<int> res(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < n; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (c[2 * i] == c[2 * i + 1]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\treturn vector<int>();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tres[i] = (c[2 * i] < c[2 * i + 1]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"eulerian\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"eulerian\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"// N - số đỉnh nhiều nhất\\\",\\n\\t\\t\\t\\\"// M - số cạnh nhiều nhất\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"struct Edge {\\\",\\n\\t\\t\\t\\\"\\\\tint target, id;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tEdge(int _target, int _id) : target(_target), id(_id) {}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"vector<Edge> adj[N];  // Danh sách kề lưu cạnh và chỉ số\\\",\\n\\t\\t\\t\\\"bool used_edge[M];\\\\t// Mảng đánh dấu cạnh đã thăm\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"list<int> euler_walk(int u) {\\\",\\n\\t\\t\\t\\\"\\\\t// Sử dụng cấu trúc danh sách liên kết để lưu kết quả\\\",\\n\\t\\t\\t\\\"\\\\tlist<int> ans;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// Xuất phát từ đỉnh u\\\",\\n\\t\\t\\t\\\"\\\\tans.push_back(u);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\twhile (!adj[u].empty()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// Chọn một cạnh bất kì chưa thăm\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint v = adj[u].back().target;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint eid = adj[u].back().id;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// Xoá cạnh vừa đi qua khỏi đồ thị\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// Lưu ý việc xoá cạnh có thể **ảnh hưởng** tới các\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// thao tác trên đồ thị về sau do việc xoá cạnh sẽ\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// **phá huỷ** hoàn toàn danh sách cạnh\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// Nên sao lưu danh sách cạnh ra biến khác nếu cần dùng lại\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tadj[u].pop_back();\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// Bỏ qua nếu cạnh đã thăm\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (used_edge[eid]) continue;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// Đánh dấu cạnh đã đi qua\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tused_edge[eid] = true;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// Di chuyển sang đỉnh mới\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tu = v;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// Thêm cạnh vào đường đi hiện tại\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// Có nhiều cách lưu chu trình như lưu đỉnh, cạnh,\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// chỉ số cạnh, ...\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tans.push_back(u);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// Tìm cạnh chưa thăm từ một đỉnh trên chu trình hiện tại\\\",\\n\\t\\t\\t\\\"\\\\t// Bắt đầu từ đỉnh thứ hai trong chu trình do ta biết\\\",\\n\\t\\t\\t\\\"\\\\t// rằng đỉnh đầu tiên trong chu trình (u) đã không còn\\\",\\n\\t\\t\\t\\\"\\\\t// cạnh ra\\\",\\n\\t\\t\\t\\\"\\\\tfor (auto it = ++ans.begin(); it != ans.end(); ++it) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// Gọi đệ quy tiếp tục tìm chu trình mới\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tauto t = euler_walk(*it);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// Nối chu trình tìm được vào chu trình hiện tại\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tt.pop_back();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tans.splice(it, t);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\treturn ans;\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"extgcd\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"extgcd\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"T extgcd(T a, T b, T &x, T &y) {\\\",\\n\\t\\t\\t\\\"\\\\tif (a == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tx = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ty = 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn b;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tT p = b / a;\\\",\\n\\t\\t\\t\\\"\\\\tT g = extgcd(b - p * a, a, y, x);\\\",\\n\\t\\t\\t\\\"\\\\tx -= p * y;\\\",\\n\\t\\t\\t\\\"\\\\treturn g;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"bool diophantine(T a, T b, T c, T &x, T &y, T &g) {\\\",\\n\\t\\t\\t\\\"\\\\tif (a == 0 && b == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (c == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tx = y = g = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn true;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn false;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tif (a == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (c % b == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tx = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ty = c / b;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tg = abs(b);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn true;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn false;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tif (b == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (c % a == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tx = c / a;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ty = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tg = abs(a);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn true;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn false;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tg = extgcd(a, b, x, y);\\\",\\n\\t\\t\\t\\\"\\\\tif (c % g != 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn false;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tT dx = c / a;\\\",\\n\\t\\t\\t\\\"\\\\tc -= dx * a;\\\",\\n\\t\\t\\t\\\"\\\\tT dy = c / b;\\\",\\n\\t\\t\\t\\\"\\\\tc -= dy * b;\\\",\\n\\t\\t\\t\\\"\\\\tx = dx + (T)((__int128)x * (c / g) % b);\\\",\\n\\t\\t\\t\\\"\\\\ty = dy + (T)((__int128)y * (c / g) % a);\\\",\\n\\t\\t\\t\\\"\\\\tg = abs(g);\\\",\\n\\t\\t\\t\\\"\\\\treturn true;\\\",\\n\\t\\t\\t\\\"\\\\t// |x|, |y| <= max(|a|, |b|, |c|) [tested]\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"bool crt(long long k1, long long m1, long long k2, long long m2, long long &k, long long &m) {\\\",\\n\\t\\t\\t\\\"\\\\tk1 %= m1;\\\",\\n\\t\\t\\t\\\"\\\\tif (k1 < 0) k1 += m1;\\\",\\n\\t\\t\\t\\\"\\\\tk2 %= m2;\\\",\\n\\t\\t\\t\\\"\\\\tif (k2 < 0) k2 += m2;\\\",\\n\\t\\t\\t\\\"\\\\tlong long x, y, g;\\\",\\n\\t\\t\\t\\\"\\\\tif (!diophantine(m1, -m2, k2 - k1, x, y, g)) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn false;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tlong long dx = m2 / g;\\\",\\n\\t\\t\\t\\\"\\\\tlong long delta = x / dx - (x % dx < 0);\\\",\\n\\t\\t\\t\\\"\\\\tk = m1 * (x - dx * delta) + k1;\\\",\\n\\t\\t\\t\\\"\\\\tm = m1 / g * m2;\\\",\\n\\t\\t\\t\\\"\\\\tassert(0 <= k && k < m);\\\",\\n\\t\\t\\t\\\"\\\\treturn true;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// for distinct prime modulos\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"void crt_garner(const vector<int> &p, const vector<int> &a, T &res) {\\\",\\n\\t\\t\\t\\\"\\\\tassert(p.size() == a.size());\\\",\\n\\t\\t\\t\\\"\\\\tauto inverse = [&](int q, int m) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tq %= m;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (q < 0) q += m;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint b = m, u = 0, v = 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (q) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint t = b / q;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tb -= t * q;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tswap(q, b);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tu -= t * v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tswap(u, v);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(b == 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (u < 0) u += m;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn u;\\\",\\n\\t\\t\\t\\\"\\\\t};\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> x(p.size());\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 0; i < (int)p.size(); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= a[i] && a[i] < p[i]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tx[i] = a[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int j = 0; j < i; j++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tx[i] = (int)((long long)(x[i] - x[j]) * inverse(p[j], p[i]) % p[i]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (x[i] < 0) x[i] += p[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tres = 0;\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = (int)p.size() - 1; i >= 0; i--) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres = res * p[i] + x[i];\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"bigint\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"bigint\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const int base = 1000000000;\\\",\\n\\t\\t\\t\\\"const int base_digits = 9;\\\",\\n\\t\\t\\t\\\"struct bigint {\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> a;\\\",\\n\\t\\t\\t\\\"\\\\tint sign;\\\",\\n\\t\\t\\t\\\"\\\\tint size() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (a.empty()) return 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint ans = (a.size() - 1) * base_digits;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint ca = a.back();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (ca)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tans++, ca /= 10;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn ans;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tbigint operator^(const bigint &v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbigint ans = 1, a = *this, b = v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (!b.isZero()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (b % 2)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tans *= a;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ta *= a, b /= 2;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn ans;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tstring to_string() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tstringstream ss;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tss << *this;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tstring s;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tss >> s;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn s;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tint sumof() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tstring s = to_string();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint ans = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (auto c : s) ans += c - '0';\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn ans;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tbigint() : sign(1) {\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbigint(long long v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t*this = v;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbigint(const string &s) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tread(s);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid operator=(const bigint &v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tsign = v.sign;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ta = v.a;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid operator=(long long v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tsign = 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ta.clear();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (v < 0)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tsign = -1, v = -v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (; v > 0; v = v / base)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ta.push_back(v % base);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbigint operator+(const bigint &v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (sign == v.sign) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tbigint res = v;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int i = 0, carry = 0; i < (int)max(a.size(), v.a.size()) || carry; ++i) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (i == (int)res.a.size())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tres.a.push_back(0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tres.a[i] += carry + (i < (int)a.size() ? a[i] : 0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tcarry = res.a[i] >= base;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (carry)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tres.a[i] -= base;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this - (-v);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbigint operator-(const bigint &v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (sign == v.sign) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (abs() >= v.abs()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tbigint res = *this;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tfor (int i = 0, carry = 0; i < (int)v.a.size() || carry; ++i) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tres.a[i] -= carry + (i < (int)v.a.size() ? v.a[i] : 0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tcarry = res.a[i] < 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tif (carry)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tres.a[i] += base;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tres.trim();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn -(v - *this);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this + (-v);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid operator*=(int v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (v < 0)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tsign = -sign, v = -v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0, carry = 0; i < (int)a.size() || carry; ++i) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (i == (int)a.size())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\ta.push_back(0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tlong long cur = a[i] * (long long)v + carry;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tcarry = (int)(cur / base);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ta[i] = (int)(cur % base);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t// asm(\\\\\\\"divl %%ecx\\\\\\\" : \\\\\\\"=a\\\\\\\"(carry), \\\\\\\"=d\\\\\\\"(a[i]) : \\\\\\\"A\\\\\\\"(cur), \\\\\\\"c\\\\\\\"(base));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ttrim();\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbigint operator*(int v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbigint res = *this;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres *= v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid operator*=(long long v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (v < 0)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tsign = -sign, v = -v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (v > base) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t*this = *this * (v / base) * base + *this * (v % base);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0, carry = 0; i < (int)a.size() || carry; ++i) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (i == (int)a.size())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\ta.push_back(0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tlong long cur = a[i] * (long long)v + carry;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tcarry = (int)(cur / base);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ta[i] = (int)(cur % base);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t// asm(\\\\\\\"divl %%ecx\\\\\\\" : \\\\\\\"=a\\\\\\\"(carry), \\\\\\\"=d\\\\\\\"(a[i]) : \\\\\\\"A\\\\\\\"(cur), \\\\\\\"c\\\\\\\"(base));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ttrim();\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbigint operator*(long long v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbigint res = *this;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres *= v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tfriend pair<bigint, bigint> divmod(const bigint &a1, const bigint &b1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint norm = base / (b1.a.back() + 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbigint a = a1.abs() * norm;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbigint b = b1.abs() * norm;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbigint q, r;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tq.a.resize(a.a.size());\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = a.a.size() - 1; i >= 0; i--) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tr *= base;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tr += a.a[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint s1 = r.a.size() <= b.a.size() ? 0 : r.a[b.a.size()];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint s2 = r.a.size() <= b.a.size() - 1 ? 0 : r.a[b.a.size() - 1];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint d = ((long long)base * s1 + s2) / b.a.back();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tr -= b * d;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\twhile (r < 0)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tr += b, --d;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tq.a[i] = d;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tq.sign = a1.sign * b1.sign;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tr.sign = a1.sign;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tq.trim();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tr.trim();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn make_pair(q, r / norm);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbigint operator/(const bigint &v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn divmod(*this, v).first;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbigint operator%(const bigint &v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn divmod(*this, v).second;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid operator/=(int v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (v < 0)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tsign = -sign, v = -v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = (int)a.size() - 1, rem = 0; i >= 0; --i) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tlong long cur = a[i] + rem * (long long)base;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ta[i] = (int)(cur / v);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\trem = (int)(cur % v);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ttrim();\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbigint operator/(int v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbigint res = *this;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres /= v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tint operator%(int v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (v < 0)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tv = -v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint m = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = a.size() - 1; i >= 0; --i)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tm = (a[i] + m * (long long)base) % v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn m * sign;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid operator+=(const bigint &v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t*this = *this + v;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tvoid operator-=(const bigint &v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t*this = *this - v;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tvoid operator*=(const bigint &v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t*this = *this * v;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tvoid operator/=(const bigint &v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t*this = *this / v;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbool operator<(const bigint &v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (sign != v.sign)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn sign < v.sign;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (a.size() != v.a.size())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn a.size() * sign < v.a.size() * v.sign;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = a.size() - 1; i >= 0; i--)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (a[i] != v.a[i])\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\treturn a[i] * sign < v.a[i] * sign;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn false;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbool operator>(const bigint &v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn v < *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tbool operator<=(const bigint &v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn !(v < *this);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tbool operator>=(const bigint &v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn !(*this < v);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tbool operator==(const bigint &v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn !(*this < v) && !(v < *this);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tbool operator!=(const bigint &v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this < v || v < *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid trim() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (!a.empty() && !a.back())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ta.pop_back();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (a.empty())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tsign = 1;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbool isZero() const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn a.empty() || (a.size() == 1 && !a[0]);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbigint operator-() const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbigint res = *this;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres.sign = -sign;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbigint abs() const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbigint res = *this;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres.sign *= res.sign;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tlong long longValue() const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tlong long res = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = a.size() - 1; i >= 0; i--)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tres = res * base + a[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res * sign;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tfriend bigint gcd(const bigint &a, const bigint &b) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn b.isZero() ? a : gcd(b, a % b);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tfriend bigint lcm(const bigint &a, const bigint &b) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn a / gcd(a, b) * b;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid read(const string &s) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tsign = 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ta.clear();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint pos = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (pos < (int)s.size() && (s[pos] == '-' || s[pos] == '+')) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (s[pos] == '-')\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tsign = -sign;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t++pos;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = s.size() - 1; i >= pos; i -= base_digits) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint x = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int j = max(pos, i - base_digits + 1); j <= i; j++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tx = x * 10 + s[j] - '0';\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ta.push_back(x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ttrim();\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tfriend istream &operator>>(istream &stream, bigint &v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tstring s;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tstream >> s;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tv.read(s);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn stream;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tfriend ostream &operator<<(ostream &stream, const bigint &v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (v.sign == -1)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tstream << '-';\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tstream << (v.a.empty() ? 0 : v.a.back());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = (int)v.a.size() - 2; i >= 0; --i)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tstream << setw(base_digits) << setfill('0') << v.a[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn stream;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic vector<int> convert_base(const vector<int> &a, int old_digits, int new_digits) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<long long> p(max(old_digits, new_digits) + 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tp[0] = 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i < (int)p.size(); i++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tp[i] = p[i - 1] * 10;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<int> res;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tlong long cur = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint cur_digits = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < (int)a.size(); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tcur += a[i] * p[cur_digits];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tcur_digits += old_digits;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\twhile (cur_digits >= new_digits) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tres.push_back(int(cur % p[new_digits]));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tcur /= p[new_digits];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tcur_digits -= new_digits;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres.push_back((int)cur);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (!res.empty() && !res.back())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tres.pop_back();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\ttypedef vector<long long> vll;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic vll karatsubaMultiply(const vll &a, const vll &b) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint n = a.size();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvll res(n + n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (n <= 32) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int i = 0; i < n; i++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tfor (int j = 0; j < n; j++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tres[i + j] += a[i] * b[j];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint k = n >> 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvll a1(a.begin(), a.begin() + k);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvll a2(a.begin() + k, a.end());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvll b1(b.begin(), b.begin() + k);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvll b2(b.begin() + k, b.end());\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvll a1b1 = karatsubaMultiply(a1, b1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvll a2b2 = karatsubaMultiply(a2, b2);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < k; i++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ta2[i] += a1[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < k; i++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tb2[i] += b1[i];\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvll r = karatsubaMultiply(a2, b2);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < (int)a1b1.size(); i++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tr[i] -= a1b1[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < (int)a2b2.size(); i++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tr[i] -= a2b2[i];\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < (int)r.size(); i++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tres[i + k] += r[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < (int)a1b1.size(); i++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tres[i] += a1b1[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < (int)a2b2.size(); i++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tres[i + n] += a2b2[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbigint operator*(const bigint &v) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<int> a6 = convert_base(this->a, base_digits, 6);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<int> b6 = convert_base(v.a, base_digits, 6);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvll a(a6.begin(), a6.end());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvll b(b6.begin(), b6.end());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (a.size() < b.size())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ta.push_back(0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (b.size() < a.size())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tb.push_back(0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (a.size() & (a.size() - 1))\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ta.push_back(0), b.push_back(0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvll c = karatsubaMultiply(a, b);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbigint res;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres.sign = sign * v.sign;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0, carry = 0; i < (int)c.size(); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tlong long cur = c[i] + carry;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tres.a.push_back((int)(cur % 1000000));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tcarry = (int)(cur / 1000000);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres.a = convert_base(res.a, 6, base_digits);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres.trim();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"ScalingDinic\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"Dinic_t\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"template <const int N, class T>\\\",\\n\\t\\t\\t\\\"class ScalingDinic_t {\\\",\\n\\t\\t\\t\\\"       public:\\\",\\n\\t\\t\\t\\\"\\\\tconst bool SCALING = N > 32;\\\",\\n\\t\\t\\t\\\"\\\\tT lim = 1;\\\",\\n\\t\\t\\t\\\"\\\\tconst T INF = numeric_limits<T>::max();\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tclass edge_t {\\\",\\n\\t\\t\\t\\\"\\\\t       public:\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint to;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tT capa, flow;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tedge_t(int to = 0, T capa = 0, T flow = 0) : to(to), capa(capa), flow(flow) {}\\\",\\n\\t\\t\\t\\\"\\\\t};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tint dist[N], cur[N];\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> adj[N];\\\",\\n\\t\\t\\t\\\"\\\\tvector<edge_t> edge;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid addEdge(const int &u, const int &v, T capa, bool is_directed = true) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tadj[u].emplace_back(edge.size());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tedge.emplace_back(v, capa);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tadj[v].emplace_back(edge.size());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tedge.emplace_back(u, is_directed ? 0 : capa);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tbool bfs(const int &s, const int &t) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tmemset(dist, -1, sizeof dist);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tqueue<int> q;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tq.emplace(s);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tdist[s] = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (q.size()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint u = q.front();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tq.pop();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (const int &id : adj[u]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tconst int v = edge[id].to;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (dist[v] != -1) continue;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (edge[id].capa - edge[id].flow >= lim) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tdist[v] = dist[u] + 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tq.emplace(v);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn dist[t] != -1;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tT dfs(const int &u, const int &t, const T &flow) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (u == t || !flow) return flow;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int &i = cur[u]; i < adj[u].size(); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tconst int id = adj[u][i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tconst int v = edge[id].to;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (dist[v] != dist[u] + 1) continue;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (T delta = dfs(v, t, min(flow, edge[id].capa - edge[id].flow))) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tedge[id].flow += delta;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tedge[id ^ 1].flow -= delta;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\treturn delta;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn 0;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tint64_t maxFlow(const int &s, const int &t) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint64_t ans = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (lim = SCALING ? (1 << 30) : 1; lim; lim >>= 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\twhile (bfs(s, t)) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tmemset(cur, 0, sizeof cur);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\twhile (T flow = dfs(s, t, INF)) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tans += flow;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn ans;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"Mint\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"Mint\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"T inverse(T a, T m) {\\\",\\n\\t\\t\\t\\\"\\\\tT u = 0, v = 1;\\\",\\n\\t\\t\\t\\\"\\\\twhile (a != 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tT t = m / a;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tm -= t * a;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tswap(a, m);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tu -= t * v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tswap(u, v);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tassert(m == 1);\\\",\\n\\t\\t\\t\\\"\\\\treturn u;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"class Modular {\\\",\\n\\t\\t\\t\\\"       public:\\\",\\n\\t\\t\\t\\\"\\\\tusing Type = typename decay<decltype(T::value)>::type;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tconstexpr Modular() : value() {}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename U>\\\",\\n\\t\\t\\t\\\"\\\\tModular(const U& x) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvalue = normalize(x);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename U>\\\",\\n\\t\\t\\t\\\"\\\\tstatic Type normalize(const U& x) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tType v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (-mod() <= x && x < mod())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tv = static_cast<Type>(x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\telse\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tv = static_cast<Type>(x % mod());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (v < 0) v += mod();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn v;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tconst Type& operator()() const { return value; }\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename U>\\\",\\n\\t\\t\\t\\\"\\\\texplicit operator U() const { return static_cast<U>(value); }\\\",\\n\\t\\t\\t\\\"\\\\tconstexpr static Type mod() { return T::value; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tModular& operator+=(const Modular& other) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif ((value += other.value) >= mod()) value -= mod();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tModular& operator-=(const Modular& other) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif ((value -= other.value) < 0) value += mod();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename U>\\\",\\n\\t\\t\\t\\\"\\\\tModular& operator+=(const U& other) { return *this += Modular(other); }\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename U>\\\",\\n\\t\\t\\t\\\"\\\\tModular& operator-=(const U& other) { return *this -= Modular(other); }\\\",\\n\\t\\t\\t\\\"\\\\tModular& operator++() { return *this += 1; }\\\",\\n\\t\\t\\t\\\"\\\\tModular& operator--() { return *this -= 1; }\\\",\\n\\t\\t\\t\\\"\\\\tModular operator++(int) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tModular result(*this);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t*this += 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn result;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tModular operator--(int) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tModular result(*this);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t*this -= 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn result;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tModular operator-() const { return Modular(-value); }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename U = T>\\\",\\n\\t\\t\\t\\\"\\\\ttypename enable_if<is_same<typename Modular<U>::Type, int>::value, Modular>::type& operator*=(const Modular& rhs) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvalue = normalize(static_cast<int64_t>(value) * static_cast<int64_t>(rhs.value));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename U = T>\\\",\\n\\t\\t\\t\\\"\\\\ttypename enable_if<is_same<typename Modular<U>::Type, long long>::value, Modular>::type& operator*=(const Modular& rhs) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tlong long q = static_cast<long long>(static_cast<long double>(value) * rhs.value / mod());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvalue = normalize(value * rhs.value - q * mod());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename U = T>\\\",\\n\\t\\t\\t\\\"\\\\ttypename enable_if<!is_integral<typename Modular<U>::Type>::value, Modular>::type& operator*=(const Modular& rhs) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvalue = normalize(value * rhs.value);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn *this;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tModular& operator/=(const Modular& other) { return *this *= Modular(inverse(other.value, mod())); }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tfriend const Type& abs(const Modular& x) { return x.value; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename U>\\\",\\n\\t\\t\\t\\\"\\\\tfriend bool operator==(const Modular<U>& lhs, const Modular<U>& rhs);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename U>\\\",\\n\\t\\t\\t\\\"\\\\tfriend bool operator<(const Modular<U>& lhs, const Modular<U>& rhs);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename V, typename U>\\\",\\n\\t\\t\\t\\\"\\\\tfriend V& operator>>(V& stream, Modular<U>& number);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"       private:\\\",\\n\\t\\t\\t\\\"\\\\tType value;\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"bool operator==(const Modular<T>& lhs, const Modular<T>& rhs) { return lhs.value == rhs.value; }\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"bool operator==(const Modular<T>& lhs, U rhs) { return lhs == Modular<T>(rhs); }\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"bool operator==(U lhs, const Modular<T>& rhs) { return Modular<T>(lhs) == rhs; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"bool operator!=(const Modular<T>& lhs, const Modular<T>& rhs) { return !(lhs == rhs); }\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"bool operator!=(const Modular<T>& lhs, U rhs) { return !(lhs == rhs); }\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"bool operator!=(U lhs, const Modular<T>& rhs) { return !(lhs == rhs); }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"bool operator<(const Modular<T>& lhs, const Modular<T>& rhs) { return lhs.value < rhs.value; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"Modular<T> operator+(const Modular<T>& lhs, const Modular<T>& rhs) { return Modular<T>(lhs) += rhs; }\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"Modular<T> operator+(const Modular<T>& lhs, U rhs) { return Modular<T>(lhs) += rhs; }\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"Modular<T> operator+(U lhs, const Modular<T>& rhs) { return Modular<T>(lhs) += rhs; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"Modular<T> operator-(const Modular<T>& lhs, const Modular<T>& rhs) { return Modular<T>(lhs) -= rhs; }\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"Modular<T> operator-(const Modular<T>& lhs, U rhs) { return Modular<T>(lhs) -= rhs; }\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"Modular<T> operator-(U lhs, const Modular<T>& rhs) { return Modular<T>(lhs) -= rhs; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"Modular<T> operator*(const Modular<T>& lhs, const Modular<T>& rhs) { return Modular<T>(lhs) *= rhs; }\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"Modular<T> operator*(const Modular<T>& lhs, U rhs) { return Modular<T>(lhs) *= rhs; }\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"Modular<T> operator*(U lhs, const Modular<T>& rhs) { return Modular<T>(lhs) *= rhs; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"Modular<T> operator/(const Modular<T>& lhs, const Modular<T>& rhs) { return Modular<T>(lhs) /= rhs; }\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"Modular<T> operator/(const Modular<T>& lhs, U rhs) { return Modular<T>(lhs) /= rhs; }\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"Modular<T> operator/(U lhs, const Modular<T>& rhs) { return Modular<T>(lhs) /= rhs; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T, typename U>\\\",\\n\\t\\t\\t\\\"Modular<T> power(const Modular<T>& a, const U& b) {\\\",\\n\\t\\t\\t\\\"\\\\tassert(b >= 0);\\\",\\n\\t\\t\\t\\\"\\\\tModular<T> x = a, res = 1;\\\",\\n\\t\\t\\t\\\"\\\\tU p = b;\\\",\\n\\t\\t\\t\\\"\\\\twhile (p > 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (p & 1) res *= x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tx *= x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tp >>= 1;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treturn res;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"bool IsZero(const Modular<T>& number) {\\\",\\n\\t\\t\\t\\\"\\\\treturn number() == 0;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"string to_string(const Modular<T>& number) {\\\",\\n\\t\\t\\t\\\"\\\\treturn to_string(number());\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// U == std::ostream? but done this way because of fastoutput\\\",\\n\\t\\t\\t\\\"template <typename U, typename T>\\\",\\n\\t\\t\\t\\\"U& operator<<(U& stream, const Modular<T>& number) {\\\",\\n\\t\\t\\t\\\"\\\\treturn stream << number();\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// U == std::istream? but done this way because of fastinput\\\",\\n\\t\\t\\t\\\"template <typename U, typename T>\\\",\\n\\t\\t\\t\\\"U& operator>>(U& stream, Modular<T>& number) {\\\",\\n\\t\\t\\t\\\"\\\\ttypename common_type<typename Modular<T>::Type, long long>::type x;\\\",\\n\\t\\t\\t\\\"\\\\tstream >> x;\\\",\\n\\t\\t\\t\\\"\\\\tnumber.value = Modular<T>::normalize(x);\\\",\\n\\t\\t\\t\\\"\\\\treturn stream;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"/*\\\",\\n\\t\\t\\t\\\"using ModType = int;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"struct VarMod { static ModType value; };\\\",\\n\\t\\t\\t\\\"ModType VarMod::value;\\\",\\n\\t\\t\\t\\\"ModType& md = VarMod::value;\\\",\\n\\t\\t\\t\\\"using Mint = Modular<VarMod>;\\\",\\n\\t\\t\\t\\\"*/\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"constexpr int md = $0;\\\",\\n\\t\\t\\t\\\"using Mint = Modular<std::integral_constant<decay<decltype(md)>::type, md>>;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"vector<Mint> fact(1, 1);\\\",\\n\\t\\t\\t\\\"vector<Mint> inv_fact(1, 1);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"Mint C(int n, int k) {\\\",\\n\\t\\t\\t\\\"\\\\tif (k < 0 || k > n) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn 0;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\twhile ((int)fact.size() < n + 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfact.push_back(fact.back() * (int)fact.size());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tinv_fact.push_back(1 / fact.back());\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treturn fact[n] * inv_fact[k] * inv_fact[n - k];\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"ModInt\\\"\\n\\t},\\n\\t\\\"lichaotree\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"lichaotree\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"vector<int> query_points;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"class lichaotree_t {\\\",\\n\\t\\t\\t\\\"   public:\\\",\\n\\t\\t\\t\\\"\\\\tclass line_t {\\\",\\n\\t\\t\\t\\\"\\\\t   public:\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint64_t a, b;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tline_t(int64_t a = 0, int64_t b = 0) : a(a), b(b) {}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint64_t operator()(const int64_t &x) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn a * x + b;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t};\\\",\\n\\t\\t\\t\\\"\\\\tlichaotree_t *left, *right;\\\",\\n\\t\\t\\t\\\"\\\\tline_t line;\\\",\\n\\t\\t\\t\\\"\\\\tint l, r, m;\\\",\\n\\t\\t\\t\\\"\\\\tlichaotree_t(int l = 0, int r = (int)query_points.size() - 1) : line(0, 9e18) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(query_points.size() > 0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint m = l + r >> 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tthis->l = query_points[l];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tthis->r = query_points[r];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tthis->m = query_points[m];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l == r) return;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tleft = new lichaotree_t(l, m);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tright = new lichaotree_t(m + 1, r);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid insert(int64_t a, int64_t b) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tline_t newline(a, b);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbool better_l = line(l) >= newline(l);  // change here\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbool better_r = line(r) >= newline(r);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (better_l && better_r) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tline = newline;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t} else if (better_l || better_r) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tleft->insert(a, b);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tright->insert(a, b);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tint64_t get_min(int64_t x) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l == r) return line(x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (x <= m) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn min(line(x), left->get_min(x));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t} else {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn min(line(x), right->get_min(x));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"checker\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"checker\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"#include <bits/stdc++.h>\\\",\\n\\t\\t\\t\\\"using namespace std;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"namespace std {\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <int D, typename T>\\\",\\n\\t\\t\\t\\\"struct Vec : public vector<Vec<D - 1, T>> {\\\",\\n\\t\\t\\t\\\"\\\\tstatic_assert(D >= 1, \\\\\\\"Dimension must be positive\\\\\\\");\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <typename... Args>\\\",\\n\\t\\t\\t\\\"\\\\tVec(int n = 0, Args... args) : vector<Vec<D - 1, T>>(n, Vec<D - 1, T>(args...)) {}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"struct Vec<1, T> : public vector<T> {\\\",\\n\\t\\t\\t\\\"\\\\tVec(int n = 0, T val = T()) : std::vector<T>(n, val) {}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"/* Example\\\",\\n\\t\\t\\t\\\"\\\\tVec<4, int64_t> f(n, k, 2, 2); // = f[n][k][2][2];\\\",\\n\\t\\t\\t\\\"\\\\tVec<2, int> adj(n); // graph\\\",\\n\\t\\t\\t\\\"*/\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class Fun>\\\",\\n\\t\\t\\t\\\"class y_combinator_result {\\\",\\n\\t\\t\\t\\\"\\\\tFun fun_;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"   public:\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class T>\\\",\\n\\t\\t\\t\\\"\\\\texplicit y_combinator_result(T &&fun) : fun_(std::forward<T>(fun)) {}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\ttemplate <class... Args>\\\",\\n\\t\\t\\t\\\"\\\\tdecltype(auto) operator()(Args &&...args) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn fun_(std::ref(*this), std::forward<Args>(args)...);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <class Fun>\\\",\\n\\t\\t\\t\\\"decltype(auto) y_combinator(Fun &&fun) {\\\",\\n\\t\\t\\t\\\"\\\\treturn y_combinator_result<std::decay_t<Fun>>(std::forward<Fun>(fun));\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"/* Example\\\",\\n\\t\\t\\t\\\"\\\\tauto fun = y_combinator([&](auto self, int x) -> void {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tself(x + 1);\\\",\\n\\t\\t\\t\\\"\\\\t});\\\",\\n\\t\\t\\t\\\"*/\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"}  // namespace std\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"using namespace chrono;\\\",\\n\\t\\t\\t\\\"#define all(fl) fl.begin(), fl.end()\\\",\\n\\t\\t\\t\\\"#define pb push_back\\\",\\n\\t\\t\\t\\\"#define fi first\\\",\\n\\t\\t\\t\\\"#define se second\\\",\\n\\t\\t\\t\\\"#define for1(i, j, k) for (int i = j; i <= k; i++)\\\",\\n\\t\\t\\t\\\"#define for2(i, j, k) for (int i = j; i >= k; i--)\\\",\\n\\t\\t\\t\\\"#define for3(i, j, k, l) for (int i = j; i <= k; i += l)\\\",\\n\\t\\t\\t\\\"#define lb lower_bound\\\",\\n\\t\\t\\t\\\"#define ub upper_bound\\\",\\n\\t\\t\\t\\\"#define sz(a) (int)a.size()\\\",\\n\\t\\t\\t\\\"#define pii pair<int, int>\\\",\\n\\t\\t\\t\\\"#define pli pair<long long, int>\\\",\\n\\t\\t\\t\\\"#define gcd __gcd\\\",\\n\\t\\t\\t\\\"#define lcm(x, y) x *y / __gcd(x, y)\\\",\\n\\t\\t\\t\\\"#define int long long\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"const string NAME = \\\\\\\"C\\\\\\\";\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"/*\\\",\\n\\t\\t\\t\\\"freopen(\\\\\\\"a.inp\\\\\\\", \\\\\\\"r\\\\\\\", stdin);\\\",\\n\\t\\t\\t\\\"freopen(\\\\\\\"a.out\\\\\\\", \\\\\\\"w\\\\\\\", stdout);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"freopen(\\\\\\\"a.inp\\\\\\\", \\\\\\\"r\\\\\\\", stdin);\\\",\\n\\t\\t\\t\\\"freopen(\\\\\\\"a.ans\\\\\\\", \\\\\\\"w\\\\\\\", stdout);\\\",\\n\\t\\t\\t\\\"*/\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"mt19937 rd(chrono::steady_clock::now().time_since_epoch().count());\\\",\\n\\t\\t\\t\\\"long long random(long long l, long long h) {\\\",\\n\\t\\t\\t\\\"\\\\tassert(l <= h);\\\",\\n\\t\\t\\t\\\"\\\\treturn uniform_int_distribution<long long>(l, h)(rd);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"int32_t main() {\\\",\\n\\t\\t\\t\\\"\\\\tfor (int iTest = 0;; iTest++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tofstream inp((NAME + \\\\\\\".inp\\\\\\\").c_str());\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tinp.close();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// return 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tsystem(\\\\\\\"lmqzzz.exe < C.inp > C.out 2> debug.txt\\\\\\\");\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tsystem(\\\\\\\"brute.exe < C.inp > C.ans\\\\\\\");\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (system((\\\\\\\"fc \\\\\\\" + NAME + \\\\\\\".out \\\\\\\" + NAME + \\\\\\\".ans\\\\\\\").c_str()) != 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tcout << \\\\\\\"Test \\\\\\\" << iTest << \\\\\\\": WRONG!\\\\\\\\n\\\\\\\";\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tcout << \\\\\\\"Test \\\\\\\" << iTest << \\\\\\\": CORRECT!\\\\\\\\n\\\\\\\";\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"dynamic_bitset\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"bitset_dynamic\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <size_t bit = 0>\\\",\\n\\t\\t\\t\\\"void try_solve(int n) {\\\",\\n\\t\\t\\t\\\"\\\\tif constexpr (bit < 30) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (n < (1u << bit)) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tsolve<(1u << bit)>(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t} else {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ttry_solve<bit + 1>(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"rmq\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"rmq\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// RMQ {{{\\\",\\n\\t\\t\\t\\\"//\\\",\\n\\t\\t\\t\\\"// Sparse table\\\",\\n\\t\\t\\t\\\"// Usage:\\\",\\n\\t\\t\\t\\\"// RMQ<int, _min> st(v);\\\",\\n\\t\\t\\t\\\"//\\\",\\n\\t\\t\\t\\\"// Note:\\\",\\n\\t\\t\\t\\\"// - doesn't work for empty range\\\",\\n\\t\\t\\t\\\"//\\\",\\n\\t\\t\\t\\\"// Tested:\\\",\\n\\t\\t\\t\\\"// - https://judge.yosupo.jp/problem/staticrmq\\\",\\n\\t\\t\\t\\\"template <class T, T (*op)(T, T)>\\\",\\n\\t\\t\\t\\\"struct RMQ {\\\",\\n\\t\\t\\t\\\"\\\\tRMQ() = default;\\\",\\n\\t\\t\\t\\\"\\\\tRMQ(const vector<T> &v) : t{v}, n{(int)v.size()} {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int k = 1; (1 << k) <= n; ++k) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tt.emplace_back(n - (1 << k) + 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int i = 0; i + (1 << k) <= n; ++i) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tt[k][i] = op(t[k - 1][i], t[k - 1][i + (1 << (k - 1))]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// get range [l, r-1]\\\",\\n\\t\\t\\t\\\"\\\\t// doesn't work for empty range\\\",\\n\\t\\t\\t\\\"\\\\tT get(int l, int r) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= l && l < r && r <= n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint k = __lg(r - l);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn op(t[k][l], t[k][r - (1 << k)]);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"   private:\\\",\\n\\t\\t\\t\\\"\\\\tvector<vector<T>> t;\\\",\\n\\t\\t\\t\\\"\\\\tint n;\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"template <class T>\\\",\\n\\t\\t\\t\\\"T _min(T a, T b) { return b < a ? b : a; }\\\",\\n\\t\\t\\t\\\"template <class T>\\\",\\n\\t\\t\\t\\\"T _max(T a, T b) { return a < b ? b : a; }\\\",\\n\\t\\t\\t\\\"// }}}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"persistent_segtree\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"segtree_persistent\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"// Notes:\\\",\\n\\t\\t\\t\\\"// - class PersistentSegTree doesn't store any data.\\\",\\n\\t\\t\\t\\\"//   -> Need to store seg tree roots separately.\\\",\\n\\t\\t\\t\\\"// - assume all versions have same size (it isn't really necessary, but makes interface nicer)\\\",\\n\\t\\t\\t\\\"//\\\",\\n\\t\\t\\t\\\"// Tested:\\\",\\n\\t\\t\\t\\\"// - https://cses.fi/problemset/task/1737\\\",\\n\\t\\t\\t\\\"// - https://oj.vnoi.info/problem/vquery\\\",\\n\\t\\t\\t\\\"// Persistent SegTree {{{\\\",\\n\\t\\t\\t\\\"template <\\\",\\n\\t\\t\\t\\\"\\\\tclass S,\\\\t\\\\t// node aggregate data\\\",\\n\\t\\t\\t\\\"\\\\tS (*op)(S, S),  // combine 2 nodes\\\",\\n\\t\\t\\t\\\"\\\\tS (*e)()\\\\t\\\\t// aggregate data of empty node\\\",\\n\\t\\t\\t\\\"\\\\t>\\\",\\n\\t\\t\\t\\\"struct PersistentSegTree {\\\",\\n\\t\\t\\t\\\"\\\\tstruct Node {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNode* left;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNode* right;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tS sum;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tstatic Node* nil() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tstatic Node* nil_node = NULL;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (nil_node) return nil_node;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tnil_node = new Node();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tnil_node->left = nil_node->right = nil_node;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn nil_node;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNode() = default;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNode(const S& val) : left(nil()), right(nil()), sum(val) {}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNode(const Node& src) : left(src.left), right(src.right), sum(src.sum) {}\\\",\\n\\t\\t\\t\\\"\\\\t};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tPersistentSegTree(int _n) : n(_n) {}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tNode* create(const vector<S>& a) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(SZ(a) == n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn _create(a, 0, SZ(a));\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// product a[u, v)\\\",\\n\\t\\t\\t\\\"\\\\tS prod(Node* p, int u, int v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= u && u <= v && v <= n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn _prod(p, 0, n, u, v);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// set a[u] = val. Returns new version\\\",\\n\\t\\t\\t\\\"\\\\tNode* set(Node* p, int u, S val) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(0 <= u && u < n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn _set(p, 0, n, u, val);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// private:\\\",\\n\\t\\t\\t\\\"\\\\tint n;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// create segtre from a[l, r)\\\",\\n\\t\\t\\t\\\"\\\\tNode* _create(const vector<S>& a, int l, int r) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l >= r) return Node::nil();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l == r - 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn new Node(a[l]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint mid = (l + r) / 2;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNode* res = new Node();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres->left = _create(a, l, mid);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres->right = _create(a, mid, r);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres->sum = op(res->left->sum, res->right->sum);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// p maintains [l, r)\\\",\\n\\t\\t\\t\\\"\\\\t// query [u, v)\\\",\\n\\t\\t\\t\\\"\\\\tS _prod(Node* p, int l, int r, int u, int v) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (v <= l || r <= u) return e();  // do not intersect\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (u <= l && r <= v) return p->sum;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint mid = (l + r) / 2;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn op(\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t_prod(p->left, l, mid, u, v),\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t_prod(p->right, mid, r, u, v));\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// p maintains [l, r)\\\",\\n\\t\\t\\t\\\"\\\\tNode* _set(Node* p, int l, int r, int u, S val) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (u < l || r <= u) return p;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (l == r - 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn new Node(val);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint mid = (l + r) / 2;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNode* res = new Node();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres->left = _set(p->left, l, mid, u, val);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres->right = _set(p->right, mid, r, u, val);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tres->sum = op(res->left->sum, res->right->sum);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn res;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"// }}}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"/* Example\\\",\\n\\t\\t\\t\\\"int op(int l, int r) { return l + r; }\\\",\\n\\t\\t\\t\\\"int e() { return 0; }\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"int32_t main() {\\\",\\n\\t\\t\\t\\\"\\\\tios::sync_with_stdio(0); cin.tie(0);\\\",\\n\\t\\t\\t\\\"\\\\tint n, q; cin >> n >> q;\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> a(n); for (int& x : a) cin >> x;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tusing P = PersistentSegTree<int, op, e>;\\\",\\n\\t\\t\\t\\\"\\\\tusing Node = P::Node;\\\",\\n\\t\\t\\t\\\"\\\\tvector<Node*> roots;\\\",\\n\\t\\t\\t\\\"\\\\tP p(n);\\\",\\n\\t\\t\\t\\\"\\\\troots.push_back(p.create(a));\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\twhile (q--) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint typ; cin >> typ;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (typ == 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint k, pos, x; cin >> k >> pos >> x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t--k; --pos;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\troots[k] = p.set(roots[k], pos, x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t} else if (typ == 2) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint k, l, r; cin >> k >> l >> r;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t--k; --l;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tcout << p.prod(roots[k], l, r) << '\\\\\\\\n';\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t} else if (typ == 3) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint k; cin >> k;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t--k;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\troots.push_back(new Node(*roots[k]));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t} else assert(false);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treturn 0;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"*/\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"heavylight\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"hld\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"int n = 100;\\\",\\n\\t\\t\\t\\\"\\\\tvector<vector<pair<int, int>>> adj(n);\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> f(n);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> par(n);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tauto dfs_init = y_combinator([&](auto dfs, int u, int p) -> void {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tpar[u] = p;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (auto &&e : adj[u]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (e.first == p) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tswap(e, adj[u].back());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tadj[u].pop_back();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tbreak;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tf[u] = 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (auto &&[v, i] : adj[u]) {  // pair\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tdfs(v, u);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tf[u] += f[v];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 1; i < adj[u].size(); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (f[adj[u][i].first] > f[adj[u][0].first]) swap(adj[u][i], adj[u][0]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t});\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 0; i < n; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (f[i] == 0) dfs_init(i, -1);  // must be -1\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> tin(n), tout(n), nxt(n), depth(n);\\\",\\n\\t\\t\\t\\\"\\\\tint timer = 0;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tauto hld = y_combinator([&](auto hld, int u) -> void {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ttin[u] = timer++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (auto &&[v, i] : adj[u]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tnxt[v] = adj[u][0].first == v ? nxt[u] : v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tdepth[v] = depth[u] + 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\thld(v);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ttout[u] = timer;\\\",\\n\\t\\t\\t\\\"\\\\t});\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 0; i < n; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (par[i] == -1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tnxt[i] = i;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\thld(i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t/* get or update smth\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (nxt[a] != nxt[b]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (depth[nxt[a]] < depth[nxt[b]]) swap(a, b);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tans = max(ans, tree.get(tin[nxt[a]], tin[a]));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ta = par[nxt[a]];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (a == -1) return -1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t*/\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// [tin[u], tout[u]) for subtree\\\",\\n\\t\\t\\t\\\"\\\\t// [tin[nxt[u]], tin[u]] for path from the root of the chain to u\\\",\\n\\t\\t\\t\\\"\\\\t// move to the next chain u = par[nxt[u]]\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"ordered_set\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"ordered_set\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"#include <ext/pb_ds/assoc_container.hpp>  // Common file\\\",\\n\\t\\t\\t\\\"#include <ext/pb_ds/tree_policy.hpp>\\\\t  // Including tree_order_statistics_node_update\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"using namespace __gnu_pbds;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// for multiset, change less -> less_equal\\\",\\n\\t\\t\\t\\\"typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"int main() {\\\",\\n\\t\\t\\t\\\"\\\\tordered_set X;\\\",\\n\\t\\t\\t\\\"\\\\t// X = {1, 2, 4, 8, 16}\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 1; i <= 16; i *= 2)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tX.insert(i);\\\",\\n\\t\\t\\t\\\"\\\\tcout << *X.find_by_order(0) << endl;\\\\t\\\\t\\\\t  // 1\\\",\\n\\t\\t\\t\\\"\\\\tcout << *X.find_by_order(1) << endl;\\\\t\\\\t\\\\t  // 2\\\",\\n\\t\\t\\t\\\"\\\\tcout << *X.find_by_order(2) << endl;\\\\t\\\\t\\\\t  // 4\\\",\\n\\t\\t\\t\\\"\\\\tcout << *X.find_by_order(4) << endl;\\\\t\\\\t\\\\t  // 16\\\",\\n\\t\\t\\t\\\"\\\\tcout << (X.end() == X.find_by_order(6)) << endl;  // true\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tcout << X.order_of_key(-5) << endl;   // 0\\\",\\n\\t\\t\\t\\\"\\\\tcout << X.order_of_key(1) << endl;\\\\t// 0\\\",\\n\\t\\t\\t\\\"\\\\tcout << X.order_of_key(3) << endl;\\\\t// 2\\\",\\n\\t\\t\\t\\\"\\\\tcout << X.order_of_key(4) << endl;\\\\t// 2\\\",\\n\\t\\t\\t\\\"\\\\tcout << X.order_of_key(400) << endl;  // 5\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"AhoCorasick\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"AhoCorasick\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"}  // namespace std\\\",\\n\\t\\t\\t\\\"// Tested:\\\",\\n\\t\\t\\t\\\"// - https://open.kattis.com/problems/stringmultimatching\\\",\\n\\t\\t\\t\\\"// - https://icpc.kattis.com/problems/firstofhername\\\",\\n\\t\\t\\t\\\"// - https://oj.vnoi.info/problem/binpal\\\",\\n\\t\\t\\t\\\"//\\\",\\n\\t\\t\\t\\\"// Notes:\\\",\\n\\t\\t\\t\\\"// - Node IDs from 0 to aho.sz.\\\",\\n\\t\\t\\t\\\"// - Characters should be normalized to [0, MC-1].\\\",\\n\\t\\t\\t\\\"// - For each node of AhoCorasick, we store a linked list containing all queries \\\\\\\"associated\\\\\\\" with this node.\\\",\\n\\t\\t\\t\\\"//   The reason is that, when we reach a node in AhoCorasick, it's possible to match several queries at once.\\\",\\n\\t\\t\\t\\\"//   (this happens when queries are suffix of others, e.g. C, BC, ABC).\\\",\\n\\t\\t\\t\\\"//   This also means 1 node maps to several queries, and 1 query maps to several nodes.\\\",\\n\\t\\t\\t\\\"//   However I believe that the sum of length of all linked list is O(N) -- TODO: Source / proof required.\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"const int MN = 1000111;  // MN > total length of all patterns\\\",\\n\\t\\t\\t\\\"const int MC = 26;\\\\t   // Alphabet size.\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// Start of Linked list\\\",\\n\\t\\t\\t\\\"struct Node {\\\",\\n\\t\\t\\t\\\"\\\\tint x;\\\",\\n\\t\\t\\t\\\"\\\\tNode *next;\\\",\\n\\t\\t\\t\\\"} *nil;\\\",\\n\\t\\t\\t\\\"struct List {\\\",\\n\\t\\t\\t\\\"\\\\tNode *first, *last;\\\",\\n\\t\\t\\t\\\"\\\\tList() { first = last = nil; }\\\",\\n\\t\\t\\t\\\"\\\\tvoid add(int x) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNode *p = new Node;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tp->x = x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tp->next = nil;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (first == nil)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tlast = first = p;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\telse\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tlast->next = p, last = p;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"// End of linked list\\\",\\n\\t\\t\\t\\\"//\\\",\\n\\t\\t\\t\\\"struct Aho {\\\",\\n\\t\\t\\t\\\"\\\\tint qu[MN], suffixLink[MN];\\\",\\n\\t\\t\\t\\\"\\\\tList leaf[MN];\\\",\\n\\t\\t\\t\\\"\\\\tint link[MN][MC];\\\",\\n\\t\\t\\t\\\"\\\\tint sz;\\\",\\n\\t\\t\\t\\\"\\\\tbool calledBuildLink;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid init() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tcalledBuildLink = false;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tsz = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tmemset(suffixLink, 0, sizeof suffixLink);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tleaf[0] = List();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tmemset(link[0], -1, sizeof link[0]);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tint getChild(int type, int v, int c) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (type == 2) assert(calledBuildLink);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (link[v][c] >= 0) return link[v][c];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (type == 1) return 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (!v) return link[v][c] = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn link[v][c] = getChild(type, suffixLink[v], c);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tvoid buildLink() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tcalledBuildLink = true;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint first, last;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tqu[first = last = 1] = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (first <= last) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint u = qu[first++];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tREP(c, MC) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tint v = link[u][c];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (v < 0) continue;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tqu[++last] = v;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (u == 0)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tsuffixLink[v] = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\telse\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tsuffixLink[v] = getChild(2, suffixLink[u], c);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (leaf[suffixLink[v]].first != nil) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tif (leaf[v].first == nil) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tleaf[v].first = leaf[suffixLink[v]].first;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tleaf[v].last = leaf[suffixLink[v]].last;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t} else {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tleaf[v].last->next = leaf[suffixLink[v]].first;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tleaf[v].last = leaf[suffixLink[v]].last;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"} aho;\\\",\\n\\t\\t\\t\\\"int32_t main() {\\\",\\n\\t\\t\\t\\\"\\\\tios_base::sync_with_stdio(0);\\\",\\n\\t\\t\\t\\\"\\\\tcin.tie(0);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t// Usage:\\\",\\n\\t\\t\\t\\\"\\\\taho.init();  // Initialize\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t // Foreach query, insert one character at a time:\\\",\\n\\t\\t\\t\\\"\\\\tint p = 0;\\\",\\n\\t\\t\\t\\\"\\\\twhile (k--) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint x;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tscanf(\\\\\\\"%d\\\\\\\", &x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint t = aho.getChild(1, p, x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (t > 0)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tp = t;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\telse {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t++aho.sz;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\taho.leaf[aho.sz] = List();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tmemset(aho.link[aho.sz], -1, sizeof aho.link[aho.sz]);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\taho.link[p][x] = aho.sz;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tp = aho.sz;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\taho.leaf[p].add(i);\\\",\\n\\t\\t\\t\\\"\\\\t// Init back link\\\",\\n\\t\\t\\t\\\"\\\\taho.buildLink();\\\",\\n\\t\\t\\t\\\"\\\\t// After this stage, we should use aho.getChild(2, node, c) to jump\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"BiconnectedComponent\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"BiconnectedComponent\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"// Input graph: vector< vector<int> > a, int n\\\",\\n\\t\\t\\t\\\"// Note: 0-indexed\\\",\\n\\t\\t\\t\\\"// Usage: BiconnectedComponent bc; (bc.components is the list of components)\\\",\\n\\t\\t\\t\\\"//\\\",\\n\\t\\t\\t\\\"// This is biconnected components by edges (1 vertex can belong to\\\",\\n\\t\\t\\t\\\"// multiple components). For vertices biconnected component, remove\\\",\\n\\t\\t\\t\\\"// bridges and find components\\\",\\n\\t\\t\\t\\\"int n;\\\",\\n\\t\\t\\t\\\"vector<vector<int>> g;\\\",\\n\\t\\t\\t\\\"struct BiconnectedComponent {\\\",\\n\\t\\t\\t\\\"\\\\tvector<int> low, num, s;\\\",\\n\\t\\t\\t\\\"\\\\tvector<vector<int>> components;\\\",\\n\\t\\t\\t\\\"\\\\tint counter;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tBiconnectedComponent() : low(n, -1), num(n, -1), counter(0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < n; i++)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (num[i] < 0)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tdfs(i, 1);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tvoid dfs(int x, int isRoot) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tlow[x] = num[x] = ++counter;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (g[x].empty()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tcomponents.push_back(vector<int>(1, x));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ts.push_back(x);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < (int)g[x].size(); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tint y = g[x][i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (num[y] > -1)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tlow[x] = min(low[x], num[y]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\telse {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tdfs(y, 0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tlow[x] = min(low[x], low[y]);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tif (isRoot || low[y] >= num[x]) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tcomponents.push_back(vector<int>(1, x));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\twhile (1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tint u = s.back();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\ts.pop_back();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tcomponents.back().push_back(u);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tif (u == y) break;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"NTT\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"NTT\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"class NTT {\\\",\\n\\t\\t\\t\\\"   public:\\\",\\n\\t\\t\\t\\\"\\\\tusing Type = typename decay<decltype(T::value)>::type;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic Type md;\\\",\\n\\t\\t\\t\\\"\\\\tstatic Modular<T> root;\\\",\\n\\t\\t\\t\\\"\\\\tstatic int base;\\\",\\n\\t\\t\\t\\\"\\\\tstatic int max_base;\\\",\\n\\t\\t\\t\\\"\\\\tstatic vector<Modular<T>> roots;\\\",\\n\\t\\t\\t\\\"\\\\tstatic vector<int> rev;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic void clear() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\troot = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbase = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tmax_base = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\troots.clear();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\trev.clear();\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic void init() {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tmd = T::value;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(md >= 3 && md % 2 == 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tauto tmp = md - 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tmax_base = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (tmp % 2 == 0) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ttmp /= 2;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tmax_base++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\troot = 2;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (power(root, (md - 1) >> 1) == 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\troot++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(power(root, md - 1) == 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\troot = power(root, (md - 1) >> max_base);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbase = 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\trev = {0, 1};\\\",\\n\\t\\t\\t\\\"\\\\t\\\\troots = {0, 1};\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic void ensure_base(int nbase) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (md != T::value) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tclear();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (roots.empty()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tinit();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (nbase <= base) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(nbase <= max_base);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\trev.resize(1 << nbase);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < (1 << nbase); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\trev[i] = (rev[i >> 1] >> 1) + ((i & 1) << (nbase - 1));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\troots.resize(1 << nbase);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile (base < nbase) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tModular<T> z = power(root, 1 << (max_base - 1 - base));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int i = 1 << (base - 1); i < (1 << base); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\troots[i << 1] = roots[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\troots[(i << 1) + 1] = roots[i] * z;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tbase++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic void fft(vector<Modular<T>>& a) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint n = (int)a.size();\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert((n & (n - 1)) == 0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint zeros = __builtin_ctz(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tensure_base(zeros);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint shift = base - zeros;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < n; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (i < (rev[i] >> shift)) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tswap(a[i], a[rev[i] >> shift]);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int k = 1; k < n; k <<= 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int i = 0; i < n; i += 2 * k) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tfor (int j = 0; j < k; j++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tModular<T> x = a[i + j];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\tModular<T> y = a[i + j + k] * roots[j + k];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\ta[i + j] = x + y;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t\\\\ta[i + j + k] = x - y;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\\tstatic vector<Modular<T>> multiply(vector<Modular<T>> a, vector<Modular<T>> b) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (a.empty() || b.empty()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn {};\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint eq = (a == b);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint need = (int)a.size() + (int)b.size() - 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint nbase = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\twhile ((1 << nbase) < need) nbase++;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tensure_base(nbase);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint sz = 1 << nbase;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ta.resize(sz);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tb.resize(sz);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfft(a);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (eq)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tb = a;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\telse\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfft(b);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tModular<T> inv_sz = 1 / static_cast<Modular<T>>(sz);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < sz; i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\ta[i] *= b[i] * inv_sz;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treverse(a.begin() + 1, a.end());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfft(a);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ta.resize(need);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn a;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"typename NTT<T>::Type NTT<T>::md;\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"Modular<T> NTT<T>::root;\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"int NTT<T>::base;\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"int NTT<T>::max_base;\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"vector<Modular<T>> NTT<T>::roots;\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"vector<int> NTT<T>::rev;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"vector<Modular<T>> inverse(const vector<Modular<T>>& a) {\\\",\\n\\t\\t\\t\\\"\\\\tassert(!a.empty());\\\",\\n\\t\\t\\t\\\"\\\\tint n = (int)a.size();\\\",\\n\\t\\t\\t\\\"\\\\tvector<Modular<T>> b = {1 / a[0]};\\\",\\n\\t\\t\\t\\\"\\\\twhile ((int)b.size() < n) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<Modular<T>> x(a.begin(), a.begin() + min(a.size(), b.size() << 1));\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tx.resize(b.size() << 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tb.resize(b.size() << 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<Modular<T>> c = b;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNTT<T>::fft(c);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNTT<T>::fft(x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tModular<T> inv = 1 / static_cast<Modular<T>>((int)x.size());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < (int)x.size(); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tx[i] *= c[i] * inv;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treverse(x.begin() + 1, x.end());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNTT<T>::fft(x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\trotate(x.begin(), x.begin() + (x.size() >> 1), x.end());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfill(x.begin() + (x.size() >> 1), x.end(), 0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNTT<T>::fft(x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < (int)x.size(); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tx[i] *= c[i] * inv;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treverse(x.begin() + 1, x.end());\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tNTT<T>::fft(x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < ((int)x.size() >> 1); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tb[i + ((int)x.size() >> 1)] = -x[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tb.resize(n);\\\",\\n\\t\\t\\t\\\"\\\\treturn b;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"vector<Modular<T>> inverse_old(vector<Modular<T>> a) {\\\",\\n\\t\\t\\t\\\"\\\\tassert(!a.empty());\\\",\\n\\t\\t\\t\\\"\\\\tint n = (int)a.size();\\\",\\n\\t\\t\\t\\\"\\\\tif (n == 1) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn {1 / a[0]};\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tint m = (n + 1) >> 1;\\\",\\n\\t\\t\\t\\\"\\\\tvector<Modular<T>> b = inverse(vector<Modular<T>>(a.begin(), a.begin() + m));\\\",\\n\\t\\t\\t\\\"\\\\tint need = n << 1;\\\",\\n\\t\\t\\t\\\"\\\\tint nbase = 0;\\\",\\n\\t\\t\\t\\\"\\\\twhile ((1 << nbase) < need) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t++nbase;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tNTT<T>::ensure_base(nbase);\\\",\\n\\t\\t\\t\\\"\\\\tint size = 1 << nbase;\\\",\\n\\t\\t\\t\\\"\\\\ta.resize(size);\\\",\\n\\t\\t\\t\\\"\\\\tb.resize(size);\\\",\\n\\t\\t\\t\\\"\\\\tNTT<T>::fft(a);\\\",\\n\\t\\t\\t\\\"\\\\tNTT<T>::fft(b);\\\",\\n\\t\\t\\t\\\"\\\\tModular<T> inv = 1 / static_cast<Modular<T>>(size);\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 0; i < size; ++i) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\ta[i] = (2 - a[i] * b[i]) * b[i] * inv;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treverse(a.begin() + 1, a.end());\\\",\\n\\t\\t\\t\\\"\\\\tNTT<T>::fft(a);\\\",\\n\\t\\t\\t\\\"\\\\ta.resize(n);\\\",\\n\\t\\t\\t\\\"\\\\treturn a;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"vector<Modular<T>> operator*(const vector<Modular<T>>& a, const vector<Modular<T>>& b) {\\\",\\n\\t\\t\\t\\\"\\\\tif (a.empty() || b.empty()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn {};\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tif (min(a.size(), b.size()) < 150) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<Modular<T>> c(a.size() + b.size() - 1, 0);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < (int)a.size(); i++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tfor (int j = 0; j < (int)b.size(); j++) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tc[i + j] += a[i] * b[j];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn c;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treturn NTT<T>::multiply(a, b);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"vector<Modular<T>>& operator*=(vector<Modular<T>>& a, const vector<Modular<T>>& b) {\\\",\\n\\t\\t\\t\\\"\\\\treturn a = a * b;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"vector<Modular<T>> operator^(vector<Modular<T>> a, int64_t b) {\\\",\\n\\t\\t\\t\\\"\\\\tvector<Modular<T>> res(1, 1);\\\",\\n\\t\\t\\t\\\"\\\\tfor (; b; b >>= 1, a *= a) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (b & 1) res *= a;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treturn res;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"vector<Modular<T>>& operator^=(vector<Modular<T>>& a, int64_t b) {\\\",\\n\\t\\t\\t\\\"\\\\treturn a = a ^ b;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"NTT\\\"\\n\\t},\\n\\t\\\"FFT64\\\": {\\n\\t\\t\\\"scope\\\": \\\"cpp\\\",\\n\\t\\t\\\"prefix\\\": \\\"FFT64\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"/* Prec. error max_ans/1e15 (2.5e18) for (long) doubles, so int rounding works\\\",\\n\\t\\t\\t\\\"for doubles with answers 0.5e15, e.g. for sizes 2^20 and RANDOM ints in [0,45k],\\\",\\n\\t\\t\\t\\\"assuming DBL_MANT_DIG=53 and LDBL_MANT_DIG=64. Consider normalizing and brute.*/\\\",\\n\\t\\t\\t\\\"#define REP(i, n) for (int i = 0; i < int(n); ++i)\\\",\\n\\t\\t\\t\\\"typedef double ld;  // 'long double' is 2.2 times slower\\\",\\n\\t\\t\\t\\\"struct C {\\\",\\n\\t\\t\\t\\\"\\\\tld real, imag;\\\",\\n\\t\\t\\t\\\"\\\\tC operator*(const C &he) const {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn C{real * he.real - imag * he.imag,\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t real * he.imag + imag * he.real};\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tvoid operator+=(const C &he) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treal += he.real;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\timag += he.imag;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"};\\\",\\n\\t\\t\\t\\\"void dft(vector<C> &a, bool rev) {\\\",\\n\\t\\t\\t\\\"\\\\tconst int n = a.size();\\\",\\n\\t\\t\\t\\\"\\\\tfor (int i = 1, k = 0; i < n; ++i) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int bit = n / 2; (k ^= bit) < bit; bit /= 2);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (i < k) swap(a[i], a[k]);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tfor (int len = 1, who = 0; len < n; len *= 2, ++who) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tstatic vector<C> t[30];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<C> &om = t[who];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tif (om.empty()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tom.resize(len);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tconst ld ang = 2 * acosl(0) / len;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tREP(i, len)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tom[i] = i % 2 || !who ? C{cos(i * ang), sin(i * ang)} : t[who - 1][i / 2];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int i = 0; i < n; i += 2 * len)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tREP(k, len) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tconst C x = a[i + k], y = a[i + k + len] * C{om[k].real, om[k].imag * (rev ? -1 : 1)};\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\ta[i + k] += y;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\ta[i + k + len] = C{x.real - y.real, x.imag - y.imag};\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tif (rev) REP(i, n)\\\",\\n\\t\\t\\t\\\"\\\\ta[i].real /= n;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"template <typename T>\\\",\\n\\t\\t\\t\\\"vector<T> multiply(const vector<T> &a, const vector<T> &b,\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t   bool split = false, bool normalize = false) {\\\",\\n\\t\\t\\t\\\"\\\\tif (a.empty() || b.empty()) return {};\\\",\\n\\t\\t\\t\\\"\\\\tT big = 0;\\\",\\n\\t\\t\\t\\\"\\\\tif (normalize) {\\\\t\\\\t\\\\t\\\\t   // [0,B] into [-B/2, B/2]\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tassert(a.size() == b.size());  // equal size!!!\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (T x : a) big = max(big, x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (T x : b) big = max(big, x);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tbig /= 2;\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tint n = a.size() + b.size();\\\",\\n\\t\\t\\t\\\"\\\\tvector<T> ans(n - 1);\\\",\\n\\t\\t\\t\\\"\\\\t/* if(min(a.size(),b.size()) < 190) { // BRUTE FORCE\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tREP(i, a.size()) REP(j, b.size()) ans[i+j] += a[i]*b[j];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\treturn ans; } */\\\",\\n\\t\\t\\t\\\"\\\\twhile (n & (n - 1)) ++n;\\\",\\n\\t\\t\\t\\\"\\\\tauto speed = [&](const vector<C> &w, int i, int k) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tint j = i ? n - i : 0, r = k ? -1 : 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn C{w[i].real + w[j].real * r, w[i].imag - w[j].imag * r} * (k ? C{0, -0.5} : C{0.5, 0});\\\",\\n\\t\\t\\t\\\"\\\\t};\\\",\\n\\t\\t\\t\\\"\\\\tif (!split) {  // standard fast version\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<C> in(n), done(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tREP(i, a.size())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tin[i].real = a[i] - big;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tREP(i, b.size())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tin[i].imag = b[i] - big;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tdft(in, false);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tREP(i, n)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tdone[i] = speed(in, i, 0) * speed(in, i, 1);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tdft(done, true);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tREP(i, ans.size())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tans[i] = is_integral<T>::value ? llround(done[i].real) : done[i].real;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t// REP(i,ans.size())err=max(err,abs(done[i].real-ans[i]));\\\",\\n\\t\\t\\t\\\"\\\\t} else {\\\\t\\\\t\\\\t\\\\t  // Split big INTEGERS into pairs a1*M+a2,\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tconst T M = 1 << 15;  // where M = sqrt(max_absvalue).\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tvector<C> t[2];\\\\t   // This version is 2.2-2.5 times slower.\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tREP(x, 2) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tt[x].resize(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tauto &in = x ? b : a;  // below use (in[i]-big) if normalized\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tREP(i, in.size())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tt[x][i] = C{ld(in[i] % M), ld(in[i] / M)};\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tdft(t[x], false);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tT mul = 1;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tfor (int s = 0; s < 3; ++s, mul *= M) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tvector<C> prod(n);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tREP(x, 2)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tREP(y, 2)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (x + y == s) REP(i, n)\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tprod[i] += speed(t[0], i, x) * speed(t[1], i, y);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tdft(prod, true);  // remember: llround(prod[i].real)%MOD*mul !!!\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tREP(i, ans.size())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tans[i] += llround(prod[i].real) * mul;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tif (normalize) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tT so_far = 0;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tREP(i, ans.size()) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tif (i < (int)a.size())\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tso_far += a[i] + b[i];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\telse\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\tso_far -= a[i - a.size()] + b[i - a.size()];\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\tans[i] += big * so_far - big * big * min(i + 1, (int)ans.size() - i);\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\treturn ans;\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"FFT64\\\"\\n\\t},\\n}\"}}","extensions":"[{\"identifier\":{\"id\":\"asuka.insertnumbers\",\"uuid\":\"1bd4f828-df27-4316-952d-2d89c42e6b16\"},\"displayName\":\"Insert Numbers\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"bibhasdn.unique-lines\",\"uuid\":\"a225bb1b-d82f-4036-953e-293523b9eb71\"},\"displayName\":\"Unique Lines\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"bmalehorn.vscode-fish\",\"uuid\":\"efa79b03-91c5-4c6a-9846-0a7b6f7af05e\"},\"displayName\":\"Fish\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"bradlc.vscode-tailwindcss\",\"uuid\":\"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5\"},\"displayName\":\"Tailwind CSS IntelliSense\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"capaj.vscode-exports-autocomplete\",\"uuid\":\"9a466d14-cbfa-431e-8ea8-71fc8cfc8148\"},\"displayName\":\"exports autocomplete\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"chakrounanas.turbo-console-log\",\"uuid\":\"6623619a-676d-4cde-943f-a3c193b44fc0\"},\"displayName\":\"Turbo Console Log\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"codezombiech.gitignore\",\"uuid\":\"3e891cf9-53cb-49a3-8d01-8f0b1f0afb29\"},\"displayName\":\"gitignore\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"dbaeumer.vscode-eslint\",\"uuid\":\"583b2b34-2c1e-4634-8c0b-0b82e283ea3a\"},\"displayName\":\"ESLint\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"docker.docker\",\"uuid\":\"aa98a064-0f79-4961-a4b7-78df16d547ee\"},\"displayName\":\"Docker DX\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"drcika.apc-extension\",\"uuid\":\"c445982f-a615-472b-a90e-0a9edd88b8e8\"},\"displayName\":\"Apc Customize UI++\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"esbenp.prettier-vscode\",\"uuid\":\"96fa4707-6983-4489-b7c5-d5ffdfdcce90\"},\"displayName\":\"Prettier - Code formatter\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"formulahendry.code-runner\",\"uuid\":\"a6a0c5b2-d078-4bf5-a9ee-4e37054414b3\"},\"displayName\":\"Code Runner\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"foxundermoon.shell-format\",\"uuid\":\"5fb19573-2183-4cf2-b53d-0fb869dae7ae\"},\"displayName\":\"shell-format\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"gera2ld.markmap-vscode\",\"uuid\":\"2392d4a0-3976-49ea-af95-7001abb8c75a\"},\"displayName\":\"Markmap\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"geriyoco.vscode-image-gallery\",\"uuid\":\"5ee52abc-56cd-4681-a3fc-bad1133dd8e4\"},\"displayName\":\"Image Gallery\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"github.copilot\",\"uuid\":\"23c4aeee-f844-43cd-b53e-1113e483f1a6\"},\"displayName\":\"GitHub Copilot\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"github.copilot-chat\",\"uuid\":\"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f\"},\"displayName\":\"GitHub Copilot Chat\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"github.remotehub\",\"uuid\":\"fc7d7e85-2e58-4c1c-97a3-2172ed9a77cd\"},\"displayName\":\"GitHub Repositories\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"github.vscode-github-actions\",\"uuid\":\"04f49bfc-8330-4eee-8237-ea938fb755ef\"},\"displayName\":\"GitHub Actions\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"golang.go\",\"uuid\":\"d6f6cfea-4b6f-41f4-b571-6ad2ab7918da\"},\"displayName\":\"Go\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"grapecity.gc-excelviewer\",\"uuid\":\"8bb12ae3-73f8-40cf-86b7-4bd5729c6238\"},\"displayName\":\"Excel Viewer\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"harveywang.monokai-lite\",\"uuid\":\"c42fcf79-93c2-4c42-a6a8-65aabd2c7ff7\"},\"displayName\":\"Monokai Lite\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"helixquar.randomeverything\",\"uuid\":\"c2f1bda1-baa4-4627-975e-d130d7268f70\"},\"displayName\":\"Random Everything\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"henriiik.vscode-sort\",\"uuid\":\"8e355385-0d4d-4908-aca4-c36da7282a6d\"},\"displayName\":\"Sort\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"hoovercj.vscode-settings-cycler\",\"uuid\":\"f38abf4d-543d-496d-9353-0025faa19abd\"},\"displayName\":\"Settings Cycler\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"iliazeus.vscode-ansi\",\"uuid\":\"166e6c60-18b8-41fd-8f55-2067f667acc2\"},\"displayName\":\"ANSI Colors\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"imgildev.vscode-nextjs-generator\",\"uuid\":\"fe0d197e-daee-4bf7-94b4-4415a6fc7ba7\"},\"displayName\":\"T3 Stack / NextJS / ReactJS File Generator\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"james-yu.latex-workshop\",\"uuid\":\"61d03280-3919-4dd1-bce1-178ca21fdeaf\"},\"displayName\":\"LaTeX Workshop\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"jebbs.plantuml\",\"uuid\":\"d95cb424-7a5a-4e08-9698-107d6fd590cf\"},\"displayName\":\"PlantUML\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"jit-y.vscode-advanced-open-file\",\"uuid\":\"5bf668b6-88a8-4cb6-a7c7-429cfd2e2bac\"},\"displayName\":\"vscode-advanced-open-file\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"jmkrivocapich.drawfolderstructure\",\"uuid\":\"2631b1a4-0c54-406b-bf85-2c58a0e327cd\"},\"displayName\":\"Draw Folder Structure\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"jock.svg\",\"uuid\":\"4ae6dc82-7981-4f10-bd81-2d72aec37f39\"},\"displayName\":\"SVG\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"kamikillerto.vscode-colorize\",\"uuid\":\"445ba381-f232-4150-9056-d790bd76d698\"},\"displayName\":\"colorize\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"katsute.code-background\",\"uuid\":\"728b0910-614c-4963-a30b-cc6c0b51eb62\"},\"displayName\":\"Background\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"kisstkondoros.vscode-gutter-preview\",\"uuid\":\"eedfd044-d5ac-4389-973d-3ac1fdb98ad5\"},\"displayName\":\"Image preview\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"leodevbro.blockman\",\"uuid\":\"4a65c1f4-5251-41fa-925e-5b154e94d6e4\"},\"displayName\":\"Blockman - Highlight Nested Code Blocks\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"marinaglancy.bulk-problem-diagnostics\",\"uuid\":\"0918ea67-212c-44cc-a0b8-036b1c700853\"},\"displayName\":\"Bulk Problem Diagnostics\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"mariusalchimavicius.json-to-ts\",\"uuid\":\"2e4a6a59-8d62-4ea6-99ba-09ca1fb20dca\"},\"displayName\":\"JSON to TS\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"mark-wiemer.vscode-autohotkey-plus-plus\",\"uuid\":\"cf96e3c7-3b07-4403-acc9-2b6299ba7877\"},\"displayName\":\"AHK++ (AutoHotkey Plus Plus)\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"marp-team.marp-vscode\",\"uuid\":\"a6226409-c077-4199-9efe-5fd4d91a253d\"},\"displayName\":\"Marp for VS Code\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"meganrogge.template-string-converter\",\"uuid\":\"e56ae0dc-ddd7-462a-872d-6d14ea27f737\"},\"displayName\":\"Template String Converter\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"mikestead.dotenv\",\"uuid\":\"532533c9-a894-4a58-9eee-bbfbe7c06f71\"},\"displayName\":\"DotENV\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"modular-mojotools.vscode-mojo\",\"uuid\":\"bebd83d1-5a3e-4aae-ad9e-c892e449af82\"},\"displayName\":\"Mojo 🔥\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"mongodb.mongodb-vscode\",\"uuid\":\"4b6540da-bfa3-4b88-b9e3-df8f2d161124\"},\"displayName\":\"MongoDB for VS Code\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-azuretools.vscode-docker\",\"uuid\":\"0479fc1c-3d67-49f9-b087-fb9069afe48f\"},\"displayName\":\"Docker\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-playwright.playwright\",\"uuid\":\"f53b1d43-eef4-4909-99ca-56b5fa3e108c\"},\"displayName\":\"Playwright Test for VSCode\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-python.debugpy\",\"uuid\":\"4bd5d2c9-9d65-401a-b0b2-7498d9f17615\"},\"displayName\":\"Python Debugger\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-python.python\",\"uuid\":\"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5\"},\"displayName\":\"Python\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-python.vscode-pylance\",\"uuid\":\"364d2426-116a-433a-a5d8-a5098dc3afbd\"},\"displayName\":\"Pylance\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode-remote.remote-containers\",\"uuid\":\"93ce222b-5f6f-49b7-9ab1-a0463c6238df\"},\"displayName\":\"Dev Containers\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode-remote.remote-ssh\",\"uuid\":\"607fd052-be03-4363-b657-2bd62b83d28a\"},\"displayName\":\"Remote - SSH\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode-remote.remote-ssh-edit\",\"uuid\":\"bfeaf631-bcff-4908-93ed-fda4ef9a0c5c\"},\"displayName\":\"Remote - SSH: Editing Configuration Files\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.cmake-tools\",\"uuid\":\"7c889349-8749-43d4-8b5e-08939936d7f4\"},\"displayName\":\"CMake Tools\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.cpptools\",\"uuid\":\"690b692e-e8a9-493f-b802-8089d50ac1b2\"},\"displayName\":\"C/C++\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.cpptools-extension-pack\",\"uuid\":\"3957b2f6-f086-49b5-a7b4-5da772123130\"},\"displayName\":\"C/C++ Extension Pack\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.cpptools-themes\",\"uuid\":\"99b17261-8f6e-45f0-9ad5-a69c6f509a4f\"},\"displayName\":\"C/C++ Themes\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.remote-explorer\",\"uuid\":\"11858313-52cc-4e57-b3e4-d7b65281e34b\"},\"displayName\":\"Remote Explorer\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.remote-repositories\",\"uuid\":\"cf5142f0-3701-4992-980c-9895a750addf\"},\"displayName\":\"Remote Repositories\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"oven.bun-vscode\",\"uuid\":\"2c58c6a8-c23c-4913-899e-17c90b15274e\"},\"displayName\":\"Bun for Visual Studio Code\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"percy.vscode-numpy-viewer\",\"uuid\":\"1f7469ee-0d73-453b-9afa-f3089a91bddc\"},\"displayName\":\"vscode-numpy-viewer\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"pkief.material-icon-theme\",\"uuid\":\"5db78037-f674-459f-a236-db622c427c5b\"},\"displayName\":\"Material Icon Theme\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"pmneo.tsimporter\",\"uuid\":\"6bc1e3ad-c0e2-46b6-bbad-246c5f59215b\"},\"displayName\":\"TypeScript Importer\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"prisma.prisma\",\"uuid\":\"33ce9d6b-41cf-4972-a62b-386f7201981d\"},\"displayName\":\"Prisma\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"quicktype.quicktype\",\"uuid\":\"e05d98bf-3735-4c1e-9fae-86ef0a52e19f\"},\"displayName\":\"Paste JSON as Code\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"qwtel.sqlite-viewer\",\"uuid\":\"94fef082-6c2d-43ac-9540-6617b51a3a12\"},\"displayName\":\"SQLite Viewer\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"rangav.vscode-thunder-client\",\"uuid\":\"2fd56207-78ef-49d4-95d2-9b801eee4dbf\"},\"displayName\":\"Thunder Client\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"redhat.vscode-xml\",\"uuid\":\"6703768d-d42f-474e-9f6e-5f288d53f6e8\"},\"displayName\":\"XML\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"richie5um2.vscode-sort-json\",\"uuid\":\"3fb77af3-b8b3-4cb9-9137-f555bd80e2b1\"},\"displayName\":\"Sort JSON objects\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ritwickdey.liveserver\",\"uuid\":\"46cc5bbd-b098-4568-9b87-f91e07d26f2d\"},\"displayName\":\"Live Server\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"rpinski.shebang-snippets\",\"uuid\":\"73b80ea3-7f20-4eb7-ab8c-e70ac36224df\"},\"displayName\":\"Shebang Snippets\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ryuta46.multi-command\",\"uuid\":\"a92437f6-75af-47b2-b3e0-99764308b4be\"},\"displayName\":\"multi-command\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"shardulm94.trailing-spaces\",\"uuid\":\"6ad45f5a-09ec-44e5-b363-867ddc1ec674\"},\"displayName\":\"Trailing Spaces\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"sleistner.vscode-fileutils\",\"uuid\":\"d637104e-1fd7-4063-98fc-8afe46012c9b\"},\"displayName\":\"File Utils\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"steoates.autoimport\",\"uuid\":\"70378119-1d85-4935-9733-0298c7a369a2\"},\"displayName\":\"Auto Import\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"stringham.move-ts\",\"uuid\":\"9f47c6a1-da06-41ce-ba18-5e281296aa0a\"},\"displayName\":\"Move TS - Move TypeScript files and update relative imports\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"svelte.svelte-vscode\",\"uuid\":\"c5463f77-75d9-4a25-8cc4-d8541a461285\"},\"displayName\":\"Svelte for VS Code\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"tamasfe.even-better-toml\",\"uuid\":\"b2215d5f-675e-4a2b-b6ac-1ca737518b78\"},\"displayName\":\"Even Better TOML\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"tldraw-org.tldraw-vscode\",\"uuid\":\"c8132309-be84-4ae3-afa5-c6a8bc824611\"},\"displayName\":\"tldraw\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"twxs.cmake\",\"uuid\":\"2be7cf14-2603-402e-9771-fd79df83cdf8\"},\"displayName\":\"CMake\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"tyriar.luna-paint\",\"uuid\":\"4358224d-f1ef-4635-a14b-a2f784a06e3d\"},\"displayName\":\"Luna Paint — Image Editor\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"usernamehw.errorlens\",\"uuid\":\"9d8c32ab-354c-4daf-a9bf-20b633734435\"},\"displayName\":\"Error Lens\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"veroxyle.shadcn-ui-snippets\",\"uuid\":\"7303c3e5-f869-4d1c-965a-58039a287f85\"},\"displayName\":\"shadcn/ui snippets\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"vincaslt.highlight-matching-tag\",\"uuid\":\"aae00486-7e92-42b3-91b0-2b419e4f3875\"},\"displayName\":\"Highlight Matching Tag\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"vscode-infra.image-viewer\",\"uuid\":\"dcceed4e-a8b9-48f2-8b81-115e487ade30\"},\"displayName\":\"Image Viewer\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"wallabyjs.quokka-vscode\",\"uuid\":\"aae0701b-111f-49c1-9000-abd37a442f28\"},\"displayName\":\"Quokka.js\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"wenfangdu.snippet-generator\",\"uuid\":\"0992b553-4ce0-40cf-b32a-c83dd131f9de\"},\"displayName\":\"Snippet Generator\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"wix.vscode-import-cost\",\"uuid\":\"c46b0018-f317-4b6c-a785-d2039b27338f\"},\"displayName\":\"Import Cost\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"yoavbls.pretty-ts-errors\",\"uuid\":\"1e149c89-8f97-447e-863d-1146f0ad1b70\"},\"displayName\":\"Pretty TypeScript Errors\",\"applicationScoped\":false}]","globalState":"{\"storage\":{\"workbench.panel.markers.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.markers.view\\\",\\\"isHidden\\\":false}]\",\"workbench.panel.output.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.output\\\",\\\"isHidden\\\":false}]\",\"terminal.hidden\":\"[{\\\"id\\\":\\\"terminal\\\",\\\"isHidden\\\":false}]\",\"workbench.explorer.views.state.hidden\":\"[{\\\"id\\\":\\\"outline\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"timeline\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.explorer.openEditorsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.explorer.emptyView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"npm\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.explorer.fileView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cell-tag\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sqlite.explorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"commitViewProvider\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"compareCommitViewProvider\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"xmlTreeView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"SonarLint.IssueLocations\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"effectiveMetadata\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"rustDependencies\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"petsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"brunoPanel\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"makefile.outline\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"go.explorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"liveshare.session.explorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"liveshare.session\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"liveshare.help\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"liveshare.devtools\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"go.package.outline\\\",\\\"isHidden\\\":false}]\",\"workbench.scm.views.state.hidden\":\"[{\\\"id\\\":\\\"workbench.scm.repositories\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.scm\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.repositories\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"gitlens.views.commits\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.commitDetails\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.fileHistory\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.lineHistory\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"gitlens.views.branches\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.remotes\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.stashes\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.tags\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.worktrees\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.contributors\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"gitlens.views.searchAndCompare\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.scm.sync\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.scm.history\\\",\\\"isHidden\\\":false}]\",\"workbench.view.search.state.hidden\":\"[{\\\"id\\\":\\\"workbench.view.search\\\",\\\"isHidden\\\":false}]\",\"workbench.activity.pinnedViewlets2\":\"[{\\\"id\\\":\\\"workbench.view.explorer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":0},{\\\"id\\\":\\\"workbench.view.search\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":1},{\\\"id\\\":\\\"workbench.panel.markers\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":0},{\\\"id\\\":\\\"workbench.view.scm\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":2},{\\\"id\\\":\\\"workbench.view.extension.nextjs-explorer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":9},{\\\"id\\\":\\\"workbench.view.extension.cmake-view\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":13},{\\\"id\\\":\\\"workbench.view.extension.wallaby\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":15},{\\\"id\\\":\\\"workbench.view.debug\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":3},{\\\"id\\\":\\\"workbench.view.remote\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":4},{\\\"id\\\":\\\"workbench.view.extension.test\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":6},{\\\"id\\\":\\\"workbench.view.extensions\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":4},{\\\"id\\\":\\\"workbench.view.extension.references-view\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":7},{\\\"id\\\":\\\"workbench.view.extension.copilot-chat\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":16},{\\\"id\\\":\\\"workbench.views.service.sidebar.b1e8f71f-9b01-416e-b0ad-4cd458cf8156\\\",\\\"pinned\\\":true,\\\"visible\\\":false},{\\\"id\\\":\\\"workbench.panel.chatSidebar\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":100},{\\\"id\\\":\\\"workbench.view.sync\\\",\\\"pinned\\\":true,\\\"visible\\\":false},{\\\"id\\\":\\\"workbench.view.extension.sourcery-explorer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":16},{\\\"id\\\":\\\"workbench.panel.output\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":1},{\\\"id\\\":\\\"workbench.view.editSessions\\\",\\\"pinned\\\":true,\\\"visible\\\":false},{\\\"id\\\":\\\"workbench.view.extension.github-actions\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":8},{\\\"id\\\":\\\"workbench.panel.repl\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":2},{\\\"id\\\":\\\"workbench.view.extension.dockerView\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":12},{\\\"id\\\":\\\"workbench.view.extension.latex-workshop-activitybar\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":10},{\\\"id\\\":\\\"workbench.view.extension.mongoDB\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":11},{\\\"id\\\":\\\"workbench.view.extension.thunder-client\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":14},{\\\"id\\\":\\\"workbench.view.extension.console-ninja\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":16},{\\\"id\\\":\\\"terminal\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":3}]\",\"nps/lastSessionDate\":\"Thu Feb 09 2023\",\"nps/sessionCount\":\"7\",\"workbench.telemetryOptOutShown\":\"true\",\"workbench.view.debug.state.hidden\":\"[{\\\"id\\\":\\\"workbench.debug.welcome\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.variablesView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.watchExpressionsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.callStackView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.loadedScriptsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.breakPointsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"jsBrowserBreakpoints\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"jsExcludedCallers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"CppSshTargetsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"jsDebugNetworkTree\\\",\\\"isHidden\\\":false}]\",\"workbench.statusbar.hidden\":\"[\\\"status.workspaceTrust.1675225255018\\\",\\\"status.workspaceTrust.1675225335114\\\",\\\"status.workspaceTrust.59dfe6e1b7a06c2a30778edab74e3789\\\",\\\"status.workspaceTrust.1675227107825\\\",\\\"status.workspaceTrust.1675240586700\\\",\\\"status.workspaceTrust.2b6de2a5c47e5daa72dcf5462f0ed69c\\\",\\\"status.workspaceTrust.1675240676241\\\",\\\"status.workspaceTrust.1675240682298\\\",\\\"status.workspaceTrust.b214845d8d664108d039330251020f16\\\",\\\"status.workspaceTrust.1675241292788\\\",\\\"status.workspaceTrust.1675242783150\\\",\\\"status.workspaceTrust.1675244407182\\\",\\\"status.workspaceTrust.7d00d35e5172860ed29e156240ac8d1c\\\",\\\"status.workspaceTrust.1675244942680\\\",\\\"status.workspaceTrust.1675244965267\\\",\\\"status.workspaceTrust.73cc1f8fd70157a35d80b35db7548b75\\\",\\\"status.workspaceTrust.fa77e2f1741b4fd2360bb3154b276c27\\\",\\\"status.workspaceTrust.e6ae06cdeb86b18df3c0077a407d1e4d\\\",\\\"status.workspaceTrust.1675246420840\\\",\\\"status.workspaceTrust.1675246443225\\\",\\\"status.workspaceTrust.19be31e5d84f22a5c441108c44a03b90\\\",\\\"status.workspaceTrust.1675246519900\\\",\\\"status.workspaceTrust.6888b29e42c0ca8b85656bc94282a01a\\\",\\\"status.workspaceTrust.1675247292733\\\",\\\"status.workspaceTrust.1675247323367\\\",\\\"status.workspaceTrust.1675247723028\\\",\\\"status.workspaceTrust.1675247735134\\\",\\\"status.workspaceTrust.17634157b23055c753201413f6e07db4\\\",\\\"status.workspaceTrust.1675248672115\\\",\\\"status.workspaceTrust.1675251019819\\\",\\\"status.workspaceTrust.d83d56d8ab0212961cbd6e2a0e0bcd4d\\\",\\\"status.workspaceTrust.1675312653276\\\",\\\"status.workspaceTrust.7691f767d05b80c60763195d4b1ce0b3\\\",\\\"status.workspaceTrust.1675312725822\\\",\\\"status.workspaceTrust.1675329149461\\\",\\\"status.workspaceTrust.1675331398103\\\",\\\"status.workspaceTrust.1675331411730\\\",\\\"status.workspaceTrust.3b39549e514268a065b024be600706fe\\\",\\\"status.workspaceTrust.1675332989619\\\",\\\"status.workspaceTrust.1675336378275\\\",\\\"status.workspaceTrust.504610ac754c4b5c03dcf598c9af5364\\\",\\\"status.workspaceTrust.1675392738568\\\",\\\"status.workspaceTrust.1675398837630\\\",\\\"status.workspaceTrust.31a90577e1e5369be1670fea444fabc8\\\",\\\"status.workspaceTrust.1675398942027\\\",\\\"status.workspaceTrust.1675399011599\\\",\\\"status.workspaceTrust.e91047ba885385dba31d5ea24ecc36f1\\\",\\\"status.workspaceTrust.a2412e88828e282bcab319861ac5d79a\\\",\\\"status.workspaceTrust.32139eac46387a148843139e08de4d71\\\",\\\"status.workspaceTrust.1675411887943\\\",\\\"status.workspaceTrust.1675411895446\\\",\\\"status.workspaceTrust.b793d82a5d5a57b296cb972f251b861a\\\",\\\"status.workspaceTrust.1675412297123\\\",\\\"status.workspaceTrust.1675412303204\\\",\\\"status.workspaceTrust.1675412310646\\\",\\\"status.workspaceTrust.1675413706763\\\",\\\"status.workspaceTrust.1675413713562\\\",\\\"status.workspaceTrust.1675415060397\\\",\\\"status.workspaceTrust.1675417125557\\\",\\\"status.workspaceTrust.b79e02307348053e99fbf49e1f1cff2d\\\",\\\"status.workspaceTrust.1675419641189\\\",\\\"status.workspaceTrust.e678425fe3fecb87a79f36fe6616e191\\\",\\\"status.workspaceTrust.96d565edd2f50cd3b85fe39fa14f5ebb\\\",\\\"status.workspaceTrust.1675423183041\\\",\\\"status.workspaceTrust.1675428180869\\\",\\\"status.workspaceTrust.1675428305210\\\",\\\"status.workspaceTrust.1675428682213\\\",\\\"status.workspaceTrust.2d407016328f75fbeae41cf603344a32\\\",\\\"status.workspaceTrust.2b769b817d7270d3b53374ac10b9c238\\\",\\\"status.workspaceTrust.1675653066694\\\",\\\"status.workspaceTrust.4f38e33ea4f96eedc097abfd716ca93e\\\",\\\"status.workspaceTrust.1675654974371\\\",\\\"status.workspaceTrust.1675654991025\\\",\\\"status.workspaceTrust.1419afebee96c6e8830b800e807cdc63\\\",\\\"status.workspaceTrust.1675655373345\\\",\\\"status.workspaceTrust.1675656733846\\\",\\\"status.workspaceTrust.1675656753380\\\",\\\"status.workspaceTrust.95f210e83d15bb0c9c6fb11c8debbf48\\\",\\\"status.workspaceTrust.1675656848057\\\",\\\"status.workspaceTrust.e03cb2e588214b61174b261d3422862d\\\",\\\"status.workspaceTrust.1675659128395\\\",\\\"status.workspaceTrust.1675659132320\\\",\\\"status.workspaceTrust.1675659136261\\\",\\\"status.workspaceTrust.1675659304744\\\",\\\"status.workspaceTrust.1675660085755\\\",\\\"status.workspaceTrust.1675676338841\\\",\\\"status.workspaceTrust.1675677871318\\\",\\\"status.workspaceTrust.1675677879327\\\",\\\"status.workspaceTrust.638fc085e5d48d0391995524993440bf\\\",\\\"status.workspaceTrust.1675678177659\\\",\\\"status.workspaceTrust.1675682719973\\\",\\\"status.workspaceTrust.1675682731154\\\",\\\"status.workspaceTrust.7033b10f074d462a27331258600178e0\\\",\\\"status.workspaceTrust.1675683827908\\\",\\\"status.workspaceTrust.1675736490933\\\",\\\"status.workspaceTrust.1675736505439\\\",\\\"status.workspaceTrust.95a50375dd7d6ab9d3aa6df147ed3801\\\",\\\"status.workspaceTrust.1675742371548\\\",\\\"status.workspaceTrust.1675743716662\\\",\\\"status.workspaceTrust.6e47e74eeb09c0ff4f6a27fc31ab2db8\\\",\\\"status.workspaceTrust.1675758409097\\\",\\\"status.workspaceTrust.1675758584550\\\",\\\"status.workspaceTrust.1675758595956\\\",\\\"status.workspaceTrust.8687e7c5642120c29977ffc4ffa8d0f9\\\",\\\"status.workspaceTrust.1675761969761\\\",\\\"status.workspaceTrust.1675770488714\\\",\\\"status.workspaceTrust.1675780720876\\\",\\\"status.workspaceTrust.1675780744491\\\",\\\"status.workspaceTrust.1675780749152\\\",\\\"status.workspaceTrust.1675846455016\\\",\\\"status.workspaceTrust.1675848096257\\\",\\\"status.workspaceTrust.b5ec76e73063c7977df40000601d9124\\\",\\\"status.workspaceTrust.1675909585242\\\",\\\"status.workspaceTrust.1675909600650\\\",\\\"status.workspaceTrust.1675911630262\\\",\\\"status.workspaceTrust.31667ecf70e81130e65b300034b70120\\\",\\\"status.workspaceTrust.1675919466987\\\",\\\"status.workspaceTrust.0a241252bb7b7c426b10a8bcf1ed9287\\\",\\\"status.workspaceTrust.1675919478308\\\",\\\"status.workspaceTrust.1675919513213\\\",\\\"status.workspaceTrust.1675919690447\\\",\\\"status.workspaceTrust.1675920462368\\\",\\\"status.workspaceTrust.1675926469373\\\",\\\"status.workspaceTrust.1675926470906\\\",\\\"status.workspaceTrust.1675926477911\\\",\\\"status.workspaceTrust.1675926485968\\\",\\\"status.workspaceTrust.1675926522860\\\",\\\"status.workspaceTrust.1675926527484\\\",\\\"status.workspaceTrust.1675926548583\\\",\\\"status.workspaceTrust.1675926590879\\\",\\\"status.workspaceTrust.1675926614759\\\",\\\"status.workspaceTrust.1675926614710\\\",\\\"status.workspaceTrust.1675926807462\\\",\\\"status.workspaceTrust.1675926812317\\\",\\\"status.workspaceTrust.1675926997622\\\",\\\"status.workspaceTrust.1675927007960\\\",\\\"status.workspaceTrust.1675927033726\\\",\\\"status.workspaceTrust.1675927043448\\\",\\\"status.workspaceTrust.1675927055067\\\",\\\"status.workspaceTrust.b1876944fc0e20a68ec11bb9a3373820\\\",\\\"status.workspaceTrust.1675927281788\\\",\\\"status.workspaceTrust.1675927492182\\\",\\\"status.workspaceTrust.1675927888667\\\",\\\"status.workspaceTrust.1675927895083\\\",\\\"status.workspaceTrust.1675927900759\\\",\\\"status.workspaceTrust.1675928036786\\\",\\\"status.workspaceTrust.1675928185449\\\",\\\"status.workspaceTrust.1675928190175\\\",\\\"status.workspaceTrust.1675937546813\\\",\\\"status.workspaceTrust.1675937995486\\\",\\\"status.workspaceTrust.1675938003020\\\",\\\"status.workspaceTrust.1675938011734\\\",\\\"status.workspaceTrust.1675938021246\\\",\\\"status.workspaceTrust.1675938115890\\\",\\\"status.workspaceTrust.b95414208752a1c63303dd85ceb76da4\\\",\\\"status.workspaceTrust.1675942763837\\\",\\\"status.workspaceTrust.26da3da850720e65d27af2f5683f7300\\\",\\\"status.workspaceTrust.1675943957010\\\",\\\"status.workspaceTrust.1675944874425\\\",\\\"status.workspaceTrust.1675945709876\\\",\\\"status.workspaceTrust.1675948156067\\\",\\\"status.workspaceTrust.1675948160764\\\",\\\"status.workspaceTrust.1675948198205\\\",\\\"status.workspaceTrust.1675949546236\\\",\\\"status.workspaceTrust.1675949991166\\\",\\\"status.workspaceTrust.1675950966771\\\",\\\"status.workspaceTrust.1675950973835\\\",\\\"status.workspaceTrust.1675955616872\\\",\\\"status.workspaceTrust.1675998845603\\\",\\\"status.workspaceTrust.e6d5fe7b5833100697889c2bd872bece\\\",\\\"status.workspaceTrust.1676004225189\\\",\\\"status.workspaceTrust.1676004229915\\\",\\\"status.workspaceTrust.1676014437505\\\",\\\"status.workspaceTrust.3f2c7a9e8d7c74451aff7037bebeb8c4\\\",\\\"status.workspaceTrust.1676015249087\\\",\\\"status.workspaceTrust.bf3c81aa59d2c261a5fc6b784dbab17e\\\",\\\"status.workspaceTrust.1676018201078\\\",\\\"status.workspaceTrust.1676022903894\\\",\\\"status.workspaceTrust.1676022909920\\\",\\\"status.workspaceTrust.1676023365646\\\",\\\"status.workspaceTrust.1676024935682\\\",\\\"status.workspaceTrust.1676024942180\\\",\\\"status.workspaceTrust.1676032011337\\\",\\\"status.workspaceTrust.1676256315417\\\",\\\"status.workspaceTrust.1676256940889\\\",\\\"status.workspaceTrust.1676276369061\\\",\\\"status.workspaceTrust.ed9b1efb2b2998f1f0b6d425ffd9e39c\\\",\\\"status.workspaceTrust.1676279580833\\\",\\\"status.workspaceTrust.1676282643402\\\",\\\"status.workspaceTrust.bfa490c2e470d6d5d1ab1a591207a22b\\\",\\\"status.workspaceTrust.f771ab8708f287dbcbc132fa07fc127b\\\",\\\"status.workspaceTrust.1676286551199\\\",\\\"status.workspaceTrust.1676286557580\\\",\\\"status.workspaceTrust.1676286795824\\\",\\\"status.workspaceTrust.1676344863685\\\",\\\"status.workspaceTrust.1676352677247\\\",\\\"status.workspaceTrust.86e5e4c9cd69b76072dd1cae37d14eae\\\",\\\"status.workspaceTrust.1676360070480\\\",\\\"status.workspaceTrust.1676360139329\\\",\\\"status.workspaceTrust.31669aa93ad3738394246441f0eae0f6\\\",\\\"status.workspaceTrust.1676360321268\\\",\\\"status.workspaceTrust.df75ff00fe4824ada61b8325d2e1c8f6\\\",\\\"status.workspaceTrust.1676363818685\\\",\\\"status.workspaceTrust.cccfa33011c0a26cd36c0dfbf2cc470f\\\",\\\"status.workspaceTrust.1676375796161\\\",\\\"status.workspaceTrust.1676379213905\\\",\\\"status.workspaceTrust.1676460712698\\\",\\\"status.workspaceTrust.a06328a5401f5e6ad1d073e24dc1f148\\\",\\\"status.workspaceTrust.1676463618284\\\",\\\"status.workspaceTrust.1676463821100\\\",\\\"status.workspaceTrust.1676464617944\\\",\\\"status.workspaceTrust.1676465045235\\\",\\\"status.workspaceTrust.1676469166253\\\",\\\"status.workspaceTrust.dc87908a604d7c84089991cee8b6ec0b\\\",\\\"status.workspaceTrust.1676472676642\\\",\\\"status.workspaceTrust.1676473717212\\\",\\\"status.workspaceTrust.1676473836120\\\",\\\"status.workspaceTrust.1676522378399\\\",\\\"status.workspaceTrust.b95cea49473e60ecccb2c5ba00a73f77\\\",\\\"status.workspaceTrust.1676523962640\\\",\\\"status.workspaceTrust.1676532324800\\\",\\\"status.workspaceTrust.1676533366914\\\",\\\"status.workspaceTrust.421a3943c78d4e3aa824b989764caf7a\\\",\\\"status.workspaceTrust.1676537680717\\\",\\\"status.workspaceTrust.1676537714986\\\",\\\"status.workspaceTrust.1676540291119\\\",\\\"status.workspaceTrust.14b79d83b204ab28aa7d8a414ffceb26\\\",\\\"status.workspaceTrust.1676545347338\\\",\\\"status.workspaceTrust.970503afd98ee3e9009a379374d2f361\\\",\\\"status.workspaceTrust.1676629247302\\\",\\\"status.workspaceTrust.2704fce133253db4cf45bc4a6bdba8a7\\\",\\\"status.workspaceTrust.1676637946038\\\",\\\"status.workspaceTrust.1676859065110\\\",\\\"status.workspaceTrust.dc313938b7e7ebddfa74c3651fcf5753\\\",\\\"status.workspaceTrust.1676859640092\\\",\\\"status.workspaceTrust.7d8026b955cfeb6ef01bb9ee84d4bade\\\",\\\"status.workspaceTrust.2dd09026d5e64bb201def4b4de3f0f86\\\",\\\"status.workspaceTrust.1676864157186\\\",\\\"status.workspaceTrust.00528251c073f31c75998d51d2a42cdb\\\",\\\"status.workspaceTrust.1676869068329\\\",\\\"status.workspaceTrust.1676869286199\\\",\\\"status.workspaceTrust.12b5dc389bddcc9bc2143814038f54e4\\\",\\\"status.workspaceTrust.1676879923395\\\",\\\"status.workspaceTrust.1676880209680\\\",\\\"status.workspaceTrust.715856c95c080b71d1dec4899902ad7b\\\",\\\"status.workspaceTrust.5cb9fc4d626e71d8556048db3d9a6a36\\\",\\\"status.workspaceTrust.1676888506849\\\",\\\"status.workspaceTrust.1676889160540\\\",\\\"status.workspaceTrust.4ca8a8add80e35d5ffe59f6e3e4a4dc6\\\",\\\"status.workspaceTrust.5009e121a7c0a0aab9fecad95e5431d7\\\",\\\"status.workspaceTrust.9b500673d6ece799e79690d8bf49c12a\\\",\\\"status.workspaceTrust.1676899243711\\\",\\\"status.workspaceTrust.1676899314974\\\",\\\"status.workspaceTrust.78309efa2f4bc019b695a26f81e0d99d\\\",\\\"status.workspaceTrust.1676899479141\\\",\\\"status.workspaceTrust.1676899769243\\\",\\\"status.workspaceTrust.a30598db61765bcb325d81032ad9f7da\\\",\\\"status.workspaceTrust.1676946353778\\\",\\\"status.workspaceTrust.1676971247016\\\",\\\"status.workspaceTrust.1676971256589\\\",\\\"status.workspaceTrust.1676971760480\\\",\\\"status.workspaceTrust.b885f58682c935d0270b8583fe2d87b2\\\",\\\"status.workspaceTrust.906dd0dab3d1977c1452c4ae5bdf8446\\\",\\\"status.workspaceTrust.1676974830336\\\",\\\"status.workspaceTrust.1676975276571\\\",\\\"status.workspaceTrust.443db1884c86d12c9f04f41f995e2416\\\",\\\"status.workspaceTrust.1676977911540\\\",\\\"status.workspaceTrust.dbba0aec6edf8945d4acba42de9ac7c1\\\",\\\"status.workspaceTrust.1676981380817\\\",\\\"status.workspaceTrust.88144f87a33ff028ec25d26825056639\\\",\\\"status.workspaceTrust.1676981759175\\\",\\\"status.workspaceTrust.1676982139599\\\",\\\"status.workspaceTrust.33789e785eaed36ac115a4b1189582c0\\\",\\\"status.workspaceTrust.1676986618753\\\",\\\"status.workspaceTrust.1676986627715\\\",\\\"status.workspaceTrust.1677033741351\\\",\\\"status.workspaceTrust.0592d247091bc1b216b73eda501ae3ba\\\",\\\"status.workspaceTrust.1677037965876\\\",\\\"status.workspaceTrust.1677056854334\\\",\\\"status.workspaceTrust.1677059907402\\\",\\\"status.workspaceTrust.cafa4f2641eddcfb74cb2981aa61d7c0\\\",\\\"status.workspaceTrust.1677059979915\\\",\\\"status.workspaceTrust.82d9e7ee5d0002f4dff3190dc037dc8e\\\",\\\"status.workspaceTrust.1677061279753\\\",\\\"status.workspaceTrust.1677066752559\\\",\\\"status.workspaceTrust.1677066769386\\\",\\\"status.workspaceTrust.1677066872135\\\",\\\"status.workspaceTrust.1677070401177\\\",\\\"status.workspaceTrust.1677119223130\\\",\\\"status.workspaceTrust.1677127124957\\\",\\\"status.workspaceTrust.1677140302662\\\",\\\"status.workspaceTrust.1677145368588\\\",\\\"status.workspaceTrust.1677146272289\\\",\\\"status.workspaceTrust.1677146498859\\\",\\\"status.workspaceTrust.1677146613166\\\",\\\"status.workspaceTrust.1677153584892\\\",\\\"status.workspaceTrust.1677153748954\\\",\\\"status.workspaceTrust.1677210844188\\\",\\\"status.workspaceTrust.f93da2aae775a7330c1440fe6a03ace3\\\",\\\"status.workspaceTrust.1677215889143\\\",\\\"status.workspaceTrust.cc20693467a797434a8cc5982afc6329\\\",\\\"status.workspaceTrust.1677237582125\\\",\\\"status.workspaceTrust.6dfb064ecbf6379b402868fa81ce1b97\\\",\\\"status.workspaceTrust.1677497626566\\\",\\\"status.workspaceTrust.1677551926776\\\",\\\"status.workspaceTrust.1677552842636\\\",\\\"status.workspaceTrust.1677553245504\\\",\\\"status.workspaceTrust.74c2c29befd87a7807260bbd60a07679\\\",\\\"status.workspaceTrust.1677571392099\\\",\\\"status.workspaceTrust.e1fe56d9c01f36fb2f97fff39b58223c\\\",\\\"status.workspaceTrust.1677639697960\\\",\\\"status.workspaceTrust.1677639801936\\\",\\\"status.workspaceTrust.1677733434858\\\",\\\"status.workspaceTrust.a95a46791ac95ec4d60972623bb0dc85\\\",\\\"status.workspaceTrust.1677751195822\\\",\\\"status.workspaceTrust.0bec8069908b841e263de91403f4b9dc\\\",\\\"status.workspaceTrust.1677811151535\\\",\\\"status.workspaceTrust.1677811940707\\\",\\\"status.workspaceTrust.fce6dcb4e9942aa94889449481795b61\\\",\\\"status.workspaceTrust.1677814837478\\\",\\\"status.workspaceTrust.90e0de451be0ab6a40fca3805b8a5fce\\\",\\\"status.workspaceTrust.1678167054660\\\",\\\"status.workspaceTrust.673becc3ab06d0ae885163cbcd3c9e3c\\\",\\\"status.workspaceTrust.1678170601662\\\",\\\"status.workspaceTrust.1678176159976\\\",\\\"status.workspaceTrust.1678176163470\\\",\\\"status.workspaceTrust.1678176198173\\\",\\\"status.workspaceTrust.b83aad66af889faabaedef40a68b12c5\\\",\\\"status.workspaceTrust.1678176723328\\\",\\\"status.workspaceTrust.1678422014448\\\",\\\"status.workspaceTrust.11614369eda50f413fb5da6ff4d56762\\\",\\\"status.workspaceTrust.1678455534458\\\",\\\"status.workspaceTrust.1678455540967\\\",\\\"status.workspaceTrust.1678455703119\\\",\\\"status.workspaceTrust.1678456117696\\\",\\\"status.workspaceTrust.1678456120396\\\",\\\"status.workspaceTrust.2738527ce15b989c3b2229c62b52bbbe\\\",\\\"status.workspaceTrust.1678676511293\\\",\\\"status.workspaceTrust.1678676519334\\\",\\\"status.workspaceTrust.1678676681194\\\",\\\"status.workspaceTrust.a188e5473436dcef83ab6a8740fd0603\\\",\\\"status.workspaceTrust.1678677033873\\\",\\\"status.workspaceTrust.1678678007399\\\",\\\"status.workspaceTrust.1678678099699\\\",\\\"status.workspaceTrust.1678682322742\\\",\\\"status.workspaceTrust.1678683798521\\\",\\\"status.workspaceTrust.1678692925366\\\",\\\"status.workspaceTrust.1678692963208\\\",\\\"status.workspaceTrust.1678693491197\\\",\\\"status.workspaceTrust.1052cb116050acffa05bf4ea48a213fe\\\",\\\"status.workspaceTrust.1678708694386\\\",\\\"status.workspaceTrust.1678710025026\\\",\\\"status.workspaceTrust.1678712409764\\\",\\\"status.workspaceTrust.1678717270753\\\",\\\"status.workspaceTrust.1678802157735\\\",\\\"status.workspaceTrust.3575d15ff4f8832f57989b62106b3be8\\\",\\\"status.workspaceTrust.dd76271b22242d1d62b2f363ac2b766d\\\",\\\"status.workspaceTrust.b8526029668517060dae6b601a303ac0\\\",\\\"status.workspaceTrust.c02fbba8197b9aeef1c7972b390bc257\\\",\\\"status.workspaceTrust.1678803974532\\\",\\\"status.workspaceTrust.1678803977749\\\",\\\"status.workspaceTrust.1678805460649\\\",\\\"status.workspaceTrust.8534f2ff8290cad086ca79b87d5fb3c2\\\",\\\"status.workspaceTrust.1678806141548\\\",\\\"status.workspaceTrust.1678808771939\\\",\\\"status.workspaceTrust.1680247645798\\\",\\\"status.workspaceTrust.2cbb105bb4cb0f349799f226681e4d50\\\",\\\"status.workspaceTrust.1680251031426\\\",\\\"status.workspaceTrust.1680491949185\\\",\\\"status.workspaceTrust.97ba5e4b2bcb24c3cd6dbf59c3ea69ac\\\",\\\"status.workspaceTrust.1683261867577\\\",\\\"status.workspaceTrust.1683262098256\\\",\\\"status.workspaceTrust.74c10c8654e0e23c5460bb576d36cc63\\\",\\\"status.workspaceTrust.1683284780206\\\",\\\"status.workspaceTrust.1683284785764\\\",\\\"status.workspaceTrust.d58331182dad45880e081ffdb173e591\\\",\\\"status.workspaceTrust.1683286814971\\\",\\\"status.workspaceTrust.ad9505f0c3c09cf284bbbc364df0b1db\\\",\\\"status.workspaceTrust.1683516306015\\\",\\\"status.workspaceTrust.018ca858138667b282c8ee007a961c62\\\",\\\"status.workspaceTrust.1683519610202\\\",\\\"status.workspaceTrust.1683606410779\\\",\\\"status.workspaceTrust.1683606418804\\\",\\\"status.workspaceTrust.1683606425844\\\",\\\"status.workspaceTrust.1683606766453\\\",\\\"status.workspaceTrust.1683606942065\\\",\\\"status.workspaceTrust.f4c29bd0a4c030855e5a8f5b82d29499\\\",\\\"status.workspaceTrust.f6c9ad1a3fb80ccfbf8dbfb574e4de40\\\",\\\"status.workspaceTrust.d306af9924cb3caaadd54eed2ffaaba4\\\",\\\"status.workspaceTrust.5d511cb38f2a0de04dfbf29da1b7e9bd\\\",\\\"status.workspaceTrust.1683619725635\\\",\\\"status.workspaceTrust.eb7a85fb91768eb93fe9034cd9337214\\\",\\\"status.workspaceTrust.1683630682292\\\",\\\"status.workspaceTrust.1683684664501\\\",\\\"status.workspaceTrust.1683684734346\\\",\\\"status.workspaceTrust.1683686471964\\\",\\\"status.workspaceTrust.1683686490350\\\",\\\"status.workspaceTrust.1683686524739\\\",\\\"status.workspaceTrust.1683686531835\\\",\\\"status.workspaceTrust.1683686561758\\\",\\\"status.workspaceTrust.1683686604153\\\",\\\"status.workspaceTrust.1683686684247\\\",\\\"status.workspaceTrust.1683686702487\\\",\\\"status.workspaceTrust.1683686884991\\\",\\\"status.workspaceTrust.1683686910137\\\",\\\"status.workspaceTrust.1683687057748\\\",\\\"status.workspaceTrust.1683687619459\\\",\\\"status.workspaceTrust.1683687720209\\\",\\\"status.workspaceTrust.1683777928576\\\",\\\"status.workspaceTrust.04343e50bc7d0dae3f4aabc5042e815b\\\",\\\"status.workspaceTrust.1683779296105\\\",\\\"status.workspaceTrust.1683800963922\\\",\\\"status.workspaceTrust.1683857817331\\\",\\\"status.workspaceTrust.1683867446759\\\",\\\"status.workspaceTrust.1683869031418\\\",\\\"status.workspaceTrust.cfcbdc3c1185634b3435007f5bf5fcba\\\",\\\"status.workspaceTrust.1683869642214\\\",\\\"status.workspaceTrust.092d2541efc6852c1abab290627849ce\\\",\\\"status.workspaceTrust.1683893461870\\\",\\\"status.workspaceTrust.5bf70baf153e88bac288f650142fd04c\\\",\\\"status.workspaceTrust.1684121100764\\\",\\\"status.workspaceTrust.1684124737508\\\",\\\"status.workspaceTrust.1684124745052\\\",\\\"status.workspaceTrust.1684125734746\\\",\\\"status.workspaceTrust.9ce57d0a1d5011a73fc7fb538027ff4b\\\",\\\"status.workspaceTrust.1684149875445\\\",\\\"status.workspaceTrust.1684173594494\\\",\\\"status.workspaceTrust.1684173616238\\\",\\\"status.workspaceTrust.1684173669906\\\",\\\"status.workspaceTrust.a22f5cb17e6a374374481ecc19409d05\\\",\\\"status.workspaceTrust.1685207515157\\\",\\\"status.workspaceTrust.1685208239809\\\",\\\"status.workspaceTrust.7fbd62de773a9a72f6efcf2bda4c0c42\\\",\\\"status.workspaceTrust.1685213425628\\\",\\\"status.workspaceTrust.1685213484703\\\",\\\"status.workspaceTrust.1685221586139\\\",\\\"status.workspaceTrust.b2dec72372322f442597c13ec115fffd\\\",\\\"status.workspaceTrust.1685266299317\\\",\\\"status.workspaceTrust.c19f9154840411a422c6a5c30e381dca\\\",\\\"status.workspaceTrust.1685296933546\\\",\\\"status.workspaceTrust.1685297623000\\\",\\\"status.workspaceTrust.1685300056814\\\",\\\"status.workspaceTrust.1685444196213\\\",\\\"status.workspaceTrust.1685448199882\\\",\\\"status.workspaceTrust.1685448214787\\\",\\\"status.workspaceTrust.1685554917469\\\",\\\"status.workspaceTrust.4d12c28f7ef1f4b5bdb951747a5b0233\\\",\\\"status.workspaceTrust.1685555825881\\\",\\\"status.workspaceTrust.1685557179416\\\",\\\"status.workspaceTrust.1686061711899\\\",\\\"status.workspaceTrust.ffca6d8e259e57da18d7eb23596b82c0\\\",\\\"status.workspaceTrust.053ac69f9dcc4a14e8286a8598fbab42\\\",\\\"status.workspaceTrust.5e061eb1303fa710ffa506aa0b5cf0c3\\\",\\\"status.workspaceTrust.e757f56757600ffb14c9b9f9fa11bed7\\\",\\\"status.workspaceTrust.f145bc16e88cbdd8a285b79cd32a3ba8\\\",\\\"status.workspaceTrust.a986434d3764f82404265e2ec03ecb62\\\",\\\"status.workspaceTrust.1688703878449\\\",\\\"status.workspaceTrust.4738f7c7568b36f9f7a0009689167146\\\",\\\"status.workspaceTrust.1688704831753\\\",\\\"status.workspaceTrust.bfc72946a906832dee235cd75ca09109\\\",\\\"status.workspaceTrust.e822331bcbf08a39ae4de068ec0f172a\\\",\\\"status.workspaceTrust.1689122498884\\\",\\\"status.workspaceTrust.1689217708848\\\",\\\"status.workspaceTrust.7f06221199a5b5c7a686c9ecc8c85552\\\",\\\"status.workspaceTrust.e31a212d91620bc55b0bb48b20e60252\\\",\\\"status.workspaceTrust.70af2a6472493eb655647172d98c026e\\\",\\\"status.workspaceTrust.7b3ec94044b702bb111820c26d0d5b52\\\",\\\"status.workspaceTrust.1689322335661\\\",\\\"status.workspaceTrust.7a4d37cfff840d16dd607439ad4bbaba\\\",\\\"status.workspaceTrust.1689555943911\\\",\\\"status.workspaceTrust.1689662015703\\\",\\\"status.workspaceTrust.1689666393098\\\",\\\"status.workspaceTrust.1689666432248\\\",\\\"status.workspaceTrust.1689666436935\\\",\\\"status.workspaceTrust.1689666466155\\\",\\\"status.workspaceTrust.1689666610014\\\",\\\"status.workspaceTrust.1689666770092\\\",\\\"status.workspaceTrust.1689666840893\\\",\\\"status.workspaceTrust.1689666916193\\\",\\\"status.workspaceTrust.1689666942915\\\",\\\"status.workspaceTrust.1689667022405\\\",\\\"status.workspaceTrust.1689674075939\\\",\\\"status.workspaceTrust.2cf62847eed7a8a25f9532a0d567fbff\\\",\\\"status.workspaceTrust.77bc565e1063ceb78b08abe342c4522d\\\",\\\"status.workspaceTrust.3ad652f54b1e04bd25c086c83eb2e624\\\",\\\"status.workspaceTrust.1689737393469\\\",\\\"status.workspaceTrust.1689737396451\\\",\\\"status.workspaceTrust.e000dfbeebc150b0c7074dc010d132cf\\\",\\\"status.workspaceTrust.1689739484028\\\",\\\"status.workspaceTrust.1689820653628\\\",\\\"status.workspaceTrust.1689820656319\\\",\\\"status.workspaceTrust.1689837701323\\\",\\\"status.workspaceTrust.1689837703155\\\",\\\"status.workspaceTrust.c6fd19ef8d0e22378f55277cf11169e5\\\",\\\"status.workspaceTrust.1690168084907\\\",\\\"status.workspaceTrust.1110313e74cf6c711ac45c8a96ce75f6\\\",\\\"status.workspaceTrust.1e4d8ee44aa4efd825133f45fa70019b\\\",\\\"status.workspaceTrust.da1c1b9a476f50561f820a85792428e5\\\",\\\"status.workspaceTrust.407fdef8ab6db7d4aa0052f8bfb10724\\\",\\\"status.workspaceTrust.1690180079032\\\",\\\"status.workspaceTrust.1690252179887\\\",\\\"status.workspaceTrust.c37d7b4646e561a9984f65bc3c7b2f37\\\",\\\"status.workspaceTrust.d4d76ddc31a3a5989d46291438a12c79\\\",\\\"status.workspaceTrust.9b5283d6a6084fc14fcbe537fcd051fa\\\",\\\"status.workspaceTrust.1690269761282\\\",\\\"status.workspaceTrust.1690269786160\\\",\\\"status.workspaceTrust.1690269811119\\\",\\\"status.workspaceTrust.1690269872531\\\",\\\"status.workspaceTrust.1690273617258\\\",\\\"status.workspaceTrust.ab7cafe367a55b39ee289db16a7bc7c0\\\",\\\"status.workspaceTrust.1690337741213\\\",\\\"status.workspaceTrust.1690337745779\\\",\\\"status.workspaceTrust.3bf91e71b7696c86514746be04c07819\\\",\\\"status.workspaceTrust.1690352733714\\\",\\\"status.workspaceTrust.1690357938122\\\",\\\"status.workspaceTrust.4daac94937a9bc05f9e2340b46fcfe3a\\\",\\\"status.workspaceTrust.ae18ed0cc938a607321179e7e3772633\\\",\\\"status.workspaceTrust.1690369238419\\\",\\\"status.workspaceTrust.1690423226419\\\",\\\"status.workspaceTrust.1690423234705\\\",\\\"status.workspaceTrust.1690450437203\\\",\\\"status.workspaceTrust.1690510831425\\\",\\\"status.workspaceTrust.1690510835442\\\",\\\"status.workspaceTrust.775d2fdf6b6039c3b422b14a89de1ec8\\\",\\\"status.workspaceTrust.1690876946767\\\",\\\"status.workspaceTrust.1690949737329\\\",\\\"status.workspaceTrust.6ff9c77762dda49ec8752626187cb7e5\\\",\\\"status.workspaceTrust.1691055620912\\\",\\\"status.workspaceTrust.1691114926476\\\",\\\"status.workspaceTrust.1691114927473\\\",\\\"status.workspaceTrust.1691114924801\\\",\\\"status.workspaceTrust.1691114923835\\\",\\\"status.workspaceTrust.1691120373923\\\",\\\"status.workspaceTrust.1691140551730\\\",\\\"status.workspaceTrust.1691374605733\\\",\\\"status.workspaceTrust.1691398071933\\\",\\\"status.workspaceTrust.fd22e60671e9eb25ca8799a59f8d1d00\\\",\\\"status.workspaceTrust.1691461812193\\\",\\\"status.workspaceTrust.1691476461193\\\",\\\"status.workspaceTrust.1691482764531\\\",\\\"status.workspaceTrust.b9131faf65db9e7135d216f396a6cc31\\\",\\\"status.workspaceTrust.1691634957189\\\",\\\"status.workspaceTrust.fec5c30415ac6e56df5224ca3ebbbe28\\\",\\\"status.workspaceTrust.1e5ae0adea668c02b22bf151005ffa10\\\",\\\"status.workspaceTrust.6520b5de6cee268f82b76d37fdf65ff8\\\",\\\"status.workspaceTrust.078404e831d4cbe8d10a750d7f112be0\\\",\\\"status.workspaceTrust.868bd59173dd25742f023f30c072461b\\\",\\\"status.workspaceTrust.1692242351679\\\",\\\"status.workspaceTrust.1692263132579\\\",\\\"status.workspaceTrust.f7e2cfeeffd5450255e721184dbc0297\\\",\\\"status.workspaceTrust.418eb0ec559e00cc6172637b07694d92\\\",\\\"status.workspaceTrust.1692343746754\\\",\\\"status.workspaceTrust.13f22b3a791aff7c18747f5f9849d6d7\\\",\\\"status.workspaceTrust.1692414637312\\\",\\\"status.workspaceTrust.44fc7f0aa21d992d214d43757814ce37\\\",\\\"status.workspaceTrust.1692497528410\\\",\\\"status.workspaceTrust.8d0511e359a827a8f8bb7024bce339b3\\\",\\\"status.workspaceTrust.38a78c9d4e781d51f95b02c2df087388\\\",\\\"status.workspaceTrust.20181e0fe0e7b31750b57ed6f631d2a0\\\",\\\"status.workspaceTrust.1692863014945\\\",\\\"status.workspaceTrust.1692865173321\\\",\\\"status.workspaceTrust.1692865245466\\\",\\\"status.workspaceTrust.1692865327028\\\",\\\"status.workspaceTrust.1692865335822\\\",\\\"status.workspaceTrust.1692865360386\\\",\\\"status.workspaceTrust.1692865373949\\\",\\\"status.workspaceTrust.1692865495622\\\",\\\"status.workspaceTrust.1692865512298\\\",\\\"status.workspaceTrust.1692865525034\\\",\\\"status.workspaceTrust.1692867918808\\\",\\\"status.workspaceTrust.1692867932043\\\",\\\"status.workspaceTrust.1692939082176\\\",\\\"status.workspaceTrust.1693991098481\\\",\\\"status.workspaceTrust.2d46d5a24a9e6b3b770b6e9b1165b925\\\",\\\"status.workspaceTrust.203246cf713426cef3b9dabe0d1afb65\\\",\\\"status.workspaceTrust.63b3ae1b32f6a0256a7bb10337814129\\\",\\\"status.workspaceTrust.2d07af9efb923081622e9504a9b73f41\\\",\\\"status.workspaceTrust.2961f5061e6cd46e783cc1a9111ff91e\\\",\\\"status.workspaceTrust.e19266d260e2a2f2d2dd0cfe807eac65\\\",\\\"status.workspaceTrust.ca04871e46eca3465ef4b285123fcb08\\\",\\\"status.workspaceTrust.1696423194788\\\",\\\"status.workspaceTrust.1696423249849\\\",\\\"status.workspaceTrust.1696423379958\\\",\\\"status.workspaceTrust.1696423476970\\\",\\\"status.workspaceTrust.1696555490301\\\",\\\"status.workspaceTrust.0ef08bc0d3b2a5af823be679a111ad7c\\\",\\\"status.workspaceTrust.4d4c4fc30b103f237bc428c09c159c0f\\\",\\\"status.workspaceTrust.4c9018c204868c4c23a5e51f2f694539\\\",\\\"status.workspaceTrust.1696821754504\\\",\\\"status.workspaceTrust.fbf684735ea2970619f3ac60de8d3175\\\",\\\"status.workspaceTrust.689ad339e8f6d6cad66002ac221ae22b\\\",\\\"status.workspaceTrust.1696928688199\\\",\\\"status.workspaceTrust.3ffe11e8b0460b352bb2724ee2ba18f1\\\",\\\"status.workspaceTrust.a88debfda15ae8084ac53268959b91b2\\\",\\\"status.workspaceTrust.fe87634266be552e516616172cc438d4\\\",\\\"status.workspaceTrust.1696933192751\\\",\\\"status.workspaceTrust.e19c75ff7d90776f22746d65192f8935\\\",\\\"status.workspaceTrust.4c1f4d05459a52c59a9880ded5566004\\\",\\\"status.workspaceTrust.cd89d214b3db7bab1f1b5f5f385b4927\\\",\\\"status.workspaceTrust.1697183112289\\\",\\\"status.workspaceTrust.1697421129586\\\",\\\"status.workspaceTrust.f6683afdec4f48c41b9513ad86350f17\\\",\\\"status.workspaceTrust.1697421161981\\\",\\\"status.workspaceTrust.3e859af9ed7c45c2c0e0982813f94480\\\",\\\"status.workspaceTrust.1697525150193\\\",\\\"status.workspaceTrust.96803aa7a4d775150053c1c7b25556dc\\\",\\\"status.workspaceTrust.0ba23a7a1ea0761845cdefe8c62e5b43\\\",\\\"status.workspaceTrust.e75e75fa4ac30082247258b313829475\\\",\\\"status.workspaceTrust.69d03672bd43ba58ba37237bb30afd3e\\\",\\\"status.workspaceTrust.1698127693273\\\",\\\"status.workspaceTrust.6fffb6e58a01c4e656bdf85038b03bd9\\\",\\\"status.workspaceTrust.6bc5187f8fa3615b7d0866db24f04e53\\\",\\\"status.workspaceTrust.c5b8921b564a1ba4085e77040c9ff6f6\\\",\\\"status.workspaceTrust.822834e4803b603135686676877d6006\\\",\\\"status.workspaceTrust.94c41cb3e7761ea4bf31c47220355a5c\\\",\\\"status.workspaceTrust.1698317981581\\\",\\\"status.workspaceTrust.65f3877d6125f4713f4ee0866238ed04\\\",\\\"status.workspaceTrust.720d2a2d489a22bf9a2e2b3299ff81cf\\\",\\\"status.workspaceTrust.99d18c646acd960953852ba3ccfde838\\\",\\\"status.workspaceTrust.25ce34b2edd5f454931cdd903eb9572d\\\",\\\"status.workspaceTrust.b37362dd35225fc740e2e287f0fbaf2a\\\",\\\"status.workspaceTrust.b2729bab6ab9aeb0ddbb9e545e1a8e6f\\\",\\\"status.workspaceTrust.f2ee2722e8a25521780cab2e45ce9bfc\\\",\\\"status.workspaceTrust.a52feb39e36c5f45dc1be76f161aa496\\\",\\\"status.workspaceTrust.1698995073926\\\",\\\"status.workspaceTrust.2809faacf73769831a0d236bd9f77b97\\\",\\\"status.workspaceTrust.97cf2c4a3c373eb284859c8d323622b0\\\",\\\"status.workspaceTrust.9d036ee524e6d0f8c98cb5bc7d8bf8e7\\\",\\\"status.workspaceTrust.fb1a6adafd4b91eee789403d4116d3e3\\\",\\\"status.workspaceTrust.a174490af36491f4bb78e8e63e9ac090\\\",\\\"status.workspaceTrust.83c970fa7ceecd4906560e55c24e0284\\\",\\\"status.workspaceTrust.1699439584784\\\",\\\"status.workspaceTrust.69db53462317d013972e9d23b7fbce10\\\",\\\"status.workspaceTrust.02c492ab45650a72fb87f90b58b57933\\\",\\\"status.workspaceTrust.1700049747765\\\",\\\"status.workspaceTrust.930b0d2e1090936dbd8b8cf1a904d28c\\\",\\\"status.workspaceTrust.a74832f9c9a9951c74300b7baaff0c0a\\\",\\\"status.workspaceTrust.def3fa223f6a62116d13b27b4d64a089\\\",\\\"status.workspaceTrust.d8dc58d75c9389146d953d17ce60e66e\\\",\\\"status.workspaceTrust.e626600176962d6102dfd5ce63a33354\\\",\\\"status.workspaceTrust.1700475364208\\\",\\\"status.workspaceTrust.1700491854913\\\",\\\"status.workspaceTrust.b56ee3816ed294b61a598f985e1e9f3d\\\",\\\"status.workspaceTrust.41808c223a65d4be5e6031489e342ba7\\\",\\\"status.workspaceTrust.1700532677630\\\",\\\"status.workspaceTrust.1700538558027\\\",\\\"status.workspaceTrust.1700636709449\\\",\\\"status.workspaceTrust.4a6902f4fc1eb0a2d4453b8b4c83e4b1\\\",\\\"status.workspaceTrust.58968cb9f4234f9f0ac6d1b84998770e\\\",\\\"status.workspaceTrust.1700800209533\\\",\\\"status.workspaceTrust.a7267d0adede22a3cd9f2af60006398f\\\",\\\"status.workspaceTrust.1701060636554\\\",\\\"status.workspaceTrust.e25aa11ede4d5a1e60a48a01c8733147\\\",\\\"status.workspaceTrust.1701071862229\\\",\\\"status.workspaceTrust.7d29caa095e50e2fa68653da0098a583\\\",\\\"status.workspaceTrust.1701073761711\\\",\\\"status.workspaceTrust.1701074005517\\\",\\\"status.workspaceTrust.1701075050286\\\",\\\"status.workspaceTrust.1701075072720\\\",\\\"status.workspaceTrust.1701075247459\\\",\\\"status.workspaceTrust.1701075712012\\\",\\\"status.workspaceTrust.1701075787432\\\",\\\"status.workspaceTrust.1701075892916\\\",\\\"status.workspaceTrust.1701076266741\\\",\\\"status.workspaceTrust.1701079719364\\\",\\\"status.workspaceTrust.1701079731500\\\",\\\"status.workspaceTrust.1701079750391\\\",\\\"status.workspaceTrust.1701079781108\\\",\\\"status.workspaceTrust.2744acc3f5b9fb79118bd508654aa86a\\\",\\\"status.workspaceTrust.10bcaa5d5dc3f1aff5f3703fec8e788a\\\",\\\"status.workspaceTrust.1701158156550\\\",\\\"status.workspaceTrust.1701162320982\\\",\\\"status.workspaceTrust.1701222751718\\\",\\\"status.workspaceTrust.1701233201265\\\",\\\"status.workspaceTrust.d79cbf01c38cd815b86e2b1b2f29cf6f\\\",\\\"status.workspaceTrust.1701233433860\\\",\\\"status.workspaceTrust.f7a712c5bcb4e1229a26eec6565a7ec2\\\",\\\"status.workspaceTrust.1701234111737\\\",\\\"status.workspaceTrust.bbfeef890d36b9cbae3b7ff81d822aba\\\",\\\"status.workspaceTrust.1701326700057\\\",\\\"status.workspaceTrust.1701401295848\\\",\\\"status.workspaceTrust.ceb5dd82ce202b9ff66fa2dd9be52807\\\",\\\"status.workspaceTrust.1701670996648\\\",\\\"status.workspaceTrust.1701676699133\\\",\\\"status.workspaceTrust.5476bed3cbff395bbd56cc83a568497c\\\",\\\"status.workspaceTrust.fe089bdf7d2a8f0205641ba010bc48e8\\\",\\\"status.workspaceTrust.6b4b8e10ef978f8cb5ee37f80762e83a\\\",\\\"status.workspaceTrust.a516e545f26c4677d478ce27c362dd6a\\\",\\\"status.workspaceTrust.f5b5dd21b70406801d26057af7fbee41\\\",\\\"status.workspaceTrust.a2e1eac4b1b6c59dc6dc672172cb614d\\\",\\\"status.workspaceTrust.d76d7a777d29334fad13e0ebc996b7c3\\\",\\\"status.workspaceTrust.1702033531827\\\",\\\"status.workspaceTrust.1702033562600\\\",\\\"status.workspaceTrust.1702033958227\\\",\\\"status.workspaceTrust.1702033967568\\\",\\\"status.workspaceTrust.1702347360738\\\",\\\"status.workspaceTrust.7c85c96f7b8e08af04db989c0b8b913e\\\",\\\"status.workspaceTrust.2f2579241bf1ff8736b61a0ab1c8b0a6\\\",\\\"status.workspaceTrust.0f0241cee6bdadb7e00f9c033ee7a749\\\",\\\"status.workspaceTrust.946f51f58ea35bc6785feb61e10dc08a\\\",\\\"googlecloudtools.cloudcode\\\",\\\"status.workspaceTrust.1702628551094\\\",\\\"status.workspaceTrust.dd02c9a51c932a9b13d4a8045961ff90\\\",\\\"status.workspaceTrust.1702630926058\\\",\\\"status.workspaceTrust.1702630940770\\\",\\\"status.workspaceTrust.1702630948469\\\",\\\"status.workspaceTrust.8851e2bfe6c653f7de27e314a46b1ad2\\\",\\\"status.workspaceTrust.1fa704b5eabe5f768cb0ad48790b70c4\\\",\\\"status.workspaceTrust.482bf0fbcc90de12ca63d93f17d6c192\\\",\\\"kamikillerto.vscode-colorize\\\",\\\"status.host\\\",\\\"status.workspaceTrust.77289a14613fed02cec2db72fab33b7b\\\",\\\"WallabyJs.console-ninja\\\",\\\"status.workspaceTrust.4264d3b532796ab57c1fc81ff86aca1b\\\",\\\"status.workspaceTrust.1704772989669\\\",\\\"status.workspaceTrust.edc2e5469e7f157784c8fbc2cdceb1d0\\\",\\\"status.workspaceTrust.1704869556958\\\",\\\"status.workspaceTrust.72153c09d963da8225ef413eba923bf8\\\",\\\"status.workspaceTrust.1704959022904\\\",\\\"status.workspaceTrust.01bad478f139faef68f205dc38d0e5e2\\\",\\\"status.workspaceTrust.d9d0aa18d3ee4209721d8fd1cd5d4827\\\",\\\"status.workspaceTrust.1704982377466\\\",\\\"status.workspaceTrust.9366203946b042ee20336da0668db809\\\",\\\"status.workspaceTrust.1a565d8cf2a6c83ba6cf77b1eab8ea77\\\",\\\"status.workspaceTrust.ef516e377969a935cfbcf2ac1963f8ba\\\",\\\"status.workspaceTrust.c473a002aef3096f9cf882a1dd790ec1\\\",\\\"status.workspaceTrust.b7f1f71b8a78301fc8aad37f97d1fa0c\\\",\\\"status.workspaceTrust.c9631666ff9f6f7335044a3ba094138c\\\",\\\"status.workspaceTrust.2a3dce0fd11392313194eb58c662d339\\\",\\\"status.workspaceTrust.1705058521155\\\",\\\"status.workspaceTrust.f4a5a2d887f9d4af0c58e81e0c4b29be\\\",\\\"status.workspaceTrust.1705290895958\\\",\\\"status.workspaceTrust.1705293027185\\\",\\\"status.workspaceTrust.53892d7c5edc832e18da477311d99f52\\\",\\\"status.workspaceTrust.db89e98e92fe57302d1993794bf15cdc\\\",\\\"status.workspaceTrust.1705657467112\\\",\\\"status.workspaceTrust.7d4cd31c117dfba1fa7996b666743270\\\",\\\"status.workspaceTrust.7f4caf97817caeaf4ee259fd1d1f38f3\\\",\\\"status.workspaceTrust.8e3529f9f92c7919782338c687b15574\\\",\\\"status.workspaceTrust.44a9ac3513b93577fe8cf1638bc4d7c4\\\",\\\"status.workspaceTrust.1706085527780\\\",\\\"status.workspaceTrust.02c74be731fbc1708792a2cd786c17ad\\\",\\\"status.workspaceTrust.bc66456c6abba43c5eb51379ad798bc6\\\",\\\"status.workspaceTrust.09f4f1d4d558b18aef0e626ffaf482b6\\\",\\\"status.workspaceTrust.a9f906e06e5b107f5df41c426128ea6e\\\",\\\"status.workspaceTrust.dd1a53d03e3585edb955691b6bba5bed\\\",\\\"status.workspaceTrust.d48360a7e7d59a01efa6c4b17c10d386\\\",\\\"status.workspaceTrust.5212b995779351c6b2bcf134e77553b5\\\",\\\"status.workspaceTrust.1706502257329\\\",\\\"status.workspaceTrust.1706508958908\\\",\\\"status.workspaceTrust.301b3eefbfcb9b95b1915a5e4e75ad75\\\",\\\"status.workspaceTrust.547d5f2330ea3b6936b3a3286cca624d\\\",\\\"status.workspaceTrust.402dbc937e3ab61819b0a45f4e0b990f\\\",\\\"status.workspaceTrust.9b9590d86f30b0e7b0f3dbb8dde73f2a\\\",\\\"status.workspaceTrust.cdd48ced965a2c4034f7cbe7f8fc120c\\\",\\\"status.workspaceTrust.7cc373a2fd0fd92e0db638d2be486a4c\\\",\\\"status.workspaceTrust.1706701029512\\\",\\\"status.workspaceTrust.1706702093417\\\",\\\"status.workspaceTrust.c5a926afd8335a3a3cd572881e76b7d9\\\",\\\"status.workspaceTrust.6610612471e8911c1282b0780a923ad9\\\",\\\"status.workspaceTrust.9d67511213e9b1b711801530d1b87cac\\\",\\\"status.workspaceTrust.c6bc77765f87e4bed526510969c0cc67\\\",\\\"status.workspaceTrust.f4f575eb03ef49f8476dc5c746b6e607\\\",\\\"ritwickdey.LiveServer\\\",\\\"status.editor.eol\\\",\\\"status.editor.encoding\\\",\\\"status.forwardedPorts\\\",\\\"sourcery.sourcery\\\",\\\"WallabyJs.quokka-vscode\\\",\\\"streetsidesoftware.code-spell-checker.spell checker status id\\\",\\\"status.notifications\\\",\\\"status.scm.1\\\",\\\"status.workspaceTrust.f858b96ef9e9d75959b5cf716921f1fd\\\",\\\"status.workspaceTrust.96963c028b21e62b0b26ebf54438d7d5\\\",\\\"status.workspaceTrust.36c872ec8712ba0a4cd5ff8d6d0e6d53\\\",\\\"status.workspaceTrust.1ab3e3fcceb60234f2c03780b2fa35fc\\\",\\\"status.workspaceTrust.af5ec092902bf4fcc6259324d3e476c8\\\",\\\"status.workspaceTrust.6e1fd74af9d90be95ae6688d5cda5cf9\\\",\\\"status.workspaceTrust.1686b27f59c632d460cdb74e4bc2f1f2\\\",\\\"status.workspaceTrust.65a167cc329bb5b51fd099b5b0d5dbcf\\\",\\\"status.workspaceTrust.1124ffe62f0ea3979262575aa69dddf9\\\",\\\"status.workspaceTrust.afb78c8a5e73404b5991f095d0677d41\\\",\\\"status.workspaceTrust.ee938d5019000241d7eb484a56676430\\\",\\\"status.workspaceTrust.1707992893599\\\",\\\"status.workspaceTrust.fbb0c2edb5b3a72c7ce8743e3545d089\\\",\\\"status.workspaceTrust.ffc35439f89a19806ed38d7da807e0d1\\\",\\\"status.workspaceTrust.7f82e3df4740d3c2a21566eeeb37bb21\\\",\\\"status.workspaceTrust.1708399270487\\\",\\\"status.workspaceTrust.7823bddb1dbc7a8fdcd3f7e747a6f2f6\\\",\\\"status.workspaceTrust.c5af3a96195d7deb8bc6e14dd956dc78\\\",\\\"status.workspaceTrust.9478185f18f6783cb0dd5aed741ef0b0\\\",\\\"status.workspaceTrust.bf721bd1de60640a8550905d0578ee39\\\",\\\"status.workspaceTrust.1708791200128\\\",\\\"status.workspaceTrust.1708795950383\\\",\\\"status.workspaceTrust.cfef53170ecf5eccd52e77028d3edcf7\\\",\\\"status.workspaceTrust.683dbe0ab92e9974391ad2bdc0d1aaf4\\\",\\\"status.workspaceTrust.6da47466cbddc146e35603d62e0d21cb\\\",\\\"status.workspaceTrust.418c1280a2d92e493543e938ed8d6672\\\",\\\"status.workspaceTrust.5e7cc586835ca7f08261f97b7ead0db6\\\",\\\"status.workspaceTrust.fd51551f70769c898f6b07feeb215bf8\\\",\\\"status.workspaceTrust.6b6d81dad8e0d8b3149016d7b32baa18\\\",\\\"status.workspaceTrust.792431ced324cdd1494fbd215ff11ad7\\\",\\\"status.workspaceTrust.5da9eeacd15d0ffbc6c45f093c79f6f4\\\",\\\"status.workspaceTrust.3000d715393adcae7397a877c488057d\\\",\\\"status.workspaceTrust.1709980741178\\\",\\\"status.workspaceTrust.a30a27f330bd0d241b2e127b5b19e77b\\\",\\\"status.workspaceTrust.9ca8e2625fa7530a35b0e44d836f9250\\\",\\\"status.workspaceTrust.6c998dfd0186054327edcaa7a87bc1b3\\\",\\\"status.workspaceTrust.51b7325a0553458221d39579f06b0b79\\\",\\\"status.workspaceTrust.5222d93bb653088e972b710072ac447b\\\",\\\"status.workspaceTrust.64b7037d4252559f1128f02de4f3a80a\\\",\\\"status.workspaceTrust.6d47104244c5028e027925f1dbde46f4\\\",\\\"status.workspaceTrust.c0b70699d3298a7489696b240d7ac70a\\\",\\\"status.workspaceTrust.a625e158129ce131919f39cf7f9df248\\\",\\\"status.workspaceTrust.ec451ad940db9a4210f69c696c8e1080\\\",\\\"status.workspaceTrust.9dfde64f17c41086dbde1749771953fb\\\",\\\"status.workspaceTrust.615dfaf594c0fed86535c7a93503c32f\\\",\\\"status.workspaceTrust.7e04d7141111d74e2e672acdb85f5b06\\\",\\\"status.workspaceTrust.2eb8232c59f12b5593ff746c09cb5a4c\\\",\\\"GitHub.copilot.status\\\"]\",\"colorThemeData\":\"{\\\"id\\\":\\\"vs-dark HarveyWang-monokai-lite-themes-without_underline-json\\\",\\\"label\\\":\\\"Monokai Lite without underline\\\",\\\"settingsId\\\":\\\"Monokai Lite without underline\\\",\\\"themeTokenColors\\\":[{\\\"settings\\\":{\\\"foreground\\\":\\\"#F8F8F2\\\"}},{\\\"settings\\\":{\\\"foreground\\\":\\\"#F8F8F2\\\"},\\\"scope\\\":[\\\"meta.embedded\\\",\\\"source.groovy.embedded\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#88846f\\\"},\\\"scope\\\":\\\"comment\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#E6DB74\\\"},\\\"scope\\\":\\\"string\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#F92672\\\"},\\\"scope\\\":[\\\"punctuation.definition.template-expression\\\",\\\"punctuation.section.embedded\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#F8F8F2\\\"},\\\"scope\\\":[\\\"meta.template.expression\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#AE81FF\\\"},\\\"scope\\\":\\\"constant.numeric\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#AE81FF\\\"},\\\"scope\\\":\\\"constant.language\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#AE81FF\\\"},\\\"scope\\\":\\\"constant.character, constant.other\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#F8F8F2\\\"},\\\"scope\\\":\\\"variable\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#F92672\\\"},\\\"scope\\\":\\\"keyword\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#F92672\\\"},\\\"scope\\\":\\\"storage\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"italic\\\",\\\"foreground\\\":\\\"#66D9EF\\\"},\\\"scope\\\":\\\"storage.type\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#A6E22E\\\"},\\\"scope\\\":\\\"entity.name.function\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"italic\\\",\\\"foreground\\\":\\\"#FD971F\\\"},\\\"scope\\\":\\\"variable.parameter\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#F92672\\\"},\\\"scope\\\":\\\"entity.name.tag\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#A6E22E\\\"},\\\"scope\\\":\\\"entity.other.attribute-name\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#66D9EF\\\"},\\\"scope\\\":\\\"support.function\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#66D9EF\\\"},\\\"scope\\\":\\\"support.constant\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"italic\\\",\\\"foreground\\\":\\\"#66D9EF\\\"},\\\"scope\\\":\\\"support.type, support.class\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\"},\\\"scope\\\":\\\"support.other.variable\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#F44747\\\"},\\\"scope\\\":\\\"invalid\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#F44747\\\"},\\\"scope\\\":\\\"invalid.deprecated\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#CFCFC2\\\"},\\\"scope\\\":\\\"meta.structure.dictionary.json string.quoted.double.json\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#75715E\\\"},\\\"scope\\\":\\\"meta.diff, meta.diff.header\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#F92672\\\"},\\\"scope\\\":\\\"markup.deleted\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#A6E22E\\\"},\\\"scope\\\":\\\"markup.inserted\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#E6DB74\\\"},\\\"scope\\\":\\\"markup.changed\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#AE81FFA0\\\"},\\\"scope\\\":\\\"constant.numeric.line-number.find-in-files - match\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#E6DB74\\\"},\\\"scope\\\":\\\"entity.name.filename.find-in-files\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#F92672\\\"},\\\"scope\\\":\\\"markup.quote\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#E6DB74\\\"},\\\"scope\\\":\\\"markup.list\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#66D9EF\\\"},\\\"scope\\\":\\\"markup.bold, markup.italic\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#FD971F\\\"},\\\"scope\\\":\\\"markup.inline.raw\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#A6E22E\\\"},\\\"scope\\\":\\\"markup.heading\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#A6E22E\\\",\\\"fontStyle\\\":\\\"bold\\\"},\\\"scope\\\":\\\"markup.heading.setext\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"bold\\\"},\\\"scope\\\":\\\"markup.heading.markdown\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"italic\\\",\\\"foreground\\\":\\\"#75715E\\\"},\\\"scope\\\":\\\"markup.quote.markdown\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"bold\\\"},\\\"scope\\\":\\\"markup.bold.markdown\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#AE81FF\\\"},\\\"scope\\\":\\\"string.other.link.title.markdown,string.other.link.description.markdown\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"italic\\\"},\\\"scope\\\":\\\"markup.italic.markdown\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#f8f8f2\\\"},\\\"scope\\\":\\\"markup.list.unnumbered.markdown, markup.list.numbered.markdown\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#A6E22E\\\"},\\\"scope\\\":[\\\"punctuation.definition.list.begin.markdown\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#6796e6\\\"},\\\"scope\\\":\\\"token.info-token\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#cd9731\\\"},\\\"scope\\\":\\\"token.warn-token\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#f44747\\\"},\\\"scope\\\":\\\"token.error-token\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#b267e6\\\"},\\\"scope\\\":\\\"token.debug-token\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#FD971F\\\"},\\\"scope\\\":\\\"variable.language\\\"}],\\\"semanticTokenRules\\\":[],\\\"extensionData\\\":{\\\"_extensionId\\\":\\\"HarveyWang.monokai-lite\\\",\\\"_extensionIsBuiltin\\\":false,\\\"_extensionName\\\":\\\"monokai-lite\\\",\\\"_extensionPublisher\\\":\\\"HarveyWang\\\"},\\\"themeSemanticHighlighting\\\":true,\\\"colorMap\\\":{\\\"dropdown.background\\\":\\\"#414339\\\",\\\"list.activeSelectionBackground\\\":\\\"#75715e\\\",\\\"list.focusBackground\\\":\\\"#414339\\\",\\\"dropdown.listBackground\\\":\\\"#1e1f1c\\\",\\\"list.inactiveSelectionBackground\\\":\\\"#414339\\\",\\\"list.hoverBackground\\\":\\\"#3e3d32\\\",\\\"list.dropBackground\\\":\\\"#414339\\\",\\\"list.highlightForeground\\\":\\\"#f8f8f2\\\",\\\"button.background\\\":\\\"#75715e\\\",\\\"editor.background\\\":\\\"#272822\\\",\\\"editor.foreground\\\":\\\"#f8f8f2\\\",\\\"selection.background\\\":\\\"#ccccc7\\\",\\\"editor.selectionHighlightBackground\\\":\\\"#575b6180\\\",\\\"editor.selectionBackground\\\":\\\"#878b9180\\\",\\\"minimap.selectionHighlight\\\":\\\"#878b9180\\\",\\\"editor.wordHighlightBackground\\\":\\\"#4a4a7680\\\",\\\"editor.wordHighlightStrongBackground\\\":\\\"#6a6a9680\\\",\\\"editor.lineHighlightBackground\\\":\\\"#3e3d32\\\",\\\"editorLineNumber.activeForeground\\\":\\\"#c2c2bf\\\",\\\"editorCursor.foreground\\\":\\\"#f8f8f0\\\",\\\"editorWhitespace.foreground\\\":\\\"#464741\\\",\\\"editorIndentGuide.background\\\":\\\"#464741\\\",\\\"editorIndentGuide.activeBackground\\\":\\\"#767771\\\",\\\"editorGroupHeader.tabsBackground\\\":\\\"#1e1f1c\\\",\\\"editorGroup.dropBackground\\\":\\\"#41433980\\\",\\\"tab.inactiveBackground\\\":\\\"#34352f\\\",\\\"tab.border\\\":\\\"#1e1f1c\\\",\\\"tab.inactiveForeground\\\":\\\"#ccccc7\\\",\\\"tab.lastPinnedBorder\\\":\\\"#414339\\\",\\\"widget.shadow\\\":\\\"#00000098\\\",\\\"progressBar.background\\\":\\\"#75715e\\\",\\\"badge.background\\\":\\\"#75715e\\\",\\\"badge.foreground\\\":\\\"#f8f8f2\\\",\\\"editorLineNumber.foreground\\\":\\\"#90908a\\\",\\\"panelTitle.activeForeground\\\":\\\"#f8f8f2\\\",\\\"panelTitle.activeBorder\\\":\\\"#75715e\\\",\\\"panelTitle.inactiveForeground\\\":\\\"#75715e\\\",\\\"panel.border\\\":\\\"#414339\\\",\\\"settings.focusedRowBackground\\\":\\\"#4143395a\\\",\\\"titleBar.activeBackground\\\":\\\"#1e1f1c\\\",\\\"statusBar.background\\\":\\\"#414339\\\",\\\"statusBar.noFolderBackground\\\":\\\"#414339\\\",\\\"statusBar.debuggingBackground\\\":\\\"#75715e\\\",\\\"statusBarItem.remoteBackground\\\":\\\"#ac6218\\\",\\\"activityBar.background\\\":\\\"#272822\\\",\\\"activityBar.foreground\\\":\\\"#f8f8f2\\\",\\\"sideBar.background\\\":\\\"#1e1f1c\\\",\\\"sideBarSectionHeader.background\\\":\\\"#272822\\\",\\\"menu.background\\\":\\\"#1e1f1c\\\",\\\"menu.foreground\\\":\\\"#cccccc\\\",\\\"pickerGroup.foreground\\\":\\\"#75715e\\\",\\\"input.background\\\":\\\"#414339\\\",\\\"inputOption.activeBorder\\\":\\\"#75715e\\\",\\\"focusBorder\\\":\\\"#75715e\\\",\\\"editorWidget.background\\\":\\\"#1e1f1c\\\",\\\"debugToolBar.background\\\":\\\"#1e1f1c\\\",\\\"diffEditor.insertedTextBackground\\\":\\\"#4b661680\\\",\\\"diffEditor.removedTextBackground\\\":\\\"#90274a70\\\",\\\"inputValidation.errorBackground\\\":\\\"#90274a\\\",\\\"inputValidation.errorBorder\\\":\\\"#f92672\\\",\\\"inputValidation.warningBackground\\\":\\\"#848528\\\",\\\"inputValidation.warningBorder\\\":\\\"#e2e22e\\\",\\\"inputValidation.infoBackground\\\":\\\"#546190\\\",\\\"inputValidation.infoBorder\\\":\\\"#819aff\\\",\\\"editorHoverWidget.background\\\":\\\"#414339\\\",\\\"editorHoverWidget.border\\\":\\\"#75715e\\\",\\\"editorSuggestWidget.background\\\":\\\"#272822\\\",\\\"editorSuggestWidget.border\\\":\\\"#75715e\\\",\\\"editorGroup.border\\\":\\\"#34352f\\\",\\\"peekView.border\\\":\\\"#75715e\\\",\\\"peekViewEditor.background\\\":\\\"#272822\\\",\\\"peekViewResult.background\\\":\\\"#1e1f1c\\\",\\\"peekViewTitle.background\\\":\\\"#1e1f1c\\\",\\\"peekViewResult.selectionBackground\\\":\\\"#414339\\\",\\\"peekViewResult.matchHighlightBackground\\\":\\\"#75715e\\\",\\\"peekViewEditor.matchHighlightBackground\\\":\\\"#75715e\\\",\\\"terminal.ansiBlack\\\":\\\"#333333\\\",\\\"terminal.ansiRed\\\":\\\"#c4265e\\\",\\\"terminal.ansiGreen\\\":\\\"#86b42b\\\",\\\"terminal.ansiYellow\\\":\\\"#b3b42b\\\",\\\"terminal.ansiBlue\\\":\\\"#6a7ec8\\\",\\\"terminal.ansiMagenta\\\":\\\"#8c6bc8\\\",\\\"terminal.ansiCyan\\\":\\\"#56adbc\\\",\\\"terminal.ansiWhite\\\":\\\"#e3e3dd\\\",\\\"terminal.ansiBrightBlack\\\":\\\"#666666\\\",\\\"terminal.ansiBrightRed\\\":\\\"#f92672\\\",\\\"terminal.ansiBrightGreen\\\":\\\"#a6e22e\\\",\\\"terminal.ansiBrightYellow\\\":\\\"#e2e22e\\\",\\\"terminal.ansiBrightBlue\\\":\\\"#819aff\\\",\\\"terminal.ansiBrightMagenta\\\":\\\"#ae81ff\\\",\\\"terminal.ansiBrightCyan\\\":\\\"#66d9ef\\\",\\\"terminal.ansiBrightWhite\\\":\\\"#f8f8f2\\\"},\\\"watch\\\":false}\",\"workbench.welcomePage.walkthroughMetadata\":\"[[\\\"ms-azuretools.vscode-docker#dockerStart\\\",{\\\"firstSeen\\\":1730508535657,\\\"stepIDs\\\":[\\\"openFolder\\\",\\\"openFolderMac\\\",\\\"scaffold\\\",\\\"buildImage\\\",\\\"runContainer\\\",\\\"dockerExplorer\\\",\\\"pushImage\\\",\\\"azDeploy\\\",\\\"learn\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-python.python#pythonWelcome\\\",{\\\"firstSeen\\\":1730508535657,\\\"stepIDs\\\":[\\\"python.createPythonFolder\\\",\\\"python.createPythonFile\\\",\\\"python.installPythonWin8\\\",\\\"python.installPythonMac\\\",\\\"python.installPythonLinux\\\",\\\"python.createEnvironment\\\",\\\"python.runAndDebug\\\",\\\"python.learnMoreWithDS\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-python.python#pythonDataScienceWelcome\\\",{\\\"firstSeen\\\":1730508535657,\\\"stepIDs\\\":[\\\"python.installJupyterExt\\\",\\\"python.createNewNotebook\\\",\\\"python.openInteractiveWindow\\\",\\\"python.dataScienceLearnMore\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-vscode.cpptools#cppWelcome\\\",{\\\"firstSeen\\\":1730508535657,\\\"stepIDs\\\":[\\\"awaiting.activation.mac\\\",\\\"awaiting.activation.linux\\\",\\\"awaiting.activation.windows\\\",\\\"awaiting.activation.windows10\\\",\\\"awaiting.activation.windows11\\\",\\\"no.compilers.found.mac\\\",\\\"no.compilers.found.linux\\\",\\\"no.compilers.found.windows\\\",\\\"no.compilers.found.windows10\\\",\\\"no.compilers.found.windows11\\\",\\\"verify.compiler.mac\\\",\\\"verify.compiler.linux\\\",\\\"verify.compiler.windows\\\",\\\"verify.compiler.windows10\\\",\\\"verify.compiler.windows11\\\",\\\"create.cpp.file\\\",\\\"relaunch.developer.command.prompt.windows\\\",\\\"run.project.mac\\\",\\\"run.project.linux\\\",\\\"run.project.windows\\\",\\\"customize.debugging.linux\\\",\\\"customize.debugging.windows\\\",\\\"customize.debugging.mac\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-vscode.remote-repositories#remoteRepositoriesWalkthrough\\\",{\\\"firstSeen\\\":1730508535657,\\\"stepIDs\\\":[\\\"editCommitRepo\\\",\\\"createGitHubPullRequest\\\",\\\"continueOn\\\",\\\"openRepo\\\",\\\"remoteIndicator\\\"],\\\"manaullyOpened\\\":false}],[\\\"sourcery.sourcery#sourcery.walkthrough\\\",{\\\"firstSeen\\\":1730508535657,\\\"stepIDs\\\":[\\\"sourcery.login\\\",\\\"sourcery.openWelcomeFile\\\",\\\"sourcery.acceptRecommendation\\\",\\\"sourcery.githubCodeReviews\\\",\\\"sourcery.configuration\\\"],\\\"manaullyOpened\\\":false}],[\\\"Tyriar.luna-paint#welcome\\\",{\\\"firstSeen\\\":1730508535657,\\\"stepIDs\\\":[\\\"luna.interfaceOverview\\\",\\\"luna.pencilTool\\\",\\\"luna.selectionTools\\\",\\\"luna.cropTool\\\",\\\"luna.lineTool\\\",\\\"luna.colorPickerTool\\\",\\\"luna.rectangleTool\\\",\\\"luna.viewportTools\\\",\\\"luna.shapeTool\\\",\\\"luna.textTool\\\",\\\"luna.colorsWindow\\\",\\\"luna.inspectFileImage\\\"],\\\"manaullyOpened\\\":false}]]\",\"workbench.panel.repl.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.repl.view\\\",\\\"isHidden\\\":false}]\",\"workbench.panel.pinnedPanels\":\"[{\\\"id\\\":\\\"workbench.panel.testResults\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":3},{\\\"id\\\":\\\"~remote.forwardedPortsContainer\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":5},{\\\"id\\\":\\\"workbench.view.extension.playwrightContainer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":6},{\\\"id\\\":\\\"workbench.view.extension.quokka-output\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":7},{\\\"id\\\":\\\"workbench.view.extension.copilot-message-panel\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":6},{\\\"id\\\":\\\"workbench.view.extension.gitlensPanel\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":6},{\\\"id\\\":\\\"workbench.view.extension.jupyter-variables\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":6},{\\\"id\\\":\\\"workbench.view.extension.sqltoolsPanelContainer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":8},{\\\"id\\\":\\\"workbench.panel.comments\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":10},{\\\"id\\\":\\\"refactorPreview\\\",\\\"pinned\\\":true,\\\"visible\\\":false}]\",\"workbench.panel.alignment\":\"center\",\"workbench.view.extension.dockerView.state.hidden\":\"[{\\\"id\\\":\\\"dockerContainers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dockerImages\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dockerRegistries\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dockerNetworks\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dockerVolumes\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"vscode-docker.views.dockerContexts\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"vscode-docker.views.help\\\",\\\"isHidden\\\":true}]\",\"workbench.view.remote.state.hidden\":\"[{\\\"id\\\":\\\"targetsContainers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"detailsContainers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"devVolumes\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"remoteTargets\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"remoteHub.views.workspaceRepositories\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"~remote.helpPanel\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.MutableAI-explorer.state.hidden\":\"[{\\\"id\\\":\\\"MutableAI-primary\\\",\\\"isHidden\\\":false}]\",\"commandPalette.mru.cache\":\"{\\\"usesLRU\\\":true,\\\"entries\\\":[{\\\"key\\\":\\\"workbench.action.selectTheme\\\",\\\"value\\\":92},{\\\"key\\\":\\\"workbench.action.reopenTextEditor\\\",\\\"value\\\":93},{\\\"key\\\":\\\"workbench.action.toggleZenMode\\\",\\\"value\\\":104},{\\\"key\\\":\\\"headwind.sortTailwindClasses\\\",\\\"value\\\":110},{\\\"key\\\":\\\"tailwindCSS.sortSelection\\\",\\\"value\\\":125},{\\\"key\\\":\\\"luna.tool.crop\\\",\\\"value\\\":126},{\\\"key\\\":\\\"markmap-vscode.open\\\",\\\"value\\\":133},{\\\"key\\\":\\\"corker.micromamba.activate.environment.by.path\\\",\\\"value\\\":137},{\\\"key\\\":\\\"editor.action.transformToUppercase\\\",\\\"value\\\":158},{\\\"key\\\":\\\"editor.action.transformToCamelcase\\\",\\\"value\\\":159},{\\\"key\\\":\\\"editor.action.transformToKebabcase\\\",\\\"value\\\":160},{\\\"key\\\":\\\"editor.action.transpose\\\",\\\"value\\\":161},{\\\"key\\\":\\\"editor.action.transformToTitlecase\\\",\\\"value\\\":162},{\\\"key\\\":\\\"opensshremotes.openEmptyWindow\\\",\\\"value\\\":164},{\\\"key\\\":\\\"workbench.action.terminal.changeIcon\\\",\\\"value\\\":169},{\\\"key\\\":\\\"workbench.action.selectIconTheme\\\",\\\"value\\\":172},{\\\"key\\\":\\\"github-actions.workflows.focus\\\",\\\"value\\\":176},{\\\"key\\\":\\\"editor.action.transformToLowercase\\\",\\\"value\\\":183},{\\\"key\\\":\\\"extension.colorHelper.pick\\\",\\\"value\\\":423},{\\\"key\\\":\\\"pick-color\\\",\\\"value\\\":424},{\\\"key\\\":\\\"extension.updateCustomCSS\\\",\\\"value\\\":471},{\\\"key\\\":\\\"workbench.profiles.actions.exportProfile\\\",\\\"value\\\":483},{\\\"key\\\":\\\"whichkey.show\\\",\\\"value\\\":486},{\\\"key\\\":\\\"editor.action.indentUsingSpaces\\\",\\\"value\\\":487},{\\\"key\\\":\\\"luna.image.rotate180\\\",\\\"value\\\":488},{\\\"key\\\":\\\"editor.action.formatDocument.none\\\",\\\"value\\\":492},{\\\"key\\\":\\\"editor.action.formatDocument\\\",\\\"value\\\":494},{\\\"key\\\":\\\"workbench.action.openApplicationSettingsJson\\\",\\\"value\\\":513},{\\\"key\\\":\\\"csv.refresh\\\",\\\"value\\\":522},{\\\"key\\\":\\\"editor.action.insertSnippet\\\",\\\"value\\\":527},{\\\"key\\\":\\\"workbench.profiles.actions.importProfile\\\",\\\"value\\\":540},{\\\"key\\\":\\\"editor.action.changeTabDisplaySize\\\",\\\"value\\\":545},{\\\"key\\\":\\\"workbench.profiles.actions.switchProfile\\\",\\\"value\\\":553},{\\\"key\\\":\\\"workbench.debug.viewlet.action.addFunctionBreakpointAction\\\",\\\"value\\\":557},{\\\"key\\\":\\\"apc.extension.enable\\\",\\\"value\\\":574},{\\\"key\\\":\\\"workbench.action.openSettings2\\\",\\\"value\\\":585},{\\\"key\\\":\\\"background.changelog\\\",\\\"value\\\":587},{\\\"key\\\":\\\"background.config\\\",\\\"value\\\":590},{\\\"key\\\":\\\"C_Cpp.AddDebugConfiguration\\\",\\\"value\\\":593},{\\\"key\\\":\\\"C_Cpp.ConfigurationEditJSON\\\",\\\"value\\\":596},{\\\"key\\\":\\\"extension.liveServer.goOnline\\\",\\\"value\\\":597},{\\\"key\\\":\\\"workbench.action.keybindingsReference\\\",\\\"value\\\":607},{\\\"key\\\":\\\"workbench.action.openGlobalKeybindingsFile\\\",\\\"value\\\":608},{\\\"key\\\":\\\"workbench.action.openGlobalKeybindings\\\",\\\"value\\\":609},{\\\"key\\\":\\\"python.setInterpreter\\\",\\\"value\\\":612},{\\\"key\\\":\\\"workbench.action.openSettingsJson\\\",\\\"value\\\":615},{\\\"key\\\":\\\"snippet-generator.generate-snippet\\\",\\\"value\\\":616},{\\\"key\\\":\\\"workbench.action.openSnippets\\\",\\\"value\\\":617},{\\\"key\\\":\\\"update.installUpdate\\\",\\\"value\\\":623},{\\\"key\\\":\\\"workbench.action.reloadWindow\\\",\\\"value\\\":625}]}\",\"commandPalette.mru.counter\":\"626\",\"workbench.view.extensions.state.hidden\":\"[{\\\"id\\\":\\\"workbench.views.extensions.installed\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.views.extensions.searchOutdated\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.workspaceRecommendations\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.popular\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchRecentlyUpdated\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.otherRecommendations\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"extensions.recommendedList\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.views.extensions.enabled\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.views.extensions.disabled\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.views.extensions.marketplace\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchInstalled\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchEnabled\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchDisabled\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchBuiltin\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchWorkspaceUnsupported\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.builtinFeatureExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.builtinThemeExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.builtinProgrammingLanguageExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.untrustedUnsupportedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.untrustedPartiallySupportedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.virtualUnsupportedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.virtualPartiallySupportedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.deprecatedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.local.installed\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.remote.installed\\\",\\\"isHidden\\\":false}]\",\"http.linkProtectionTrustedDomains\":\"[\\\"*\\\"]\",\"workbench.view.extension.mongoDB.state.hidden\":\"[{\\\"id\\\":\\\"mongoDBConnectionExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"mongoDBPlaygroundsExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"mongoDBHelpExplorer\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.jupyter.state.hidden\":\"[{\\\"id\\\":\\\"cell-tag\\\",\\\"isHidden\\\":false}]\",\"memento/gettingStartedService\":\"{\\\"commandPaletteTask\\\":{\\\"done\\\":true},\\\"commandPaletteTaskWeb\\\":{\\\"done\\\":true},\\\"commandPaletteTaskAccessibility\\\":{\\\"done\\\":true},\\\"installGit\\\":{\\\"done\\\":true},\\\"pickColorTheme\\\":{\\\"done\\\":true},\\\"pickColorThemeWeb\\\":{\\\"done\\\":true},\\\"pickAFolderTask-Other\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcome#python.createPythonFolder\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonDataScienceWelcome#python.createNewNotebook\\\":{\\\"done\\\":true},\\\"ms-azuretools.vscode-docker#dockerStart#openFolder\\\":{\\\"done\\\":true}}\",\"workbench.view.extension.test.state.hidden\":\"[{\\\"id\\\":\\\"workbench.view.testing\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.view.testCoverage\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"go.test.profile\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"pw.extension.settingsView\\\",\\\"isHidden\\\":false}]\",\"~remote.forwardedPortsContainer.hidden\":\"[{\\\"id\\\":\\\"~remote.forwardedPorts\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.gitlens.state.hidden\":\"[{\\\"id\\\":\\\"gitlens.views.home\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.gitlensPanel.state.hidden\":\"[{\\\"id\\\":\\\"gitlens.views.timeline\\\",\\\"isHidden\\\":false}]\",\"ces/skipSurvey\":\"1.74.3\",\"workbench.auxiliarybar.pinnedPanels\":\"[{\\\"id\\\":\\\"workbench.panel.chatEditing\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":101},{\\\"id\\\":\\\"workbench.panel.chat\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":100},{\\\"id\\\":\\\"workbench.views.service.auxiliarybar.7395bdfb-b284-47b9-8de5-60a9cac790c0\\\",\\\"pinned\\\":true,\\\"visible\\\":true}]\",\"workbench.views.service.auxiliarybar.7395bdfb-b284-47b9-8de5-60a9cac790c0.state.hidden\":\"[{\\\"id\\\":\\\"outline\\\",\\\"isHidden\\\":false}]\",\"views.customizations\":\"{\\\"viewContainerLocations\\\":{\\\"workbench.views.service.auxiliarybar.7395bdfb-b284-47b9-8de5-60a9cac790c0\\\":2,\\\"terminal\\\":0,\\\"workbench.panel.output\\\":0,\\\"workbench.panel.repl\\\":0,\\\"workbench.panel.markers\\\":0,\\\"workbench.views.service.sidebar.b1e8f71f-9b01-416e-b0ad-4cd458cf8156\\\":0},\\\"viewLocations\\\":{\\\"outline\\\":\\\"workbench.views.service.auxiliarybar.7395bdfb-b284-47b9-8de5-60a9cac790c0\\\",\\\"timeline\\\":\\\"workbench.views.service.sidebar.b1e8f71f-9b01-416e-b0ad-4cd458cf8156\\\"},\\\"viewContainerBadgeEnablementStates\\\":{}}\",\"cpp.1.lastSessionDate\":\"Thu Feb 09 2023\",\"cpp.1.sessionCount\":\"7\",\"java.2.lastSessionDate\":\"Thu Feb 09 2023\",\"java.2.sessionCount\":\"7\",\"javascript.1.lastSessionDate\":\"Thu Feb 09 2023\",\"javascript.1.sessionCount\":\"7\",\"typescript.1.lastSessionDate\":\"Thu Feb 09 2023\",\"typescript.1.sessionCount\":\"7\",\"snippets.usageTimestamps\":\"[[\\\"lmqzzz.code-snippets/lichaotree_t\\\",1715827572446],[\\\"lmqzzz.code-snippets/lichaotree\\\",1715827688450],[\\\"lmqzzz.code-snippets/twosat_t\\\",1715829175891],[\\\"lmqzzz.code-snippets/ntt\\\",1726082982870],[\\\"lmqzzz.code-snippets/AhoCorasick\\\",1730531034407],[\\\"lmqzzz.code-snippets/ScalingDinic\\\",1731609289828],[\\\"lmqzzz.code-snippets/maximummatching_t\\\",1731609772704],[\\\"lmqzzz.code-snippets/dynamic_bitset\\\",1731610557045],[\\\"lmqzzz.code-snippets/FFT64\\\",1731610776038],[\\\"lmqzzz.code-snippets/manacher\\\",1732778863347],[\\\"lmqzzz.code-snippets/twosat\\\",1732870466553],[\\\"lmqzzz.code-snippets/ordered_set\\\",1733059774812],[\\\"lmqzzz.code-snippets/checker\\\",1733832979254],[\\\"lmqzzz.code-snippets/rmq\\\",1734623114176],[\\\"lmqzzz.code-snippets/matrix_t\\\",1738252114813],[\\\"lmqzzz.code-snippets/geometry\\\",1739063953648],[\\\"lmqzzz.code-snippets/eratosthenes\\\",1739113660774],[\\\"lmqzzz.code-snippets/template1\\\",1740412698438],[\\\"lmqzzz.code-snippets/SuffixArray\\\",1741864901222],[\\\"lmqzzz.code-snippets/primitive root\\\",1742460542362],[\\\"lmqzzz.code-snippets/NTT\\\",1743677334024],[\\\"lmqzzz.code-snippets/combinatorics\\\",1744198807200],[\\\"lmqzzz.code-snippets/int128_t\\\",1744604776709],[\\\"lmqzzz.code-snippets/y_combinator\\\",1745244600396],[\\\"lmqzzz.code-snippets/bigint\\\",1746118447657],[\\\"lmqzzz.code-snippets/dsu_t\\\",1746422150837],[\\\"lmqzzz.code-snippets/lazysegtree\\\",1746458097664],[\\\"lmqzzz.code-snippets/lca\\\",1746458148369],[\\\"lmqzzz.code-snippets/segtree_atcoder \\\",1746458346280],[\\\"lmqzzz.code-snippets/trieString\\\",1746619997197],[\\\"lmqzzz.code-snippets/segtree_t\\\",1746880625350],[\\\"lmqzzz.code-snippets/Mint\\\",1746882454109],[\\\"lmqzzz.code-snippets/fenwick_t\\\",1746975427851],[\\\"lmqzzz.code-snippets/_lmqzzz\\\",1747570674093]]\",\"remote.explorerType\":\"tunnel,ssh-remote\",\"workbench.view.extension.jupyter-variables.state.hidden\":\"[{\\\"id\\\":\\\"jupyterViewVariables\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cell-tag\\\",\\\"isHidden\\\":false}]\",\"memento/notebookGettingStarted2\":\"{\\\"hasOpenedNotebook\\\":true}\",\"workbench.view.extension.project-manager.state.hidden\":\"[{\\\"id\\\":\\\"projectsExplorerFavorites\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"projectsExplorerGit\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"projectsExplorerSVN\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"projectsExplorerAny\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"projectsExplorerMercurial\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"projectsExplorerVSCode\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"projectManagerHelpAndFeedback\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.genuitec-codetogether-presence.state.hidden\":\"[{\\\"id\\\":\\\"com.genuitec.codetogether.presence.treeview\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"ct-presence\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"com.genuitec.codetogether.team.treeview\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.github-pull-requests.state.hidden\":\"[{\\\"id\\\":\\\"github:login\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"pr:github\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"issues:github\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.sqltoolsActivityBarContainer.state.hidden\":\"[{\\\"id\\\":\\\"sqltoolsViewConnectionExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sqltoolsViewBookmarksExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sqltoolsViewHistoryExplorer\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.sqltoolsPanelContainer.state.hidden\":\"[{\\\"id\\\":\\\"sqltoolsViewConsoleMessages\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.SonarLint.state.hidden\":\"[{\\\"id\\\":\\\"SonarLint.AllRules\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"SonarLint.ConnectedMode\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"SonarLint.SecurityHotspots\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.json-views.state.hidden\":\"[{\\\"id\\\":\\\"jsonOutline\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.workspaceViewer.state.hidden\":\"[{\\\"id\\\":\\\"workspaceViewer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"rHelpPages\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"rLiveShare\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.github-pull-request.state.hidden\":\"[{\\\"id\\\":\\\"github:createPullRequest\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github:compareChanges\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"prStatus:github\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github:activePullRequest\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github:activePullRequest:welcome\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.cmake__viewContainer.state.hidden\":\"[{\\\"id\\\":\\\"cmake.outline\\\",\\\"isHidden\\\":false}]\",\"userDataProfiles.state.hidden\":\"[{\\\"id\\\":\\\"workbench.views.profiles.export.preview\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.profiles.import.preview\\\",\\\"isHidden\\\":false}]\",\"terminal.integrated.showTerminalConfigPrompt\":\"false\",\"fileBasedRecommendations/promptedRecommendations\":\"{\\\"python\\\":[\\\"ms-python.python\\\"],\\\"cpp\\\":[\\\"ms-vscode.cpptools-extension-pack\\\"],\\\"plaintext\\\":[\\\"svelte.svelte-vscode\\\"],\\\"makefile\\\":[\\\"ms-vscode.makefile-tools\\\"],\\\"typescript\\\":[\\\"ms-playwright.playwright\\\"]}\",\"fileBasedRecommendations/promptedFileExtensions\":\"[\\\"docx\\\"]\",\"workbench.view.extension.vscode-chatgpt-view-container.state.hidden\":\"[{\\\"id\\\":\\\"vscode-chatgpt.view\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.latex-workshop-activitybar.state.hidden\":\"[{\\\"id\\\":\\\"latex-workshop-commands\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"latex-workshop-structure\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"latex-workshop-snippet-view\\\",\\\"isHidden\\\":false}]\",\"expandSuggestionDocs\":\"false\",\"workbench.view.extension.chatgpt-vscode-view-container.state.hidden\":\"[{\\\"id\\\":\\\"chatgpt-vscode.view\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.makefile__viewContainer.state.hidden\":\"[{\\\"id\\\":\\\"makefile.outline\\\",\\\"isHidden\\\":false}]\",\"memento/workbench.editor.keybindings\":\"{\\\"searchHistory\\\":[\\\"ctrl p\\\",\\\"ctrl \\\",\\\"ctrl e\\\",\\\"@command:workbench.action.newWindow\\\",\\\"alt\\\",\\\"alt c\\\",\\\"alt a\\\",\\\"\\\\\\\"alt+x\\\\\\\"\\\",\\\"alt z\\\",\\\"alt x\\\",\\\"@command:workbench.action.reopenTextEditor\\\",\\\"\\\\\\\"ctrl+shift+t\\\\\\\"\\\",\\\"\\\\\\\"ctrl+s\\\",\\\"repoen\\\",\\\"repo\\\",\\\"reo\\\",\\\"ctrl\\\",\\\"ctrl+s\\\",\\\"re\\\",\\\"reopen\\\",\\\"\\\\\\\"ctrl+x left\\\\\\\"\\\",\\\"\\\\\\\"left\\\\\\\"\\\",\\\"\\\\\\\"backspace backspace\\\\\\\"\\\",\\\"\\\\\\\"backspace\\\\\\\"\\\",\\\"\\\\\\\"ctrl+x shift+win\\\\\\\"\\\",\\\"\\\\\\\"ctrl+x\\\\\\\"\\\",\\\"\\\\\\\"ctrl+enter shift+enter\\\\\\\"\\\",\\\"\\\\\\\"backspace shift+enter\\\\\\\"\\\",\\\"\\\\\\\"shift\\\\\\\"\\\",\\\"\\\\\\\"shift+enter\\\\\\\"\\\",\\\"\\\\\\\"ctrl+enter\\\\\\\"\\\"]}\",\"workbench.view.extension.references-view.state.hidden\":\"[{\\\"id\\\":\\\"references-view.tree\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"CppReferencesView\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.thunder-client.state.hidden\":\"[{\\\"id\\\":\\\"thunder-client-sidebar\\\",\\\"isHidden\\\":false}]\",\"refactorPreview.hidden\":\"[{\\\"id\\\":\\\"refactorPreview\\\",\\\"isHidden\\\":false}]\",\"remote.tunnels.toRestore.ssh-remote+10.166.128.159.-809152916\":\"[{\\\"remoteHost\\\":\\\"127.0.0.1\\\",\\\"remotePort\\\":46533,\\\"localPort\\\":46533,\\\"closeable\\\":true,\\\"localAddress\\\":\\\"127.0.0.1:46533\\\",\\\"protocol\\\":\\\"http\\\",\\\"localUri\\\":{\\\"$mid\\\":1,\\\"path\\\":\\\"/\\\",\\\"scheme\\\":\\\"http\\\",\\\"authority\\\":\\\"127.0.0.1:46533\\\"},\\\"hasRunningProcess\\\":false,\\\"source\\\":{\\\"source\\\":0,\\\"description\\\":\\\"User Forwarded\\\"},\\\"privacy\\\":\\\"private\\\"}]\",\"remote.tunnels.toRestore.ssh-remote+10.166.128.159.-1903093273\":\"[{\\\"remoteHost\\\":\\\"127.0.0.1\\\",\\\"remotePort\\\":37243,\\\"localPort\\\":37243,\\\"closeable\\\":true,\\\"localAddress\\\":\\\"127.0.0.1:37243\\\",\\\"protocol\\\":\\\"http\\\",\\\"localUri\\\":{\\\"$mid\\\":1,\\\"path\\\":\\\"/\\\",\\\"scheme\\\":\\\"http\\\",\\\"authority\\\":\\\"127.0.0.1:37243\\\"},\\\"hasRunningProcess\\\":false,\\\"source\\\":{\\\"source\\\":0,\\\"description\\\":\\\"User Forwarded\\\"},\\\"privacy\\\":\\\"private\\\"},{\\\"remoteHost\\\":\\\"127.0.0.1\\\",\\\"remotePort\\\":42603,\\\"localPort\\\":42603,\\\"closeable\\\":true,\\\"localAddress\\\":\\\"127.0.0.1:42603\\\",\\\"protocol\\\":\\\"http\\\",\\\"localUri\\\":{\\\"$mid\\\":1,\\\"path\\\":\\\"/\\\",\\\"scheme\\\":\\\"http\\\",\\\"authority\\\":\\\"127.0.0.1:42603\\\"},\\\"hasRunningProcess\\\":false,\\\"source\\\":{\\\"source\\\":0,\\\"description\\\":\\\"User Forwarded\\\"},\\\"privacy\\\":\\\"private\\\"},{\\\"remoteHost\\\":\\\"127.0.0.1\\\",\\\"remotePort\\\":35163,\\\"localAddress\\\":\\\"127.0.0.1:35163\\\",\\\"protocol\\\":\\\"http\\\",\\\"localUri\\\":{\\\"$mid\\\":1,\\\"path\\\":\\\"/\\\",\\\"scheme\\\":\\\"http\\\",\\\"authority\\\":\\\"127.0.0.1:35163\\\"},\\\"localPort\\\":35163,\\\"closeable\\\":true,\\\"hasRunningProcess\\\":false,\\\"privacy\\\":\\\"private\\\",\\\"source\\\":{\\\"source\\\":0,\\\"description\\\":\\\"User Forwarded\\\"}}]\",\"extensionsAssistant/deprecated\":\"[\\\"bungcip.better-toml\\\"]\",\"workbench.view.extension.blackbox.state.hidden\":\"[{\\\"id\\\":\\\"blackbox-onboarding\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.sourcery-explorer.state.hidden\":\"[{\\\"id\\\":\\\"sourcery.chat\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sourcery.recipes\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sourcery.rules\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sourcery.rules.treeview\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sourcery.coding_assistant_opt_in\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sourcery.troubleshooting\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sourcery.code_review\\\",\\\"isHidden\\\":false}]\",\"menu.hiddenCommands\":\"{\\\"LayoutControlMenu\\\":[\\\"workbench.action.togglePanel\\\",\\\"workbench.action.toggleSidebarVisibility\\\",\\\"workbench.action.toggleAuxiliaryBar\\\",\\\"workbench.action.customizeLayout\\\"]}\",\"workbench.views.service.sidebar.b1e8f71f-9b01-416e-b0ad-4cd458cf8156.state.hidden\":\"[{\\\"id\\\":\\\"timeline\\\",\\\"isHidden\\\":false}]\",\"remote.tunnels.toRestore.ssh-remote+10.166.128.159.-1952629518\":\"[{\\\"remoteHost\\\":\\\"localhost\\\",\\\"remotePort\\\":35063,\\\"localPort\\\":35063,\\\"closeable\\\":true,\\\"localAddress\\\":\\\"localhost:35063\\\",\\\"protocol\\\":\\\"http\\\",\\\"localUri\\\":{\\\"$mid\\\":1,\\\"path\\\":\\\"/\\\",\\\"scheme\\\":\\\"http\\\",\\\"authority\\\":\\\"localhost:35063\\\"},\\\"hasRunningProcess\\\":false,\\\"source\\\":{\\\"source\\\":0,\\\"description\\\":\\\"User Forwarded\\\"},\\\"privacy\\\":\\\"private\\\"}]\",\"workbench.panel.chatSidebar.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.chat.view.copilot\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.chat.movedView.welcomeView\\\",\\\"isHidden\\\":false}]\",\"remote.tunnels.toRestore.ssh-remote+10.166.128.159.238631570\":\"[{\\\"remoteHost\\\":\\\"localhost\\\",\\\"remotePort\\\":46799,\\\"localAddress\\\":\\\"localhost:46799\\\",\\\"protocol\\\":\\\"http\\\",\\\"localUri\\\":{\\\"$mid\\\":1,\\\"path\\\":\\\"/\\\",\\\"scheme\\\":\\\"http\\\",\\\"authority\\\":\\\"localhost:46799\\\"},\\\"localPort\\\":46799,\\\"closeable\\\":true,\\\"hasRunningProcess\\\":false,\\\"privacy\\\":\\\"private\\\",\\\"source\\\":{\\\"source\\\":0,\\\"description\\\":\\\"User Forwarded\\\"}}]\",\"remote.tunnels.toRestore.ssh-remote+10.166.128.159.-804745401\":\"[{\\\"remoteHost\\\":\\\"localhost\\\",\\\"remotePort\\\":36003,\\\"localPort\\\":36003,\\\"closeable\\\":true,\\\"localAddress\\\":\\\"localhost:36003\\\",\\\"protocol\\\":\\\"http\\\",\\\"localUri\\\":{\\\"$mid\\\":1,\\\"path\\\":\\\"/\\\",\\\"scheme\\\":\\\"http\\\",\\\"authority\\\":\\\"localhost:36003\\\"},\\\"hasRunningProcess\\\":false,\\\"source\\\":{\\\"source\\\":0,\\\"description\\\":\\\"User Forwarded\\\"},\\\"privacy\\\":\\\"private\\\"}]\",\"workbench.view.extension.github-actions.state.hidden\":\"[{\\\"id\\\":\\\"github-actions.current-branch\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github-actions.workflows\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github-actions.settings\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github-actions.empty-view\\\",\\\"isHidden\\\":false}]\",\"workbench.activityBar.location\":\"default\",\"inline-chat-history\":\"[\\\"/fix Cannot find module './dif?in-svelte' or its corresponding type declarations.\\\",\\\"/fix Type 'Line' is missing the following properties from type 'Line[]': length, pop, push, concat, and 35 more.\\\",\\\"/fix 'attemptFetch' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.\\\"]\",\"workbench.view.extension.1-cloudCodeContainer.state.hidden\":\"[{\\\"id\\\":\\\"cloudcode.unified.kubernetes.localDevExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cloudcode.unified.kubectlExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cloudcode.unified.cloudRunExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cloudcode.unified.apiExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cloudcode.unified.secretsExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cloudcode.unified.gceExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cloudcode.unified.apigee.explorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cloudcode.unified.gcfExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cloudcode.unified.awsLambdaImporterExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cloudcode.unified.cloudStorageExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cloudcode.unified.sourceProtectExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cloudcode.unified.mcdcSources\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cloudcode.helpAndFeedbackExplorer\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.1-cloudCodeDuetAIChatViewContainer.state.hidden\":\"[{\\\"id\\\":\\\"cloudcode.duetAI.chatView\\\",\\\"isHidden\\\":false}]\",\"workbench.welcomePage.hiddenCategories\":\"[\\\"googlecloudtools.cloudcode#duet-ai\\\"]\",\"workbench.activity.showAccounts\":\"true\",\"remote.tunnels.toRestore.ssh-remote+10.166.128.159.977552925\":\"[{\\\"remoteHost\\\":\\\"localhost\\\",\\\"remotePort\\\":39529,\\\"localAddress\\\":\\\"localhost:39529\\\",\\\"protocol\\\":\\\"http\\\",\\\"localUri\\\":{\\\"$mid\\\":1,\\\"path\\\":\\\"/\\\",\\\"scheme\\\":\\\"http\\\",\\\"authority\\\":\\\"localhost:39529\\\"},\\\"localPort\\\":39529,\\\"closeable\\\":true,\\\"hasRunningProcess\\\":false,\\\"privacy\\\":\\\"private\\\",\\\"source\\\":{\\\"source\\\":0,\\\"description\\\":\\\"User Forwarded\\\"}}]\",\"remote.tunnels.toRestore.ssh-remote+10.166.128.159.423726537\":\"[{\\\"remoteHost\\\":\\\"localhost\\\",\\\"remotePort\\\":41159,\\\"localPort\\\":41159,\\\"closeable\\\":true,\\\"localAddress\\\":\\\"localhost:41159\\\",\\\"protocol\\\":\\\"http\\\",\\\"localUri\\\":{\\\"$mid\\\":1,\\\"path\\\":\\\"/\\\",\\\"scheme\\\":\\\"http\\\",\\\"authority\\\":\\\"localhost:41159\\\"},\\\"runningProcess\\\":\\\"/home/huylq/.vscode-server/bin/0ee08df0cf4527e40edc9aa28f4b5bd38bbff2b2/node\\\\u0000-r\\\\u0000/home/huylq/.vscode-server/extensions/wallabyjs.console-ninja-1.0.271/webview/tokenizer.wasm\\\\u0000/home/huylq/.vscode-server/extensions/wallabyjs.console-ninja-1.0.271/out/extension/index.js\\\\u0000\\\",\\\"hasRunningProcess\\\":true,\\\"pid\\\":2189398,\\\"source\\\":{\\\"source\\\":0,\\\"description\\\":\\\"User Forwarded\\\"},\\\"privacy\\\":\\\"private\\\"}]\",\"remote.tunnels.toRestore.ssh-remote+10.166.128.159.823777105\":\"[{\\\"remoteHost\\\":\\\"localhost\\\",\\\"remotePort\\\":44349,\\\"localAddress\\\":\\\"localhost:44349\\\",\\\"protocol\\\":\\\"http\\\",\\\"localUri\\\":{\\\"$mid\\\":1,\\\"path\\\":\\\"/\\\",\\\"scheme\\\":\\\"http\\\",\\\"authority\\\":\\\"localhost:44349\\\"},\\\"localPort\\\":44349,\\\"closeable\\\":true,\\\"hasRunningProcess\\\":false,\\\"privacy\\\":\\\"private\\\",\\\"source\\\":{\\\"source\\\":0,\\\"description\\\":\\\"User Forwarded\\\"}}]\",\"tabs-list-width-horizontal\":\"46\",\"workbench.view.extension.nextjs-explorer.state.hidden\":\"[{\\\"id\\\":\\\"nextjs.listFilesView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"nextjs.listRoutesView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"nextjs.feedbackView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"nextjs.listComponentsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"nextjs.listHooksView\\\",\\\"isHidden\\\":true}]\",\"workbench.view.extension.cph-judge-view-container.state.hidden\":\"[{\\\"id\\\":\\\"cph.judgeView\\\",\\\"isHidden\\\":false}]\",\"settingsEditor2.splitViewWidth\":\"312\",\"Comments.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.comments\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.liveshare.state.hidden\":\"[{\\\"id\\\":\\\"liveshare.session\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"liveshare.help\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"liveshare.devtools\\\",\\\"isHidden\\\":false}]\",\"workbench.panel.chat.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.chat.view.copilot\\\",\\\"isHidden\\\":false}]\",\"workbench.panel.chatEditing.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.chat.view.edits\\\",\\\"isHidden\\\":false}]\",\"extension.features.state\":\"{\\\"github.copilot-chat\\\":{\\\"languageModels\\\":{\\\"disabled\\\":false,\\\"accessTimes\\\":[]},\\\"copilot\\\":{\\\"disabled\\\":false,\\\"accessTimes\\\":[1745300270063,1745328818882,1745328923482,1745328965884]}}}\",\"workbench.view.extension.playwrightContainer.state.hidden\":\"[{\\\"id\\\":\\\"pw.extension.locatorsView\\\",\\\"isHidden\\\":false}]\"}}"}